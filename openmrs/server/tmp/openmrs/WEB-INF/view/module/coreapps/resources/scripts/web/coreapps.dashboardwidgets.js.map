{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///coreapps.dashboardwidgets.js","webpack:///./omod/src/main/web/dashboardwidgets/dataintegrityviolations/index.js","webpack:///./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/index.js","webpack:///./omod/src/main/web/dashboardwidgets/obsacrossencounters/index.js","webpack:///./omod/src/main/web/dashboardwidgets/obsgraph/index.js","webpack:///./omod/src/main/web/dashboardwidgets/programs/index.js","webpack:///./omod/src/main/web/dashboardwidgets/programstatistics/index.js","webpack:///./omod/src/main/web/dashboardwidgets/programstatus/index.js","webpack:///./omod/src/main/web/dashboardwidgets/relationships/index.js","webpack:///./omod/src/main/web/dashboardwidgets/visitbyencountertype/index.js","webpack:///./omod/src/main/web/dashboardwidgets/dashboardwidgetscommons.service.js","webpack:///./omod/src/main/web/dashboardwidgets/dataintegrityviolations/dataintegrityviolations.component.js","webpack:///./omod/src/main/web/dashboardwidgets/dataintegrityviolations/dataintegrityviolations.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/datepicker/datepicker.component.js","webpack:///./omod/src/main/web/dashboardwidgets/datepicker/datepicker.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/datepicker/index.js","webpack:///./omod/src/main/web/dashboardwidgets/datepicker/locales/bootstrap-datepicker.ht.js","webpack:///./omod/src/main/web/dashboardwidgets/index.js","webpack:///./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/latestobsforconceptlist.component.js","webpack:///./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/latestobsforconceptlist.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/obsacrossencounters/obsacrossencounters.component.js","webpack:///./omod/src/main/web/dashboardwidgets/obsacrossencounters/obsacrossencounters.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/obsgraph/obsgraph.component.js","webpack:///./omod/src/main/web/dashboardwidgets/obsgraph/obsgraph.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/programs/programs.component.js","webpack:///./omod/src/main/web/dashboardwidgets/programs/programs.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/programstatistics/programstatistics.component.js","webpack:///./omod/src/main/web/dashboardwidgets/programstatistics/programstatistics.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/programstatus/programstatus.component.js","webpack:///./omod/src/main/web/dashboardwidgets/programstatus/programstatus.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/relationships/relationships.component.js","webpack:///./omod/src/main/web/dashboardwidgets/relationships/relationships.controller.js","webpack:///./omod/src/main/web/dashboardwidgets/visitbyencountertype/visitbyencountertype.component.js","webpack:///./omod/src/main/web/dashboardwidgets/visitbyencountertype/visitbyencountertype.controller.js","webpack:///./~/moment/locale ^\\.\\/.*$","webpack:///./omod/src/main/web/dashboardwidgets/datepicker/datepicker.html","webpack:///./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/latestobsforconceptlist.html","webpack:///./omod/src/main/web/dashboardwidgets/obsacrossencounters/obsacrossencounters.html","webpack:///./omod/src/main/web/dashboardwidgets/obsgraph/obsgraph.html","webpack:///./omod/src/main/web/dashboardwidgets/programs/programs.html","webpack:///./omod/src/main/web/dashboardwidgets/programstatistics/programstatistics.html","webpack:///./omod/src/main/web/dashboardwidgets/programstatus/programstatus.html","webpack:///./omod/src/main/web/dashboardwidgets/relationships/relationships.html","webpack:///./omod/src/main/web/dashboardwidgets/visitbyencountertype/visitbyencountertype.html","webpack:///./omod/src/main/web/dashboardwidgets/dashboardwidgets.services.js"],"names":["root","factory","exports","module","define","amd","this","webpackJsonpcoreapps__name_","125","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_angular","_angular2","_angularjsOpenmrsApi","_angularjsOpenmrsApi2","_dataintegrityviolations","angular","openmrsApi","component","DatatIntegrityViolationsComponent","selector","name","126","_dashboardwidgets","_dashboardwidgets2","_latestobsforconceptlist","commons","LatestObsForConceptListComponent","127","_obsacrossencounters","ObsAcrossEncountersComponent","128","_angularChart","_angularChart2","_obsgraph","chartjs","ObsGraphComponent","config","ChartJsProvider","setOptions","chartColors","elements","line","tension","129","_programs","openmrsTranslate","ProgramsComponent","130","_programstatistics","ProgramStatisticsComponent","131","_datepicker","_datepicker2","_programstatus","datepicker","ProgramStatusComponent","132","_typeahead","_typeahead2","_relationships","typeahead","RelationshipsComponent","133","_visitbyencountertype","VisitByEncounterTypeComponent","146","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","WidgetsCommons","date","days","dateToDaysAgo","time","Date","getTime","seconds","Math","floor","interval","maxAge","values","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","includes","parseInt","replace","err","return","today","indexOf","setDate","getDate","setMonth","getMonth","getYear","147","_dataintegrityviolations2","_dataintegrityviolations3","_dataintegrityviolations4","template","controller","DataIntegrityViolationsController","bindings","148","openmrsRest","assign","$inject","_this","dataViolations","getServerUrl","then","serverUrl","result","maxResults","index","patientUuid","v","limit","resp","push","results","149","DatepickerComponent","_datepicker3","_datepicker4","ngModel","format","language","startDate","endDate","clearBtn","150","$","DatepickerController","$document","$element","$scope","$filter","$timeout","ready","convertDateFormat","autoclose","container","on","e","$apply","stripTime","updateDates","getFullYear","dateFormat","mappings","MMMM","MMM","MM","M","yyyy","yy","EEEE","EEE","regex","mapping","substring","match","RegExp","call","151","152","jQuery","daysShort","dates","daysMin","months","monthsShort","suffix","meridiem","weekStart","153","DataIntegrityViolations","_latestobsforconceptlist2","_obsacrossencounters2","_obsgraph2","_programs2","_programstatistics2","_programstatus2","_relationships2","_visitbyencountertype2","element","document","getElementsByClassName","bootstrap","dashboardwidget","154","_latestobsforconceptlist3","_latestobsforconceptlist4","LatestObsForConceptListController","scope","155","widgetsCommons","maxAgeInDays","maxConceptCount","setBaseAppPath","obs","concepts","patient","concept","isUndefined","obsDatetime","datatype","uuid","isDefined","display","156","_obsacrossencounters3","_obsacrossencounters4","157","ObsAcrossEncountersController","fetchConcepts","fetchEncounters","getConceptWithShortName","getFull","fromdate","get","order","getEncounters","maxAgeToDate","response","_this2","maxRecords","commaDelimitedConcepts","forEach","names","encounters","encounterDatetime","encounter","nullRow","getConfigConceptsAsArray","obsValue","_this3","getObservationForConcept","enc","observations","conceptUuid","groupMember","groupMembers","j","158","ObsGraphController","_obsgraph3","159","data","series","labels","maxAgeToDays","conceptId","obss","unshift","160","_programs3","_programs4","161","ProgramsController","programs","patientPrograms","showAddProgram","canEnrollInProgram","input","program","supportedPrograms","activate","fetchPrivileges","fetchPrograms","dashboardPage","fetchPatientPrograms","bind","determineUnenrolledPrograms","user","isArray","privileges","some","p","getPrograms","voided","getPatientPrograms","getMaxRecords","_this4","_this5","patientProgram","activeProgramsUuids","unenrolledPrograms","programUuid","enableProgramDashboards","destinationPage","window","href","Handlebars","compile","dashboard","url","location","162","_programstatistics3","_programstatistics4","163","ProgramStatisticsController","ctrl","getEverEnrolledInProgram","getCurrentlyEnrolledInProgram","everEnrolled","count","onDate","currentlyEnrolled","164","_programstatus3","_programstatus4","165","_moment","_moment2","ProgramStatusController","$window","$q","vPatientProgram","loaded","programLocations","deleted","minEnrollmentDate","maxCompletionDate","canEditProgram","statesByUuid","sortedStatesByWorkflow","dateEnrolled","dateCompleted","outcome","initialWorkflowStateByWorkflow","resetWindowStates","enrollmentLocation","changeToStateByWorkflow","fetchLocations","fetchProgram","fetchOutcomes","fetchPatientProgram","canDeleteProgram","currentStatus","cancelAllEditModes","setInputsToStartingValues","edit","enrollment","workflowUuid","workflow","expanded","statesByWorkflow","workflows","states","state","getPatientProgramFromPatientProgramList","convertDateEnrolledAndDateCompletedStringsToDates","groupAndSortPatientStates","tag","locationTag","outcomesConcept","_this6","programOutcomes","answers","_this7","displayActiveProgram","getNextDay","getPreviousDay","_this8","reloadPage","disableReloadPage","_this9","needToReloadPage","_this10","confirmDelete","voidPatientState","_this11","terminal","workflowState","_this12","remove","patientStateUuid","voidReason","stateUuid","createPatientState","_this13","currentState","initial","_this14","getWorkflowForState","patientState","dayAfterStartDate","newEntry","mostRecentStateChangeDate","updatePatientProgram","add","toDate","isSame","isMostRecentProgram","reload","166","RelationshipsController","_relationships3","_relationships4","167","providerPage","types","hasEditPrivileges","removeFlag","showFindOtherPerson","searchPerson","otherPerson","relatedPersons","relationshipType","showSaveButton","baseAppPath","allowedTypes","includeRelationshipTypes","getRelationships","person","checkForProviders","rel","relationship","type","toPerson","personB","isProvider","relationships","personA","isPatient","displayAIsToB","aIsToB","personUuid","displayBIsToA","bIsToA","editPrivilege","privilege","provider","personName","q","updateProviderInfo","searchString","searchedPersons","relationshipsContain","relTypeA","relTypeB","findRelTypeByName","item","$onInit","create","relUuid","tempRelationships","navigateTo","minSearchLength","getPersons","$item","$model","$label","168","_visitbyencountertype3","_visitbyencountertype4","169","VisitByEncounterTypeController","getVisits","visits","fromStartDate","encounterTypes","getCombineEncounterTypes","vis","visit","startDatetime","encounterType","_vis","combineEncounterTypes","277","webpackContext","req","webpackContextResolve","id","map","Error","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","keys","resolve","278","279","280","281","282","283","284","285","286","287","4","services","_dashboardwidgetscommons","_dashboardwidgetscommons2","service"],"mappings":"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,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,gBAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,UAAA,GACAC,aAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,UAAA,GACAC,aAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,QAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IlCs6FA3O,GAAe4O,KAAO,WACrB,MAAOvtB,QAAOutB,KAAKxO,IAEpBJ,EAAe6O,QAAU3O,EACzBxf,EAAOD,QAAUuf,EACjBA,EAAeG,GAAK,KmC3pGpB2O,InCgqGM,SAAUpuB,EAAQD,GAExBC,EAAOD,QAAU,4uBoClqGjBsuB,IpCuqGM,SAAUruB,EAAQD,GAExBC,EAAOD,QAAU,4MqCzqGjBuuB,IrC8qGM,SAAUtuB,EAAQD,GAExBC,EAAOD,QAAU,6esChrGjBwuB,ItCqrGM,SAAUvuB,EAAQD,GAExBC,EAAOD,QAAU,6mBuCvrGjByuB,IvC4rGM,SAAUxuB,EAAQD,GAExBC,EAAOD,QAAU,yXwC9rGjB0uB,IxCmsGM,SAAUzuB,EAAQD,GAExBC,EAAOD,QAAU,kwEyCrsGjB2uB,IzC0sGM,SAAU1uB,EAAQD,GAExBC,EAAOD,QAAU,0c0C5sGjB4uB,I1CitGM,SAAU3uB,EAAQD,GAExBC,EAAOD,QAAU,63a2CntGjB6uB,I3CwtGM,SAAU5uB,EAAQD,GAExBC,EAAOD,QAAU,g5HAIX8uB,IACA,SAAU7uB,EAAQD,GAExBC,EAAOD,QAAU,+f4CjuGjB+uB,E5CsuGM,SAAU9uB,EAAQD,EAASO,GAEjC,YAeA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAZvFG,OAAOC,eAAeb,EAAS,cAC7Bc,OAAO,G4CzuGT,IAAIkuB,GAAW5tB,EAAQnB,GAEvB+uB,EAAAxuB,EAAmCiF,G5C8uG/BwpB,EAA2B1uB,EAAoB,KAE/C2uB,EAA4B1uB,EAAuByuB,GAInDD,EAAWhuB,EAAUL,QAAQV,OAAO,+BAExC+uB,GAASG,QAAQ,iBAAkBD,EAA0BvuB,SAE7DX,EAAQW,QAAUquB,EAASvtB,QAIxB","file":"coreapps.dashboardwidgets.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashboardwidgets\"] = factory();\n\telse\n\t\troot[\"coreapps\"] = root[\"coreapps\"] || {}, root[\"coreapps\"][\"dashboardwidgets\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashboardwidgets\"] = factory();\n\telse\n\t\troot[\"coreapps\"] = root[\"coreapps\"] || {}, root[\"coreapps\"][\"dashboardwidgets\"] = factory();\n})(this, function() {\nreturn webpackJsonpcoreapps__name_([0],{\n\n/***/ 125:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _dataintegrityviolations = __webpack_require__(147);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.dataintegrityviolations\", [_angularjsOpenmrsApi2.default]).component(_dataintegrityviolations.DatatIntegrityViolationsComponent.selector, _dataintegrityviolations.DatatIntegrityViolationsComponent).name;\n\n/***/ }),\n\n/***/ 126:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _dashboardwidgets = __webpack_require__(4);\n\nvar _dashboardwidgets2 = _interopRequireDefault(_dashboardwidgets);\n\nvar _latestobsforconceptlist = __webpack_require__(154);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.latestobsforconceptlist\", [_angularjsOpenmrsApi2.default, _dashboardwidgets2.default]).component(_latestobsforconceptlist.LatestObsForConceptListComponent.selector, _latestobsforconceptlist.LatestObsForConceptListComponent).name;\n\n/***/ }),\n\n/***/ 127:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _dashboardwidgets = __webpack_require__(4);\n\nvar _dashboardwidgets2 = _interopRequireDefault(_dashboardwidgets);\n\nvar _obsacrossencounters = __webpack_require__(156);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.obsacrossencounters\", [_angularjsOpenmrsApi2.default, _dashboardwidgets2.default]).component(_obsacrossencounters.ObsAcrossEncountersComponent.selector, _obsacrossencounters.ObsAcrossEncountersComponent).name;\n\n/***/ }),\n\n/***/ 128:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _angularChart = __webpack_require__(134);\n\nvar _angularChart2 = _interopRequireDefault(_angularChart);\n\nvar _dashboardwidgets = __webpack_require__(4);\n\nvar _dashboardwidgets2 = _interopRequireDefault(_dashboardwidgets);\n\nvar _obsgraph = __webpack_require__(158);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.obsgraph\", [_angularjsOpenmrsApi2.default, _dashboardwidgets2.default, _angularChart2.default]).component(_obsgraph.ObsGraphComponent.selector, _obsgraph.ObsGraphComponent).config(['ChartJsProvider', function (ChartJsProvider) {\n\tChartJsProvider.setOptions({\n\t\tchartColors: ['#00463f'],\n\t\telements: {\n\t\t\tline: {\n\t\t\t\ttension: 0\n\t\t\t}\n\t\t}\n\t});\n}]).name;\n\n/***/ }),\n\n/***/ 129:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _programs = __webpack_require__(160);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.programs\", [_angularjsOpenmrsApi2.default, _angularjsOpenmrsApi2.default]).component(_programs.ProgramsComponent.selector, _programs.ProgramsComponent).name;\n\n/***/ }),\n\n/***/ 130:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _programstatistics = __webpack_require__(162);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.programstatistics\", [_angularjsOpenmrsApi2.default, _angularjsOpenmrsApi2.default]).component(_programstatistics.ProgramStatisticsComponent.selector, _programstatistics.ProgramStatisticsComponent).name;\n\n/***/ }),\n\n/***/ 131:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _datepicker = __webpack_require__(151);\n\nvar _datepicker2 = _interopRequireDefault(_datepicker);\n\nvar _programstatus = __webpack_require__(164);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.programstatus\", [_angularjsOpenmrsApi2.default, _datepicker2.default, _angularjsOpenmrsApi2.default]).component(_programstatus.ProgramStatusComponent.selector, _programstatus.ProgramStatusComponent).name;\n\n/***/ }),\n\n/***/ 132:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _typeahead = __webpack_require__(141);\n\nvar _typeahead2 = _interopRequireDefault(_typeahead);\n\nvar _relationships = __webpack_require__(166);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.relationships\", [_angularjsOpenmrsApi2.default, _typeahead2.default, _angularjsOpenmrsApi2.default]).component(_relationships.RelationshipsComponent.selector, _relationships.RelationshipsComponent).name;\n\n/***/ }),\n\n/***/ 133:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\nvar _dashboardwidgets = __webpack_require__(4);\n\nvar _dashboardwidgets2 = _interopRequireDefault(_dashboardwidgets);\n\nvar _visitbyencountertype = __webpack_require__(168);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.visitbyencountertype\", [_angularjsOpenmrsApi2.default, _dashboardwidgets2.default]).component(_visitbyencountertype.VisitByEncounterTypeComponent.selector, _visitbyencountertype.VisitByEncounterTypeComponent).name;\n\n/***/ }),\n\n/***/ 146:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar WidgetsCommons = function () {\n    function WidgetsCommons() {\n        _classCallCheck(this, WidgetsCommons);\n    }\n\n    _createClass(WidgetsCommons, [{\n        key: \"dateToDaysAgoMessage\",\n\n\n        // Method used to define days since given date and return it as message\n        value: function dateToDaysAgoMessage(date) {\n            var days = this.dateToDaysAgo(date);\n\n            if (days == 0) {\n                return \"today\";\n            } else if (days == 1) {\n                return days + \" day ago\";\n            } else {\n                return days + \" days ago\";\n            }\n        }\n    }, {\n        key: \"dateToDaysAgo\",\n\n\n        // Method used to define days since given date\n        value: function dateToDaysAgo(date) {\n            var time = new Date(date).getTime();\n            var seconds = Math.floor((new Date().getTime() - time) / 1000);\n            var interval = Math.floor(seconds / 86400);\n            var days = 0;\n            if (interval > 1) {\n                days = interval;\n            }\n            return days;\n        }\n    }, {\n        key: \"maxAgeToDays\",\n\n\n        // Method used to parse maxAge to day count\n        value: function maxAgeToDays(maxAge) {\n            if (typeof maxAge === 'undefined') {\n                return undefined;\n            } else {\n                var days = 0;\n                var values = maxAge.split(\" \");\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var value = _step.value;\n\n                        if (value.includes(\"d\")) {\n                            days += parseInt(value.replace(\"d\", \"\"));\n                        }\n                        if (value.includes(\"w\")) {\n                            days += parseInt(value.replace(\"w\", \"\")) * 7;\n                        }\n                        if (value.includes(\"m\")) {\n                            days += parseInt(value.replace(\"m\", \"\")) * 30;\n                        }\n                        if (value.includes(\"y\")) {\n                            days += parseInt(value.replace(\"y\", \"\")) * 365;\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                return days;\n            }\n        }\n    }, {\n        key: \"maxAgeToDate\",\n        value: function maxAgeToDate(maxAge) {\n            if (typeof maxAge === 'undefined') return null;\n\n            var today = new Date();\n            if (maxAge.indexOf('d') !== -1) {\n                maxAge = maxAge.replace('d', '');\n                today.setDate(today.getDate() - parseInt(maxAge));\n            } else if (maxAge.indexOf('w') !== -1) {\n                maxAge = maxAge.replace('w', '');\n                today.setDate(today.getDate() - parseInt(maxAge) * 7);\n            } else if (maxAge.indexOf('m') !== -1) {\n                maxAge = maxAge.replace('m', '');\n                today.setMonth(today.getMonth() - parseInt(maxAge));\n            } else if (maxAge.indexOf('y') !== -1) {\n                maxAge = maxAge.replace('y', '');\n                today.setDate(today.getYear() - parseInt(maxAge));\n            } else {\n                return null;\n            }\n            return today;\n        }\n    }]);\n\n    return WidgetsCommons;\n}();\n\nexports.default = WidgetsCommons;\n\n/***/ }),\n\n/***/ 147:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DatatIntegrityViolationsComponent = undefined;\n\nvar _dataintegrityviolations = __webpack_require__(148);\n\nvar _dataintegrityviolations2 = _interopRequireDefault(_dataintegrityviolations);\n\nvar _dataintegrityviolations3 = __webpack_require__(278);\n\nvar _dataintegrityviolations4 = _interopRequireDefault(_dataintegrityviolations3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DatatIntegrityViolationsComponent = exports.DatatIntegrityViolationsComponent = {\n    template: _dataintegrityviolations4.default,\n    controller: _dataintegrityviolations2.default,\n    selector: 'dataintegrityviolations',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 148:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DataIntegrityViolationsController = function () {\n    DataIntegrityViolationsController.$inject = [\"openmrsRest\"];\n    function DataIntegrityViolationsController(openmrsRest) {\n        'ngInject';\n\n        _classCallCheck(this, DataIntegrityViolationsController);\n\n        Object.assign(this, { openmrsRest: openmrsRest });\n    }\n\n    _createClass(DataIntegrityViolationsController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            var _this = this;\n\n            this.dataViolations = [];\n\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n            this.openmrsRest.getServerUrl().then(function (result) {\n                _this.serverUrl = result;\n            });\n\n            // Set default maxResults if not defined\n            if (angular.isUndefined(this.config.maxResults)) {\n                this.config.maxResults = 6;\n            }\n\n            this.openmrsRest.list('dataintegrity/integrityresults', { patient: this.config.patientUuid, v: 'full', limit: this.config.maxResults }).then(function (resp) {\n                for (var index = 0; index < resp.results.length; index++) {\n                    _this.dataViolations.push(resp.results[index]);\n                }\n            });\n        }\n    }]);\n\n    return DataIntegrityViolationsController;\n}();\n\nexports.default = DataIntegrityViolationsController;\n\n/***/ }),\n\n/***/ 149:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DatepickerComponent = undefined;\n\nvar _datepicker = __webpack_require__(150);\n\nvar _datepicker2 = _interopRequireDefault(_datepicker);\n\nvar _datepicker3 = __webpack_require__(279);\n\nvar _datepicker4 = _interopRequireDefault(_datepicker3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DatepickerComponent = exports.DatepickerComponent = {\n    template: _datepicker4.default,\n    controller: _datepicker2.default,\n    selector: 'openmrsDatepicker',\n    bindings: {\n        ngModel: '=',\n        format: '@',\n        language: '@',\n        startDate: '<',\n        endDate: '<',\n        clearBtn: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 150:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DatepickerController = function () {\n    DatepickerController.$inject = [\"$document\", \"$element\", \"$scope\", \"$filter\", \"$timeout\", \"openmrsTranslate\"];\n    function DatepickerController($document, $element, $scope, $filter, $timeout, openmrsTranslate) {\n        'ngInject';\n\n        _classCallCheck(this, DatepickerController);\n\n        Object.assign(this, { $document: $document, $element: $element, $scope: $scope, $filter: $filter, $timeout: $timeout, openmrsTranslate: openmrsTranslate });\n    }\n\n    _createClass(DatepickerController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            var _this = this;\n\n            this.$document.ready(function () {\n                _this.openmrsTranslate.getLanguage().then(function (language) {\n                    $(_this.$element).datepicker({\n                        format: _this.convertDateFormat(_this.format),\n                        autoclose: true,\n                        container: \"html\",\n                        language: language,\n                        clearBtn: _this.clearBtn\n                    }).on(\"changeDate\", function (e) {\n                        if (e.date != null) {\n                            if (_this.ngModel == null || _this.stripTime(_this.ngModel).getTime() !== _this.stripTime(e.date).getTime()) {\n                                //apply changes if not triggered by the watch\n                                _this.$scope.$apply(function () {\n                                    _this.ngModel = _this.stripTime(e.date);\n                                });\n                            }\n                        }\n                        // clear out if necessary if set to null and model isn't null\n                        else if (_this.ngModel != null) {\n                                _this.$timeout(function () {\n                                    _this.ngModel = null;\n                                });\n                            }\n                    });\n\n                    _this.$scope.$watch(function () {\n                        return _this.ngModel;\n                    }, function (value) {\n                        _this.updateDates();\n                    });\n\n                    _this.$scope.$watch(function () {\n                        return _this.startDate;\n                    }, function (value) {\n                        _this.updateDates();\n                    });\n\n                    _this.$scope.$watch(function () {\n                        return _this.endDate;\n                    }, function (value) {\n                        _this.updateDates();\n                    });\n                });\n            });\n        }\n    }, {\n        key: 'updateDates',\n        value: function updateDates() {\n            //I need to update all at once due to a bug in the datepicker, which resets the selected date.\n            $(this.$element).datepicker(\"setStartDate\", this.stripTime(this.startDate));\n            $(this.$element).datepicker(\"setEndDate\", this.stripTime(this.endDate));\n            $(this.$element).datepicker(\"setDate\", this.stripTime(this.ngModel));\n        }\n    }, {\n        key: 'stripTime',\n        value: function stripTime(date) {\n            if (date == null) {\n                return null;\n            } else {\n                return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n            }\n        }\n    }, {\n        key: 'convertDateFormat',\n        value: function convertDateFormat(dateFormat) {\n            var mappings = {\n                \"MMMM\": \"MM\",\n                \"MMM\": \"M\",\n                \"MM\": \"mm\",\n                \"M\": \"m\",\n                \"yyyy\": \"yy\",\n                \"yy\": \"y\",\n                'EEEE': 'DD',\n                'EEE': 'D'\n            };\n\n            var regex = \"\";\n            for (var mapping in mappings) {\n                regex = regex + mapping + '|';\n            }\n            regex = regex.substring(0, regex.length - 1);\n\n            dateFormat = dateFormat.replace(new RegExp(regex, \"g\"), function (match) {\n                if (mappings[match]) {\n                    return mappings[match];\n                } else {\n                    return match;\n                }\n            });\n            return dateFormat;\n        }\n    }]);\n\n    return DatepickerController;\n}();\n\nexports.default = DatepickerController;\n;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 151:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularjsOpenmrsApi = __webpack_require__(3);\n\nvar _angularjsOpenmrsApi2 = _interopRequireDefault(_angularjsOpenmrsApi);\n\n__webpack_require__(170);\n\n__webpack_require__(290);\n\n__webpack_require__(171);\n\n__webpack_require__(172);\n\n__webpack_require__(173);\n\n__webpack_require__(174);\n\n__webpack_require__(175);\n\n__webpack_require__(176);\n\n__webpack_require__(177);\n\n__webpack_require__(178);\n\n__webpack_require__(179);\n\n__webpack_require__(180);\n\n__webpack_require__(181);\n\n__webpack_require__(182);\n\n__webpack_require__(183);\n\n__webpack_require__(184);\n\n__webpack_require__(185);\n\n__webpack_require__(186);\n\n__webpack_require__(187);\n\n__webpack_require__(188);\n\n__webpack_require__(189);\n\n__webpack_require__(190);\n\n__webpack_require__(191);\n\n__webpack_require__(192);\n\n__webpack_require__(193);\n\n__webpack_require__(194);\n\n__webpack_require__(195);\n\n__webpack_require__(196);\n\n__webpack_require__(197);\n\n__webpack_require__(198);\n\n__webpack_require__(199);\n\n__webpack_require__(200);\n\n__webpack_require__(201);\n\n__webpack_require__(202);\n\n__webpack_require__(203);\n\n__webpack_require__(204);\n\n__webpack_require__(205);\n\n__webpack_require__(206);\n\n__webpack_require__(207);\n\n__webpack_require__(208);\n\n__webpack_require__(209);\n\n__webpack_require__(210);\n\n__webpack_require__(211);\n\n__webpack_require__(212);\n\n__webpack_require__(213);\n\n__webpack_require__(214);\n\n__webpack_require__(215);\n\n__webpack_require__(216);\n\n__webpack_require__(217);\n\n__webpack_require__(218);\n\n__webpack_require__(219);\n\n__webpack_require__(220);\n\n__webpack_require__(221);\n\n__webpack_require__(222);\n\n__webpack_require__(223);\n\n__webpack_require__(224);\n\n__webpack_require__(225);\n\n__webpack_require__(226);\n\n__webpack_require__(227);\n\n__webpack_require__(228);\n\n__webpack_require__(229);\n\n__webpack_require__(230);\n\n__webpack_require__(152);\n\nvar _datepicker = __webpack_require__(149);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets.datepicker\", [_angularjsOpenmrsApi2.default]).component(_datepicker.DatepickerComponent.selector, _datepicker.DatepickerComponent).name;\n\n/***/ }),\n\n/***/ 152:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery) {\n\n/**\n * Creole translation for bootstrap-datetimepicker>\n * (Not provided by standard npm install of bootstrap-datepicker)\n */\n(function ($) {\n    $.fn.datepicker.dates['ht'] = {\n        days: [\"dimanch\", \"lendi\", \"madi\", \"mèkredi\", \"jedi\", \"vandredi\", \"samdi\"],\n        daysShort: [\"dim\", \"len\", \"mad\", \"mek\", \"jed\", \"van\", \"sam\"],\n        daysMin: [\"d\", \"l\", \"ma\", \"me\", \"j\", \"v\", \"s\", \"d\"],\n        months: [\"janvye\", \"fevriye\", \"mas\", \"avril\", \"me\", \"jen\", \"jiyè\", \"out\", \"septanm\", \"oktòb\", \"novanm\", \"desanm\"],\n        monthsShort: [\"jan\", \"fev\", \"mas\", \"avr\", \"me\", \"jen\", \"jiy\", \"out\", \"sep\", \"okt\", \"nov\", \"des\"],\n        today: \"Jodi a\",\n        suffix: [],\n        meridiem: [\"am\", \"pm\"],\n        weekStart: 1,\n        format: \"dd/mm/yyyy\"\n    };\n})(jQuery);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 153:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _dataintegrityviolations = __webpack_require__(125);\n\nvar _dataintegrityviolations2 = _interopRequireDefault(_dataintegrityviolations);\n\nvar _latestobsforconceptlist = __webpack_require__(126);\n\nvar _latestobsforconceptlist2 = _interopRequireDefault(_latestobsforconceptlist);\n\nvar _obsacrossencounters = __webpack_require__(127);\n\nvar _obsacrossencounters2 = _interopRequireDefault(_obsacrossencounters);\n\nvar _obsgraph = __webpack_require__(128);\n\nvar _obsgraph2 = _interopRequireDefault(_obsgraph);\n\nvar _programs = __webpack_require__(129);\n\nvar _programs2 = _interopRequireDefault(_programs);\n\nvar _programstatistics = __webpack_require__(130);\n\nvar _programstatistics2 = _interopRequireDefault(_programstatistics);\n\nvar _programstatus = __webpack_require__(131);\n\nvar _programstatus2 = _interopRequireDefault(_programstatus);\n\nvar _relationships = __webpack_require__(132);\n\nvar _relationships2 = _interopRequireDefault(_relationships);\n\nvar _visitbyencountertype = __webpack_require__(133);\n\nvar _visitbyencountertype2 = _interopRequireDefault(_visitbyencountertype);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module(\"openmrs-contrib-dashboardwidgets\", [_dataintegrityviolations2.default, _latestobsforconceptlist2.default, _obsacrossencounters2.default, _obsgraph2.default, _programs2.default, _programstatistics2.default, _programstatus2.default, _relationships2.default, _visitbyencountertype2.default]).name;\n\n\n_angular2.default.element(document).ready(function () {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = document.getElementsByClassName('openmrs-contrib-dashboardwidgets')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var dashboardwidget = _step.value;\n\n            _angular2.default.bootstrap(dashboardwidget, ['openmrs-contrib-dashboardwidgets']);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n});\n\n/***/ }),\n\n/***/ 154:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LatestObsForConceptListComponent = undefined;\n\nvar _latestobsforconceptlist = __webpack_require__(155);\n\nvar _latestobsforconceptlist2 = _interopRequireDefault(_latestobsforconceptlist);\n\nvar _latestobsforconceptlist3 = __webpack_require__(280);\n\nvar _latestobsforconceptlist4 = _interopRequireDefault(_latestobsforconceptlist3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar LatestObsForConceptListComponent = exports.LatestObsForConceptListComponent = {\n    template: _latestobsforconceptlist4.default,\n    controller: _latestobsforconceptlist2.default,\n    selector: 'latestobsforconceptlist',\n    scope: {},\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 155:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LatestObsForConceptListController = function () {\n    LatestObsForConceptListController.$inject = [\"$filter\", \"openmrsRest\", \"widgetsCommons\"];\n    function LatestObsForConceptListController($filter, openmrsRest, widgetsCommons) {\n        'ngInject';\n\n        _classCallCheck(this, LatestObsForConceptListController);\n\n        Object.assign(this, { $filter: $filter, openmrsRest: openmrsRest, widgetsCommons: widgetsCommons });\n    }\n\n    _createClass(LatestObsForConceptListController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            var _this = this;\n\n            this.maxConceptCount = 10;\n            this.maxAgeInDays = undefined;\n            this.obs = [];\n\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n            this.maxAgeInDays = this.widgetsCommons.maxAgeToDays(this.config.maxAge);\n\n            // Remove whitespaces\n            this.config.concepts = this.config.concepts.replace(/\\s/g, '');\n\n            var concepts = this.config.concepts.split(\",\");\n            for (var i = 0; i < concepts.length; i++) {\n                var concept = concepts[i];\n                // Fetch last obs for concept\n                this.openmrsRest.list('obs', {\n                    patient: this.config.patientUuid,\n                    v: 'full',\n                    concept: concept\n                }).then(function (resp) {\n                    // Don't add more items if max concept count is reached\n                    if (_this.obs.length < _this.maxConceptCount && resp.results.length > 0) {\n                        var obs = resp.results[0];\n                        // Don't add obs older than maxAge\n                        if (angular.isUndefined(_this.maxAgeInDays) || _this.widgetsCommons.dateToDaysAgo(obs.obsDatetime) <= _this.maxAgeInDays) {\n                            // Add last obs for concept to list\n\n                            if (['8d4a505e-c2cc-11de-8d13-0010c6dffd0f', '8d4a591e-c2cc-11de-8d13-0010c6dffd0f', '8d4a5af4-c2cc-11de-8d13-0010c6dffd0f'].indexOf(obs.concept.datatype.uuid) > -1) {\n                                //If value is date, time or datetime\n                                var date = _this.$filter('date')(new Date(obs.value), _this.config.dateFormat);\n                                obs.value = date;\n                            } else if (angular.isDefined(obs.value.display)) {\n                                //If value is a concept\n                                obs.value = obs.value.display;\n                            }\n\n                            _this.obs.push(obs);\n                        }\n                    }\n                });\n            }\n        }\n    }]);\n\n    return LatestObsForConceptListController;\n}();\n\nexports.default = LatestObsForConceptListController;\n\n/***/ }),\n\n/***/ 156:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObsAcrossEncountersComponent = undefined;\n\nvar _obsacrossencounters = __webpack_require__(157);\n\nvar _obsacrossencounters2 = _interopRequireDefault(_obsacrossencounters);\n\nvar _obsacrossencounters3 = __webpack_require__(281);\n\nvar _obsacrossencounters4 = _interopRequireDefault(_obsacrossencounters3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ObsAcrossEncountersComponent = exports.ObsAcrossEncountersComponent = {\n    template: _obsacrossencounters4.default,\n    controller: _obsacrossencounters2.default,\n    selector: 'obsacrossencounters',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 157:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ObsAcrossEncountersController = function () {\n    ObsAcrossEncountersController.$inject = [\"$filter\", \"openmrsRest\", \"widgetsCommons\"];\n    function ObsAcrossEncountersController($filter, openmrsRest, widgetsCommons) {\n        'ngInject';\n\n        _classCallCheck(this, ObsAcrossEncountersController);\n\n        Object.assign(this, { $filter: $filter, openmrsRest: openmrsRest, widgetsCommons: widgetsCommons });\n    }\n\n    _createClass(ObsAcrossEncountersController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            this.order = 'desc';\n            this.concepts = [];\n            this.encounters = [];\n\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n            this.fetchConcepts();\n            this.fetchEncounters();\n        }\n    }, {\n        key: 'fetchConcepts',\n        value: function fetchConcepts() {\n            var _this = this;\n\n            this.concepts = this.getConfigConceptsAsArray(this.config.concepts);\n            for (var i = 0; i < this.concepts.length; i++) {\n                this.openmrsRest.getFull(\"concept/\" + this.concepts[i], { v: 'custom:(uuid,display,names:(display,conceptNameType)' }).then(function (concept) {\n                    var index = _this.concepts.indexOf(concept.uuid);\n                    _this.concepts[index] = _this.getConceptWithShortName(concept);\n                });\n            }\n        }\n    }, {\n        key: 'fetchEncounters',\n        value: function fetchEncounters() {\n            var _this2 = this;\n\n            this.openmrsRest.get(\"encounter\", {\n                patient: this.config.patientUuid,\n                v: 'custom:(uuid,encounterDatetime,obs:(uuid,value,concept:(uuid,datatype),groupMembers)',\n                limit: this.getMaxRecords(),\n                fromdate: this.widgetsCommons.maxAgeToDate(this.config.maxAge),\n                order: this.order\n            }).then(function (response) {\n                _this2.getEncounters(response.results);\n            });\n        }\n    }, {\n        key: 'getMaxRecords',\n        value: function getMaxRecords() {\n            if (this.config.maxRecords == '' || angular.isUndefined(this.config.maxRecords)) {\n                return 4;\n            } else {\n                return this.config.maxRecords;\n            }\n        }\n    }, {\n        key: 'getConfigConceptsAsArray',\n        value: function getConfigConceptsAsArray(commaDelimitedConcepts) {\n            return commaDelimitedConcepts.replace(\" \", \"\").split(\",\");\n        }\n    }, {\n        key: 'getConceptWithShortName',\n        value: function getConceptWithShortName(concept) {\n            angular.forEach(concept.names, function (name) {\n                if (name.conceptNameType == 'SHORT') {\n                    concept.display = name.display;\n                }\n            });\n            return concept;\n        }\n    }, {\n        key: 'getEncounters',\n        value: function getEncounters(encounters) {\n            var _this3 = this;\n\n            angular.forEach(encounters, function (encounter) {\n                var enc = {\n                    encounterDatetime: encounter.encounterDatetime,\n                    obs: []\n                };\n                var nullRow = true;\n                angular.forEach(_this3.getConfigConceptsAsArray(_this3.config.concepts), function (concept) {\n                    var obsValue = _this3.getObservationForConcept(encounter.obs, concept);\n                    enc.obs.push(obsValue);\n                    if (obsValue.value !== '-') {\n                        nullRow = false;\n                    }\n                });\n\n                if (!nullRow) {\n                    _this3.encounters.push(enc);\n                }\n            });\n        }\n    }, {\n        key: 'getObservationForConcept',\n        value: function getObservationForConcept(observations, conceptUuid) {\n            for (var i = 0; i < observations.length; i++) {\n                var obs = observations[i];\n                if (obs.groupMembers != null) {\n                    if (obs.groupMembers.length !== 0) {\n                        //it is a group obs\n                        for (var j = 0; j < obs.groupMembers.length; j++) {\n                            var groupMember = obs.groupMembers[j];\n                            if (groupMember.concept.uuid === conceptUuid) {\n                                obs = groupMember;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (obs.value != null && obs.concept.uuid === conceptUuid) {\n                    if (angular.isDefined(obs.value.display)) {\n                        //If value is a concept\n                        obs.value = obs.value.display;\n                    } else if (['8d4a505e-c2cc-11de-8d13-0010c6dffd0f', '8d4a591e-c2cc-11de-8d13-0010c6dffd0f', '8d4a5af4-c2cc-11de-8d13-0010c6dffd0f'].indexOf(obs.concept.datatype.uuid) > -1) {\n                        //If value is date, time or datetime\n                        var date = this.$filter('date')(new Date(obs.value), this.config.dateFormat);\n                        obs.value = date;\n                    }\n\n                    return obs;\n                }\n            }\n            return { value: '-' };\n        }\n    }]);\n\n    return ObsAcrossEncountersController;\n}();\n\nexports.default = ObsAcrossEncountersController;\n\n/***/ }),\n\n/***/ 158:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObsGraphComponent = undefined;\n\nvar _obsgraph = __webpack_require__(159);\n\nvar _obsgraph2 = _interopRequireDefault(_obsgraph);\n\nvar _obsgraph3 = __webpack_require__(282);\n\nvar _obsgraph4 = _interopRequireDefault(_obsgraph3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ObsGraphComponent = exports.ObsGraphComponent = {\n    template: _obsgraph4.default,\n    controller: _obsgraph2.default,\n    selector: 'obsgraph',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 159:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ObsGraphController = function () {\n    ObsGraphController.$inject = [\"$filter\", \"openmrsRest\", \"widgetsCommons\"];\n    function ObsGraphController($filter, openmrsRest, widgetsCommons) {\n        'ngInject';\n\n        _classCallCheck(this, ObsGraphController);\n\n        Object.assign(this, { $filter: $filter, openmrsRest: openmrsRest, widgetsCommons: widgetsCommons });\n    }\n\n    _createClass(ObsGraphController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            var _this = this;\n\n            // Max age of obs to display\n            this.maxAgeInDays = undefined;\n\n            // Concept info\n            this.concept = {};\n\n            // Chart data\n            this.series = [];\n            this.labels = [];\n            this.data = [[]];\n\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n            // Set default maxResults if not defined\n            if (angular.isUndefined(this.config.maxResults)) {\n                this.config.maxResults = 4;\n            }\n            // Parse maxAge to day count\n            this.maxAgeInDays = this.widgetsCommons.maxAgeToDays(this.config.maxAge);\n\n            this.openmrsRest.list('obs', { patient: this.config.patientUuid, v: 'full', limit: this.config.maxResults, concept: this.config.conceptId }).then(function (resp) {\n                var obss = resp.results;\n                if (obss.length > 0) {\n                    // Set concept to display\n                    _this.concept = obss[0].concept;\n                    _this.series.push(_this.concept.display);\n                    for (var i = 0; i < obss.length; i++) {\n                        var obs = obss[i];\n                        // Show numeric concepts only\n                        if (obs.concept.datatype.display == 'Numeric') {\n                            // Don't add obs older than maxAge\n                            if (angular.isUndefined(_this.maxAgeInDays) || _this.widgetsCommons.dateToDaysAgo(obs.obsDatetime) <= _this.maxAgeInDays) {\n                                // Add obs data for chart display\n                                var date = _this.$filter('date')(new Date(obs.obsDatetime), _this.config.dateFormat);\n                                _this.labels.unshift(date);\n                                _this.data[0].unshift(obs.value);\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }]);\n\n    return ObsGraphController;\n}();\n\nexports.default = ObsGraphController;\n\n/***/ }),\n\n/***/ 160:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProgramsComponent = undefined;\n\nvar _programs = __webpack_require__(161);\n\nvar _programs2 = _interopRequireDefault(_programs);\n\nvar _programs3 = __webpack_require__(283);\n\nvar _programs4 = _interopRequireDefault(_programs3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// NOTE: work-in-progress, consider this not yet an \"official\" release of this widgets, future changes may not be bacwards-compatible and change functionality signficantly\n// TODO: document when we do an \"official\" release\n\nvar ProgramsComponent = exports.ProgramsComponent = {\n    template: _programs4.default,\n    controller: _programs2.default,\n    selector: 'programs',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 161:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ProgramsController = function () {\n    ProgramsController.$inject = [\"$filter\", \"openmrsRest\", \"openmrsTranslate\"];\n    function ProgramsController($filter, openmrsRest, openmrsTranslate) {\n        'ngInject';\n\n        _classCallCheck(this, ProgramsController);\n\n        Object.assign(this, { $filter: $filter, openmrsRest: openmrsRest, openmrsTranslate: openmrsTranslate });\n    }\n\n    _createClass(ProgramsController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            // the default patient page is the clinician dashboard\n            this.dashboardPage = \"/coreapps/clinicianfacing/patient.page?patientId={{patientUuid}}&dashboard={{dashboard}}\";\n\n            this.programs = [];\n\n            this.unenrolledPrograms = [];\n\n            this.patientPrograms = [];\n\n            this.showAddProgram = false;\n\n            this.canEnrollInProgram = false;\n\n            this.input = {\n                program: \"\"\n            };\n\n            // TODO did this work?\n            this.dateFormat = this.config.dateFormat == '' || _angular2.default.isUndefined(this.config.dateFormat) ? 'yyyy-MM-dd' : this.config.dateFormat;\n\n            this.supportedPrograms = [];\n\n            if (this.config.supportedPrograms) {\n                this.supportedPrograms = this.config.supportedPrograms.split(',');\n            }\n\n            this.activate();\n        }\n    }, {\n        key: 'activate',\n        value: function activate() {\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n            if (this.config.dashboardPage) {\n                this.dashboardPage = this.config.dashboardPage;\n            }\n\n            this.fetchPrivileges();\n\n            this.fetchPrograms().then(this.fetchPatientPrograms.bind(this)).then(this.determineUnenrolledPrograms.bind(this));\n        }\n    }, {\n        key: 'fetchPrivileges',\n        value: function fetchPrivileges() {\n            var _this = this;\n\n            this.openmrsRest.get('session', {\n                v: 'custom:(privileges)'\n            }).then(function (response) {\n                if (response && response.user && _angular2.default.isArray(response.user.privileges)) {\n                    if (response.user.privileges.some(function (p) {\n                        return p.name === 'Task: coreapps.enrollInProgram';\n                    })) {\n                        _this.canEnrollInProgram = true;\n                    };\n                }\n            });\n        }\n    }, {\n        key: 'fetchPrograms',\n        value: function fetchPrograms() {\n            var _this2 = this;\n\n            return this.openmrsRest.get('program', {\n                v: 'custom:display,uuid'\n            }).then(function (response) {\n                _this2.getPrograms(response.results);\n            });\n        }\n    }, {\n        key: 'fetchPatientPrograms',\n        value: function fetchPatientPrograms() {\n            var _this3 = this;\n\n            return this.openmrsRest.get('programenrollment', {\n                patient: this.config.patientUuid,\n                voided: false,\n                limit: this.getMaxRecords(),\n                v: 'custom:program:(uuid,display),dateEnrolled,dateCompleted'\n            }).then(function (response) {\n                _this3.getPatientPrograms(response.results);\n            });\n        }\n    }, {\n        key: 'getPrograms',\n        value: function getPrograms(programs) {\n            var _this4 = this;\n\n            _angular2.default.forEach(programs, function (program) {\n                // filter out any unsupported programs\n                if (_this4.supportedPrograms.length == 0 || _this4.supportedPrograms.indexOf(program.uuid) != -1) {\n                    _this4.programs.push(program);\n                }\n            });\n        }\n    }, {\n        key: 'getPatientPrograms',\n        value: function getPatientPrograms(patientPrograms) {\n            var _this5 = this;\n\n            this.patientPrograms = [];\n            _angular2.default.forEach(patientPrograms, function (patientProgram) {\n                // filter out any unsupported programs\n                if (_this5.supportedPrograms.length == 0 || _this5.supportedPrograms.indexOf(patientProgram.program.uuid) != -1) {\n                    _this5.patientPrograms.push(patientProgram);\n                }\n            });\n        }\n    }, {\n        key: 'getMaxRecords',\n        value: function getMaxRecords() {\n            if (this.config.maxRecords == '' || _angular2.default.isUndefined(this.config.maxRecords)) {\n                return 20;\n            } else {\n                return this.config.maxRecords;\n            }\n        }\n    }, {\n        key: 'determineUnenrolledPrograms',\n        value: function determineUnenrolledPrograms() {\n            var activeProgramsUuids = [];\n            _angular2.default.forEach(this.patientPrograms, function (patientProgram) {\n                if (!patientProgram.dateCompleted) {\n                    activeProgramsUuids.push(patientProgram.program.uuid);\n                }\n            });\n\n            this.unenrolledPrograms = this.$filter('filter')(this.programs, function (program) {\n                return activeProgramsUuids.indexOf(program.uuid) == -1;\n            });\n        }\n    }, {\n        key: 'addProgram',\n        value: function addProgram() {\n            this.showAddProgram = true;\n        }\n    }, {\n        key: 'cancelAddProgram',\n        value: function cancelAddProgram() {\n            this.showAddProgram = false;\n            this.input.program = \"\";\n        }\n    }, {\n        key: 'gotoProgramDashboard',\n        value: function gotoProgramDashboard(programUuid) {\n\n            if (!programUuid) {\n                programUuid = this.input.program;\n            }\n\n            if (programUuid && this.config.enableProgramDashboards) {\n                var destinationPage = \"\";\n                destinationPage = Handlebars.compile(this.dashboardPage)({\n                    patientUuid: this.config.patientUuid,\n                    dashboard: programUuid\n                });\n                this.openmrsRest.getServerUrl().then(function (url) {\n                    window.location.href = url + destinationPage;\n                });\n            }\n        }\n    }]);\n\n    return ProgramsController;\n}();\n\nexports.default = ProgramsController;\n\n/***/ }),\n\n/***/ 162:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProgramStatisticsComponent = undefined;\n\nvar _programstatistics = __webpack_require__(163);\n\nvar _programstatistics2 = _interopRequireDefault(_programstatistics);\n\nvar _programstatistics3 = __webpack_require__(284);\n\nvar _programstatistics4 = _interopRequireDefault(_programstatistics3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// NOTE: work-in-progress, consider this not yet an \"official\" release of this widgets, future changes may not be bacwards-compatible and change functionality signficantly\n// TODO: document when we do an \"official\" release\n\nvar ProgramStatisticsComponent = exports.ProgramStatisticsComponent = {\n    template: _programstatistics4.default,\n    controller: _programstatistics2.default,\n    selector: 'programstatistics',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 163:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ProgramStatisticsController = function () {\n    ProgramStatisticsController.$inject = [\"$filter\", \"openmrsRest\", \"openmrsTranslate\"];\n    function ProgramStatisticsController($filter, openmrsRest, openmrsTranslate) {\n        'ngInject';\n\n        _classCallCheck(this, ProgramStatisticsController);\n\n        Object.assign(this, { $filter: $filter, openmrsRest: openmrsRest, openmrsTranslate: openmrsTranslate });\n    }\n\n    _createClass(ProgramStatisticsController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            this.activate();\n            var ctrl = this;\n        }\n    }, {\n        key: 'activate',\n        value: function activate() {\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n            this.getEverEnrolledInProgram();\n            this.getCurrentlyEnrolledInProgram();\n        }\n    }, {\n        key: 'getEverEnrolledInProgram',\n        value: function getEverEnrolledInProgram() {\n            var _this = this;\n\n            return this.openmrsRest.get('reportingrest/cohort', {\n                v: \"ref\",\n                uuid: 'reporting.library.cohortDefinition.builtIn.patientsWithEnrollment',\n                programs: [this.config.program]\n            }).then(function (response) {\n                _this.everEnrolled = response && 'count' in response ? response.count : _this.$filter('translate')('coreapps.dashboardwidgets.programstatistics.error');\n            });\n        }\n    }, {\n        key: 'getCurrentlyEnrolledInProgram',\n        value: function getCurrentlyEnrolledInProgram() {\n            var _this2 = this;\n\n            return this.openmrsRest.get('reportingrest/cohort', {\n                v: \"ref\",\n                uuid: 'reporting.library.cohortDefinition.builtIn.patientsInProgram',\n                programs: [this.config.program],\n                onDate: new Date()\n            }).then(function (response) {\n                _this2.currentlyEnrolled = response && 'count' in response ? response.count : _this2.$filter('translate')('coreapps.dashboardwidgets.programstatistics.error');\n            });\n        }\n    }]);\n\n    return ProgramStatisticsController;\n}();\n\nexports.default = ProgramStatisticsController;\n\n/***/ }),\n\n/***/ 164:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProgramStatusComponent = undefined;\n\nvar _programstatus = __webpack_require__(165);\n\nvar _programstatus2 = _interopRequireDefault(_programstatus);\n\nvar _programstatus3 = __webpack_require__(285);\n\nvar _programstatus4 = _interopRequireDefault(_programstatus3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// NOTE: work-in-progress, consider this not yet an \"official\" release of this widgets, future changes may not be bacwards-compatible and change functionality signficantly\n// TODO: document when complete\n\n\nvar ProgramStatusComponent = exports.ProgramStatusComponent = {\n    template: _programstatus4.default,\n    controller: _programstatus2.default,\n    selector: 'programstatus',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 165:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _moment = __webpack_require__(0);\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ProgramStatusController = function () {\n\n    // TODO add support for special logic around \"initial\" and \"terminal?\"\n\n    ProgramStatusController.$inject = [\"$filter\", \"$window\", \"$q\", \"openmrsRest\", \"openmrsTranslate\"];\n    function ProgramStatusController($filter, $window, $q, openmrsRest, openmrsTranslate) {\n        'ngInject';\n\n        _classCallCheck(this, ProgramStatusController);\n\n        Object.assign(this, { $filter: $filter, $window: $window, $q: $q, openmrsRest: openmrsRest, openmrsTranslate: openmrsTranslate });\n    }\n\n    _createClass(ProgramStatusController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            this.vPatientProgram = 'custom:uuid,program:(uuid),dateEnrolled,dateCompleted,outcome:(display),location:(display,uuid),dateCompleted,outcome,states:(uuid,startDate,endDate,voided,state:(uuid,concept:(display)))';\n\n            this.dateFormat = this.config.dateFormat == '' || _angular2.default.isUndefined(this.config.dateFormat) ? 'dd-MMM-yyyy' : this.config.dateFormat;\n            this.today = new Date();\n\n            this.loaded = false;\n            this.deleted = false;\n\n            this.program = null;\n            this.patientProgram = null;\n            this.patientPrograms = null;\n            this.programLocations = null;\n            this.programOutcomes = null;\n\n            // we calculate these two values based on the completion date of the previous program and the enrollment date of any subsequent program\n            // we populate these on initial load\n            this.minEnrollmentDate = null;\n            this.maxCompletionDate = null;\n\n            this.canEnrollInProgram = false;\n            this.canEditProgram = false;\n            this.canDeleteProgram = false;\n\n            this.statesByWorkflow = {};\n            this.statesByUuid = {};\n            this.sortedStatesByWorkflow = {};\n\n            // backs the various input fields\n            this.input = {\n                dateEnrolled: null,\n                enrollmentLocation: null,\n                dateCompleted: null,\n                outcome: null,\n                initialWorkflowStateByWorkflow: {},\n                changeToStateByWorkflow: {}\n            };\n\n            this.resetWindowStates();\n\n            this.activate();\n\n            var ctrl = this;\n        }\n    }, {\n        key: 'activate',\n        value: function activate() {\n            var _this = this;\n\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n            this.fetchPrivileges();\n\n            this.fetchLocations().then(function (response) {\n                _this.fetchProgram().then(function (response) {\n                    _this.fetchOutcomes();\n                    _this.fetchPatientProgram();\n                });\n            });\n        }\n    }, {\n        key: 'fetchPrivileges',\n        value: function fetchPrivileges() {\n            var _this2 = this;\n\n            this.openmrsRest.get('session', {\n                v: 'custom:(privileges)'\n            }).then(function (response) {\n                if (response && response.user && _angular2.default.isArray(response.user.privileges)) {\n                    if (response.user.privileges.some(function (p) {\n                        return p.name === 'Task: coreapps.enrollInProgram';\n                    })) {\n                        _this2.canEnrollInProgram = true;\n                    };\n                    if (response.user.privileges.some(function (p) {\n                        return p.name === 'Task: coreapps.editPatientProgram';\n                    })) {\n                        _this2.canEditProgram = true;\n                    };\n                    if (response.user.privileges.some(function (p) {\n                        return p.name === 'Task: coreapps.deletePatientProgram';\n                    })) {\n                        _this2.canDeleteProgram = true;\n                    };\n                }\n            });\n        }\n    }, {\n        key: 'setInputsToStartingValues',\n        value: function setInputsToStartingValues() {\n            this.input.dateEnrolled = this.patientProgram ? new Date(this.patientProgram.dateEnrolled) : null;\n            this.input.dateCompleted = this.patientProgram && this.patientProgram.dateCompleted ? new Date(this.patientProgram.dateCompleted) : null;\n            this.input.outcome = this.patientProgram && this.patientProgram.outcome ? this.patientProgram.outcome.uuid : null;\n\n            if (this.patientProgram && this.patientProgram.location) {\n                this.input.enrollmentLocation = this.patientProgram.location.uuid;\n            }\n            // if there is only possible location, set it as the default (this is why loading locations (in activate) needs to happen before patient programs)\n            else if (this.programLocations && this.programLocations.length == 1) {\n                    this.input.enrollmentLocation = this.programLocations[0].uuid;\n                }\n\n            this.input.initialWorkflowStateByWorkflow = {};\n            this.input.changeToStateByWorkflow = {};\n        }\n    }, {\n        key: 'convertDateEnrolledAndDateCompletedStringsToDates',\n        value: function convertDateEnrolledAndDateCompletedStringsToDates() {\n            if (this.patientProgram) {\n                this.patientProgram.dateEnrolled = this.patientProgram ? new Date(this.patientProgram.dateEnrolled) : null;\n                this.patientProgram.dateCompleted = this.patientProgram && this.patientProgram.dateCompleted ? new Date(this.patientProgram.dateCompleted) : null;\n            }\n        }\n    }, {\n        key: 'toggleEditEnrollment',\n        value: function toggleEditEnrollment() {\n            var currentStatus = this.edit.enrollment;\n            this.cancelAllEditModes();\n            this.setInputsToStartingValues();\n\n            this.edit.enrollment = !currentStatus;\n        }\n    }, {\n        key: 'toggleEditWorkflow',\n        value: function toggleEditWorkflow(workflowUuid) {\n            var currentStatus = this.edit.workflow[workflowUuid];\n            this.cancelAllEditModes();\n            this.setInputsToStartingValues();\n\n            // the first time we hit this, we need to initialize the workflow\n            if (!workflowUuid in this.edit.workflow) {\n                this.edit.workflow[workflowUuid] = true;\n            } else {\n                this.edit.workflow[workflowUuid] = !currentStatus;\n            }\n        }\n    }, {\n        key: 'toggleExpandedWorkflow',\n        value: function toggleExpandedWorkflow(workflowUuid) {\n            // the first time we hit this, we need to initialize the workflow\n            if (!workflowUuid in this.expanded.workflow) {\n                this.expanded.workflow[workflowUuid] = true;\n            } else {\n                this.expanded.workflow[workflowUuid] = !this.expanded.workflow[workflowUuid];\n            }\n        }\n    }, {\n        key: 'fetchProgram',\n        value: function fetchProgram() {\n            var _this3 = this;\n\n            return this.openmrsRest.get('program', {\n                uuid: this.config.program,\n                v: 'custom:display,uuid,outcomesConcept:(uuid),workflows:(uuid,concept:(display),states:(uuid,initial,terminal,concept:(display))'\n            }).then(function (response) {\n                // TODO handle error cases, program doesn't exist\n                _this3.program = response;\n\n                _angular2.default.forEach(_this3.program.workflows, function (workflow) {\n                    _this3.statesByWorkflow[workflow.uuid] = workflow.states;\n                    _angular2.default.forEach(workflow.states, function (state) {\n                        _this3.statesByUuid[state.uuid] = state;\n                    });\n                });\n            });\n        }\n    }, {\n        key: 'fetchPatientProgram',\n        value: function fetchPatientProgram() {\n            var _this4 = this;\n\n            this.loaded = false;\n            this.patientProgram = null;\n            this.resetWindowStates();\n\n            return this.openmrsRest.get('programenrollment', {\n                patient: this.config.patientUuid,\n                v: this.vPatientProgram\n            }).then(function (response) {\n                _this4.patientPrograms = response.results;\n                _this4.getPatientProgramFromPatientProgramList();\n                _this4.groupAndSortPatientStates();\n                _this4.setInputsToStartingValues();\n                _this4.convertDateEnrolledAndDateCompletedStringsToDates();\n                _this4.loaded = true;\n            });\n        }\n    }, {\n        key: 'fetchLocations',\n        value: function fetchLocations() {\n            var _this5 = this;\n\n            return this.openmrsRest.get('location', {\n                v: 'custom:display,uuid',\n                tag: this.config.locationTag\n            }).then(function (response) {\n                _this5.programLocations = response.results;\n            });\n        }\n    }, {\n        key: 'fetchOutcomes',\n        value: function fetchOutcomes() {\n            var _this6 = this;\n\n            if (this.program.outcomesConcept) {\n                return this.openmrsRest.get('concept', {\n                    v: 'custom:answers:(display,uuid)',\n                    uuid: this.program.outcomesConcept.uuid\n                }).then(function (response) {\n                    _this6.programOutcomes = response.answers;\n                });\n            }\n        }\n\n        // get the patient program that this widget will be displaying/manipulating\n\n    }, {\n        key: 'getPatientProgramFromPatientProgramList',\n        value: function getPatientProgramFromPatientProgramList() {\n            var _this7 = this;\n\n            // first, filter to only patient programs of the specified type\n            this.patientPrograms = this.$filter('filter')(this.patientPrograms, function (patientProgram) {\n                return patientProgram.program.uuid == _this7.config.program;\n            });\n\n            if (this.patientPrograms.length > 0) {\n\n                // sort programs in order\n                this.patientPrograms = this.$filter('orderBy')(this.patientPrograms, function (patientProgram) {\n                    return -_this7.patientPrograms.startDate;\n                });\n\n                // find the matching program, and set the min/max for enroll/complete based on the surrounding programs\n                if (!this.displayActiveProgram()) {\n\n                    _angular2.default.forEach(this.patientPrograms, function (patientProgram, i) {\n                        if (patientProgram.uuid == _this7.config.patientProgram) {\n                            _this7.patientProgram = patientProgram;\n                            if (i > 0) {\n                                _this7.maxCompletionDate = _this7.getPreviousDay(new Date(_this7.patientPrograms[i - 1].dateEnrolled));\n                            }\n                            if (i + 1 < _this7.patientPrograms.length) {\n                                _this7.minEnrollmentDate = _this7.getNextDay(new Date(_this7.patientPrograms[i + 1].dateCompleted));\n                            }\n                        }\n                    });\n\n                    // TODO error case: no match found\n                }\n                // this widget is meant to show the active program, or if no active program, will render a widget for enrolling in the program\n                else {\n                        // there's an active program\n                        if (!this.patientPrograms[0].dateCompleted) {\n                            this.patientProgram = this.patientPrograms[0];\n                            if (this.patientPrograms.length > 1) {\n                                // enrollment date cannot be shifted to before completion date of previous program\n                                this.minEnrollmentDate = this.getNextDay(new Date(this.patientPrograms[1].dateCompleted));\n                            }\n                        }\n                        // no active program\n                        else {\n                                // enrollment date for a new program can't be set before the completion date of any previous program\n\n                                this.minEnrollmentDate = this.getNextDay(new Date(this.patientPrograms[0].dateCompleted));\n                            }\n                    }\n            }\n        }\n    }, {\n        key: 'enrollInProgram',\n        value: function enrollInProgram() {\n            var _this8 = this;\n\n            if (this.input.dateEnrolled && this.input.enrollmentLocation) {\n\n                var states = [];\n                _angular2.default.forEach(this.input.initialWorkflowStateByWorkflow, function (state) {\n                    state.startDate = _this8.input.dateEnrolled;\n                    states.push(state);\n                });\n\n                this.openmrsRest.create('programenrollment', {\n                    patient: this.config.patientUuid,\n                    program: this.config.program,\n                    dateEnrolled: this.input.dateEnrolled,\n                    location: this.input.enrollmentLocation,\n                    states: states\n                }).then(function (response) {\n                    if (_this8.config.disableReloadPage) {\n                        _this8.fetchPatientProgram(_this8.patientProgram.uuid); // refresh display\n                    } else {\n                        _this8.reloadPage(); // closing a program affects other widgets, so we need to reload the entire page\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'updatePatientProgram',\n        value: function updatePatientProgram() {\n            var _this9 = this;\n\n            // we need to reload the entire page if date of enrollment or completion has changed, because may affect other program widget on the same page\n            // (reloading can be disabled by using the \"disable reload page\" config parameter\n            var needToReloadPage = !this.config.disableReloadPage && this.input.dateEnrolled.getTime() != this.patientProgram.dateEnrolled.getTime() || this.input.dateCompleted && !this.patientProgram.dateCompleted || !this.input.dateCompleted && this.patientProgram.dateCompleted || this.input.dateCompleted && this.patientProgram.dateCompleted && this.input.dateCompleted.getTime() != this.patientProgram.dateCompleted.getTime();\n\n            // (disabling this... keeping most recent state with no end date for consistency with current workflow)\n            // we need to make sure that the most recent state for each workflow has an end date = completion date\n            // (this should really be handled by the api?)\n            /*  let states = [];\n              angular.forEach(this.sortedStatesByWorkflow, (workflow) => {\n                  if (workflow.length > 0) {\n                      states.push({\n                          uuid: workflow[0].uuid,\n                          endDate: this.input.dateCompleted\n                      })\n                  }\n              })*/\n\n            this.openmrsRest.update('programenrollment/' + this.patientProgram.uuid, {\n                dateEnrolled: this.input.dateEnrolled,\n                dateCompleted: this.input.dateCompleted,\n                location: this.input.enrollmentLocation,\n                outcome: this.input.outcome //,\n                //states: states\n            }).then(function (response) {\n                if (!needToReloadPage) {\n                    _this9.fetchPatientProgram(_this9.patientProgram.uuid); // refresh display\n                } else {\n                    _this9.reloadPage(); // closing a program affects other widgets, so we need to reload the entire page\n                }\n            });\n        }\n    }, {\n        key: 'deletePatientProgram',\n        value: function deletePatientProgram() {\n            var _this10 = this;\n\n            if (!this.confirmDelete.enrollment) {\n                this.confirmDelete.enrollment = true;\n            } else {\n                this.confirmDelete.enrollment = false;\n                this.openmrsRest.remove('programenrollment/', {\n                    uuid: this.patientProgram.uuid\n                }).then(function (response) {\n                    _this10.patientProgram = null;\n\n                    // if this widget was set to display the \"active program\" (ie, no patient program uuid passed in)\n                    // then reload, otherwise render a \"patient program deleted\" message and reload entire page\n\n                    if (_this10.displayActiveProgram()) {\n                        _this10.fetchPatientProgram(); // refresh display\n                    } else {\n                        _this10.deleted = true;\n                        if (!_this10.config.disableReloadPage) {\n                            _this10.reloadPage();\n                        }\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'deleteMostRecentPatientState',\n        value: function deleteMostRecentPatientState(workflowUuid) {\n            if (!this.confirmDelete.workflow[workflowUuid]) {\n                this.confirmDelete.workflow[workflowUuid] = true;\n            } else {\n                this.confirmDelete.workflow[workflowUuid] = false;\n                if (workflowUuid in this.sortedStatesByWorkflow && this.sortedStatesByWorkflow[workflowUuid].length > 0) {\n                    this.voidPatientState(this.sortedStatesByWorkflow[workflowUuid][0].uuid);\n                }\n            }\n        }\n    }, {\n        key: 'createPatientState',\n        value: function createPatientState(state) {\n            var _this11 = this;\n\n            this.openmrsRest.update('programenrollment/' + this.patientProgram.uuid, {\n                states: [{\n                    state: state.state,\n                    startDate: state.date // TODO is it okay that we set this date on the client-side? need to sync with\n                }]\n            }).then(function (response) {\n                // TODO: handle error cases\n                if (_this11.statesByUuid[state.state].terminal) {\n                    _this11.reloadPage();\n                } else {\n                    _this11.fetchPatientProgram(_this11.patientProgram.uuid); // refresh display\n                }\n            });\n        }\n    }, {\n        key: 'getWorkflowForState',\n        value: function getWorkflowForState(state) {\n            var result = void 0;\n            _angular2.default.forEach(this.program.workflows, function (workflow) {\n                _angular2.default.forEach(workflow.states, function (workflowState) {\n                    if (state.uuid == workflowState.uuid) {\n                        result = workflow;\n                    }\n                });\n            });\n            return result;\n        }\n    }, {\n        key: 'voidPatientState',\n        value: function voidPatientState(patientStateUuid) {\n            var _this12 = this;\n\n            return this.openmrsRest.remove('programenrollment/' + this.patientProgram.uuid + \"/state/\" + patientStateUuid, {\n                voided: \"true\",\n                voidReason: \"voided via UI\"\n            }).then(function (response) {\n                // TODO: handle error cases\n                _this12.fetchPatientProgram(_this12.patientProgram.uuid); // refresh display\n            });\n        }\n    }, {\n        key: 'updatePatientState',\n        value: function updatePatientState(workflowUuid, stateUuid) {\n            this.edit.workflow[workflowUuid] = false;\n            this.createPatientState(this.input.changeToStateByWorkflow[workflowUuid]);\n        }\n    }, {\n        key: 'isNotCurrentState',\n        value: function isNotCurrentState(workflow) {\n            var _this13 = this;\n\n            return function (state) {\n                var currentState = workflow.uuid in _this13.sortedStatesByWorkflow ? _this13.sortedStatesByWorkflow[workflow.uuid][0] : null;\n                return !currentState || currentState.state.uuid != state.uuid;\n            };\n        }\n    }, {\n        key: 'isInitialState',\n        value: function isInitialState() {\n            return function (state) {\n                return state.initial;\n            };\n        }\n    }, {\n        key: 'groupAndSortPatientStates',\n        value: function groupAndSortPatientStates() {\n            var _this14 = this;\n\n            this.sortedStatesByWorkflow = {};\n\n            if (this.patientProgram && this.patientProgram.states) {\n                // TODO remove this first filter once the bug with the REST request returning voided elements is fixed\n                this.patientProgram.states = this.$filter('filter')(this.patientProgram.states, function (state) {\n                    return !state.voided;\n                }, true);\n                this.patientProgram.states = this.$filter('orderBy')(this.patientProgram.states, function (state) {\n                    return state.startDate;\n                });\n\n                _angular2.default.forEach(this.patientProgram.states, function (patientState) {\n                    var workflow = _this14.getWorkflowForState(patientState.state);\n\n                    if (!(workflow.uuid in _this14.sortedStatesByWorkflow)) {\n                        _this14.sortedStatesByWorkflow[workflow.uuid] = [];\n                    }\n\n                    var newEntry = {\n                        startDate: new Date(patientState.startDate),\n                        dayAfterStartDate: _this14.getNextDay(patientState.startDate),\n                        endDate: patientState.endDate ? new Date(patientState.endDate) : null,\n                        state: patientState.state,\n                        uuid: patientState.uuid\n                    };\n\n                    _this14.sortedStatesByWorkflow[workflow.uuid].unshift(newEntry); // add to front\n                });\n            }\n        }\n    }, {\n        key: 'getMostRecentStateChangeDate',\n        value: function getMostRecentStateChangeDate() {\n            var mostRecentStateChangeDate = null;\n\n            _angular2.default.forEach(this.sortedStatesByWorkflow, function (workflow) {\n                if (workflow.length > 0) {\n                    if (!mostRecentStateChangeDate || workflow[0].startDate > mostRecentStateChangeDate) {\n                        mostRecentStateChangeDate = workflow[0].startDate;\n                    }\n                }\n            });\n\n            return mostRecentStateChangeDate;\n        }\n    }, {\n        key: 'update',\n        value: function update() {\n            this.cancelAllEditModes();\n            this.updatePatientProgram();\n        }\n    }, {\n        key: 'cancelAllEditModes',\n        value: function cancelAllEditModes() {\n            this.edit.enrollment = false;\n            for (var uuid in this.edit.workflow) {\n                this.edit.workflow[uuid] = false;\n            }\n        }\n    }, {\n        key: 'cancelEdit',\n        value: function cancelEdit() {\n            this.cancelAllEditModes();\n            this.setInputsToStartingValues();\n        }\n    }, {\n        key: 'cancelEnrollment',\n        value: function cancelEnrollment() {\n            this.expanded.enrollment = false;\n            this.setInputsToStartingValues();\n        }\n    }, {\n        key: 'cancelDelete',\n        value: function cancelDelete() {\n            this.confirmDelete = {\n                enrollment: false,\n                workflow: {}\n            };\n        }\n    }, {\n        key: 'inConfirmDelete',\n        value: function inConfirmDelete() {\n            if (this.confirmDelete.enrollment === true) {\n                return true;\n            }\n            var result = false;\n            _angular2.default.forEach(this.confirmDelete.workflow, function (value, key) {\n                if (value === true) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n    }, {\n        key: 'inEditMode',\n        value: function inEditMode() {\n            if (this.edit.enrollment === true) {\n                return true;\n            }\n            var result = false;\n            _angular2.default.forEach(this.edit.workflow, function (value, key) {\n                if (value === true) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n    }, {\n        key: 'getNextDay',\n        value: function getNextDay(date) {\n            return (0, _moment2.default)(date).add(1, 'days').toDate();\n        }\n    }, {\n        key: 'getPreviousDay',\n        value: function getPreviousDay(date) {\n            return (0, _moment2.default)(date).add(-1, 'days').toDate();\n        }\n    }, {\n        key: 'isToday',\n        value: function isToday(date) {\n            if (!date) {\n                return false;\n            } else {\n                return (0, _moment2.default)(date).isSame((0, _moment2.default)(), 'day');\n            }\n        }\n    }, {\n        key: 'isMostRecentProgram',\n        value: function isMostRecentProgram() {\n            return !this.patientPrograms || this.patientPrograms.length == 0 || !this.patientProgram || this.patientPrograms[0].uuid === this.patientProgram.uuid;\n        }\n\n        // if no program uuid is passed in, this widget will display the active program, or an \"enroll in program\" option if no active program\n\n    }, {\n        key: 'displayActiveProgram',\n        value: function displayActiveProgram() {\n            return this.config.patientProgram ? false : true;\n        }\n    }, {\n        key: 'programIsCompleted',\n        value: function programIsCompleted() {\n            return this.patientProgram && this.patientProgram.dateCompleted ? true : false;\n        }\n    }, {\n        key: 'enrollmentValid',\n        value: function enrollmentValid() {\n            return this.input.enrollmentLocation && this.input.dateEnrolled && ( // must have enrollmentLocation and date enrolled\n            !this.input.dateCompleted || this.input.dateCompleted >= this.input.dateEnrolled) && ( // date completed must be after date enrolled\n            !this.input.dateCompleted && !this.input.outcome || this.input.dateCompleted && this.input.outcome) && ( // if there's a completion date, must specific an outcome (and vice versa)\n            this.isMostRecentProgram() || this.input.dateCompleted); // must be the most recent program or have a date completed\n        }\n    }, {\n        key: 'workflowTransitionValid',\n        value: function workflowTransitionValid(workflowUuid) {\n            return this.input.changeToStateByWorkflow[workflowUuid] && this.input.changeToStateByWorkflow[workflowUuid].date && this.input.changeToStateByWorkflow[workflowUuid].state;\n        }\n    }, {\n        key: 'resetWindowStates',\n        value: function resetWindowStates() {\n            // controls the state (open/closed) of the elements to edit enrollment & state information\n            this.edit = {\n                enrollment: false,\n                workflow: {}\n\n                // controls the state (opened/closed) of the expanded view of enrollment & workflows\n            };this.expanded = {\n                enrollment: false,\n                workflow: {}\n\n                // controls whether the \"confirm delete\" message is displayed\n            };this.confirmDelete = {\n                enrollment: false,\n                workflow: {}\n            };\n        }\n    }, {\n        key: 'reloadPage',\n        value: function reloadPage() {\n            this.$window.location.reload();\n        }\n    }]);\n\n    return ProgramStatusController;\n}();\n\nexports.default = ProgramStatusController;\n\n/***/ }),\n\n/***/ 166:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RelationshipsComponent = undefined;\n\nvar _relationships = __webpack_require__(167);\n\nvar _relationships2 = _interopRequireDefault(_relationships);\n\nvar _relationships3 = __webpack_require__(286);\n\nvar _relationships4 = _interopRequireDefault(_relationships3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar RelationshipsComponent = exports.RelationshipsComponent = {\n    template: _relationships4.default,\n    controller: _relationships2.default,\n    selector: 'relationships',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 167:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RelationshipsController = function () {\n    RelationshipsController.$inject = [\"$q\", \"openmrsRest\", \"openmrsTranslate\"];\n    function RelationshipsController($q, openmrsRest, openmrsTranslate) {\n        'ngInject';\n\n        _classCallCheck(this, RelationshipsController);\n\n        Object.assign(this, { $q: $q, openmrsRest: openmrsRest, openmrsTranslate: openmrsTranslate });\n    }\n\n    _createClass(RelationshipsController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            this.minSearchLength = 2;\n            // the default patient page is the clinician dashboard\n            this.dashboardPage = \"/coreapps/clinicianfacing/patient.page?patientId={{patientUuid}}\";\n            this.providerPage = null;\n\n            this.relationships = [];\n            this.types = [];\n            this.allowedTypes = [];\n            this.relationshipType = [];\n            this.hasEditPrivileges = false;\n            this.edit = false;\n            this.removeFlag = false;\n            this.showFindOtherPerson = false;\n            this.showSaveButton = false;\n            this.searchPerson = null;\n            this.otherPerson = null;\n            this.relatedPersons = [];\n\n            this.activate();\n\n            var ctrl = this;\n        }\n    }, {\n        key: 'activate',\n        value: function activate() {\n            var _this = this;\n\n            if (this.config.baseAppPath) {\n                this.openmrsRest.setBaseAppPath(this.config.baseAppPath);\n            } else {\n                this.openmrsRest.setBaseAppPath(\"/coreapps\");\n            }\n\n            if (this.config.dashboardPage) {\n                this.dashboardPage = this.config.dashboardPage;\n            }\n\n            if (this.config.providerPage) {\n                this.providerPage = this.config.providerPage;\n            }\n\n            if (this.config.includeRelationshipTypes) {\n                this.allowedTypes = this.config.includeRelationshipTypes.split(',');\n            }\n\n            //fetchPrivileges\n            this.openmrsRest.get('session', {\n                v: 'custom:(privileges)'\n            }).then(function (response) {\n                _this.getPrivileges(response.user.privileges);\n            });\n\n            //fetchRelationships\n            this.openmrsRest.get('relationship', {\n                person: this.config.patientUuid,\n                limit: this.getMaxRecords(),\n                v: 'custom:(uuid,personA:(uuid,display,personName,birthdate,isPatient,personId),personB:(uuid,display,personName,birthdate,isPatient,personId),relationshipType)'\n            }).then(function (response) {\n                _this.getRelationships(response.results);\n                if (_this.providerPage) {\n                    // if a provider page has been configured then check if there are any providers listed as relationships\n                    _this.checkForProviders();\n                }\n            });\n\n            //fetchRelationshipTypes\n            this.openmrsRest.get('relationshiptype', {\n                v: 'default'\n            }).then(function (response) {\n                _this.getRelationshipTypes(response.results);\n            });\n        }\n    }, {\n        key: 'getRelationships',\n        value: function getRelationships(relationships) {\n            var _this2 = this;\n\n            _angular2.default.forEach(relationships, function (relationship) {\n                var rel = {};\n                rel.uuid = relationship.uuid;\n                rel.isProvider = false;\n                if (relationship.personA.uuid !== _this2.config.patientUuid) {\n                    rel.toPerson = relationship.personA;\n                    rel.isPatient = relationship.personA.isPatient;\n                    rel.type = _angular2.default.isDefined(relationship.relationshipType.displayAIsToB) ? relationship.relationshipType.displayAIsToB : relationship.relationshipType.aIsToB;\n                } else {\n                    rel.toPerson = relationship.personB;\n                    rel.isPatient = relationship.personB.isPatient;\n                    rel.type = _angular2.default.isDefined(relationship.relationshipType.displayBIsToA) ? relationship.relationshipType.displayBIsToA : relationship.relationshipType.bIsToA;\n                }\n                _this2.relationships.push(rel);\n            });\n        }\n    }, {\n        key: 'relationshipsContain',\n        value: function relationshipsContain(personUuid) {\n            var result = false;\n            _angular2.default.forEach(this.relationships, function (relationship) {\n                if (relationship.toPerson.uuid == personUuid) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n    }, {\n        key: 'getPrivileges',\n        value: function getPrivileges(privileges) {\n            var editPrivilege = this.config.editPrivilege;\n            if (_angular2.default.isDefined(editPrivilege)) {\n                if (_angular2.default.isArray(privileges)) {\n                    if (privileges.some(function (privilege) {\n                        return privilege.name === editPrivilege;\n                    })) {\n                        this.hasEditPrivileges = true;\n                    };\n                }\n            }\n        }\n    }, {\n        key: 'updateProviderInfo',\n        value: function updateProviderInfo(provider) {\n            if (provider) {\n                _angular2.default.forEach(this.relationships, function (relationship) {\n                    if (relationship.toPerson.uuid === provider.person.uuid) {\n                        relationship.isProvider = true;\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'isProvider',\n        value: function isProvider(personUuid, personName) {\n            return this.openmrsRest.get('provider', {\n                q: personName,\n                v: 'custom:(uuid,identifier,display,person:(uuid,personId,display,gender,age,birthdate,birthdateEstimated))'\n            }).then(function (resp) {\n                return resp.results;\n            });\n        }\n    }, {\n        key: 'checkForProviders',\n        value: function checkForProviders() {\n            var _this3 = this;\n\n            _angular2.default.forEach(this.relationships, function (relationship) {\n                _this3.isProvider(relationship.toPerson.uuid, relationship.toPerson.display).then(function (response) {\n                    _angular2.default.forEach(response, function (provider) {\n                        _this3.updateProviderInfo(provider);\n                    });\n                });\n            });\n        }\n    }, {\n        key: 'getPersons',\n        value: function getPersons(searchString) {\n            var _this4 = this;\n\n            this.openmrsRest.get('patient', {\n                q: searchString,\n                v: 'custom:(uuid,display,gender,age)'\n            }).then(function (response) {\n                _this4.relatedPersons = [];\n                _this4.filterSearchedPersons(response.results);\n            });\n        }\n    }, {\n        key: 'filterSearchedPersons',\n        value: function filterSearchedPersons(searchedPersons) {\n            var _this5 = this;\n\n            if (_angular2.default.isArray(searchedPersons) && searchedPersons.length > 0) {\n                _angular2.default.forEach(searchedPersons, function (person) {\n                    if (!_this5.relationshipsContain(person.uuid)) {\n                        // when searching for persons to create new relationships exclude the persons that already have a relationship with this person\n                        _this5.relatedPersons.push(person);\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'getRelationshipTypes',\n        value: function getRelationshipTypes(types) {\n            var _this6 = this;\n\n            _angular2.default.forEach(types, function (type) {\n                if (_this6.allowedTypes.length < 1 || _this6.allowedTypes.length > 0 && _this6.allowedTypes.indexOf(type.uuid) !== -1) {\n                    // if a relationship type filter was not specified then we display all types,\n                    // OR if a filter was defined then we only display the types included in the filter\n                    if (_this6.findRelTypeByName(_angular2.default.isDefined(type.displayAIsToB) ? type.displayAIsToB : type.aIsToB) == null) {\n                        var relTypeA = {};\n                        relTypeA.uuid = type.uuid;\n                        relTypeA.name = _angular2.default.isDefined(type.displayAIsToB) ? type.displayAIsToB : type.aIsToB;\n                        relTypeA.type = \"B\";\n                        _this6.types.push(relTypeA);\n                    }\n                    if (_this6.findRelTypeByName(_angular2.default.isDefined(type.displayBIsToA) ? type.displayBIsToA : type.bIsToA) == null) {\n                        var relTypeB = {};\n                        relTypeB.uuid = type.uuid;\n                        relTypeB.name = _angular2.default.isDefined(type.displayBIsToA) ? type.displayBIsToA : type.bIsToA;\n                        relTypeB.type = \"A\";\n                        _this6.types.push(relTypeB);\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'updateRelationshipType',\n        value: function updateRelationshipType() {\n            if (_angular2.default.isDefined(this.relationshipType)) {\n                this.showFindOtherPerson = true;\n            }\n        }\n    }, {\n        key: 'findRelTypeByName',\n        value: function findRelTypeByName(value) {\n            var item = null;\n            if (_angular2.default.isDefined(this.types) && this.types.length > 0) {\n                _angular2.default.forEach(this.types, function (type) {\n                    if (type.name == value) {\n                        item = type;\n                    }\n                });\n            }\n            return item;\n        }\n    }, {\n        key: 'getMaxRecords',\n        value: function getMaxRecords() {\n            if (this.config.maxRecords == '' || _angular2.default.isUndefined(this.config.maxRecords)) {\n                return 6;\n            } else {\n                return this.config.maxRecords;\n            }\n        }\n    }, {\n        key: 'navigateTo',\n        value: function navigateTo(personUuid) {\n            var _this7 = this;\n\n            var destinationPage = \"\";\n\n            _angular2.default.forEach(this.relationships, function (relationship) {\n                if (relationship.toPerson.uuid === personUuid) {\n                    if (relationship.isPatient === true) {\n                        if (_this7.dashboardPage) {\n                            destinationPage = Handlebars.compile(_this7.dashboardPage)({\n                                patientUuid: personUuid\n                            });\n                        }\n                    } else if (relationship.isProvider === true) {\n                        if (_this7.providerPage) {\n                            destinationPage = Handlebars.compile(_this7.providerPage)({\n                                personUuid: personUuid\n                            });\n                        }\n                    }\n                }\n            });\n\n            this.openmrsRest.getServerUrl().then(function (url) {\n                window.location.href = url + destinationPage;\n            });\n        }\n    }, {\n        key: 'addRelationship',\n        value: function addRelationship() {\n            this.edit = true;\n        }\n    }, {\n        key: 'save',\n        value: function save() {\n            var _this8 = this;\n\n            if (_angular2.default.isDefined(this.relationshipType) && _angular2.default.isDefined(this.otherPerson)) {\n\n                var personA = null;\n                var personB = null;\n                if (this.relationshipType.type == \"A\") {\n                    personA = this.config.patientUuid;\n                    personB = this.otherPerson.uuid;\n                } else if (this.relationshipType.type == \"B\") {\n                    personA = this.otherPerson.uuid;\n                    personB = this.config.patientUuid;\n                }\n\n                this.openmrsRest.create('relationship', {\n                    relationshipType: this.relationshipType.uuid,\n                    personA: personA,\n                    personB: personB\n                }).then(function (response) {\n                    _this8.$onInit();\n                });\n            }\n        }\n    }, {\n        key: 'removeRelationship',\n        value: function removeRelationship(relUuid) {\n            if (_angular2.default.isDefined(relUuid)) {\n\n                this.removeFlag = true;\n                var tempRelationships = [];\n                _angular2.default.forEach(this.relationships, function (relationship) {\n                    if (relationship.uuid == relUuid) {\n                        tempRelationships.push(relationship);\n                    }\n                });\n                this.relationships = [];\n                this.relationships = tempRelationships;\n            }\n        }\n    }, {\n        key: 'remove',\n        value: function remove() {\n            var _this9 = this;\n\n            if (_angular2.default.isDefined(this.relationships) && this.relationships.length == 1) {\n                //we only allow to delete one relationship at the time\n                this.openmrsRest.remove('relationship', {\n                    uuid: this.relationships[0].uuid\n                }).then(function (response) {\n                    _this9.$onInit();\n                });\n            }\n        }\n    }, {\n        key: 'goTo',\n        value: function goTo(personUuid) {\n            this.navigateTo(personUuid);\n        }\n    }, {\n        key: 'searchPersons',\n        value: function searchPersons() {\n            if (_angular2.default.isDefined(this.searchPerson) && this.searchPerson.length > this.minSearchLength) {\n                this.getPersons(this.searchPerson);\n            }\n        }\n    }, {\n        key: 'onSelect',\n        value: function onSelect($item, $model, $label) {\n            if (_angular2.default.isDefined($item) && _angular2.default.isDefined(this.relationshipType)) {\n                this.otherPerson = $item;\n                this.showSaveButton = true;\n            }\n        }\n    }, {\n        key: 'cancel',\n        value: function cancel() {\n            this.edit = false;\n            this.$onInit();\n        }\n    }]);\n\n    return RelationshipsController;\n}();\n\nexports.default = RelationshipsController;\n;\n\n/***/ }),\n\n/***/ 168:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.VisitByEncounterTypeComponent = undefined;\n\nvar _visitbyencountertype = __webpack_require__(169);\n\nvar _visitbyencountertype2 = _interopRequireDefault(_visitbyencountertype);\n\nvar _visitbyencountertype3 = __webpack_require__(287);\n\nvar _visitbyencountertype4 = _interopRequireDefault(_visitbyencountertype3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar VisitByEncounterTypeComponent = exports.VisitByEncounterTypeComponent = {\n    template: _visitbyencountertype4.default,\n    controller: _visitbyencountertype2.default,\n    selector: 'visitbyencountertype',\n    bindings: {\n        config: '<'\n    }\n};\n\n/***/ }),\n\n/***/ 169:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VisitByEncounterTypeController = function () {\n    VisitByEncounterTypeController.$inject = [\"openmrsRest\", \"widgetsCommons\"];\n    function VisitByEncounterTypeController(openmrsRest, widgetsCommons) {\n        'ngInject';\n\n        _classCallCheck(this, VisitByEncounterTypeController);\n\n        Object.assign(this, { openmrsRest: openmrsRest, widgetsCommons: widgetsCommons });\n    }\n\n    _createClass(VisitByEncounterTypeController, [{\n        key: \"$onInit\",\n        value: function $onInit() {\n            var _this = this;\n\n            this.visits = [];\n            this.serverUrl = \"\";\n\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n            this.openmrsRest.getServerUrl().then(function (result) {\n                _this.serverUrl = result;\n            });\n\n            //fetchVisits\n            this.openmrsRest.get('visit', {\n                patient: this.config.patientUuid,\n                limit: this.getMaxRecords(),\n                fromStartDate: this.widgetsCommons.maxAgeToDate(this.config.maxAge),\n                v: 'custom:(uuid,startDatetime,stopDatetime,encounters:(uuid,encounterType:(uuid,display)))'\n            }).then(function (response) {\n                _this.getVisits(response.results);\n            });\n        }\n    }, {\n        key: \"getVisits\",\n        value: function getVisits(visits) {\n            var _this2 = this;\n\n            angular.forEach(visits, function (visit) {\n                var encounterTypes = [];\n                if (_this2.getCombineEncounterTypes()) {\n                    var vis = { startDatetime: visit.startDatetime, encounterType: '', uuid: visit.uuid };\n                    angular.forEach(visit.encounters, function (encounter) {\n                        if (encounterTypes.indexOf(encounter.encounterType.display) == -1) {\n                            if (vis.encounterType === '') {\n                                vis.encounterType = encounter.encounterType.display;\n                            } else {\n                                vis.encounterType += ', ' + encounter.encounterType.display;\n                            }\n                            encounterTypes.push(encounter.encounterType.display);\n                        }\n                    });\n                    _this2.visits.push(vis);\n                } else {\n                    angular.forEach(visit.encounters, function (encounter) {\n                        if (encounterTypes.indexOf(encounter.encounterType.display) == -1) {\n                            var _vis = { startDatetime: visit.startDatetime };\n                            _vis.encounterType = encounter.encounterType.display;\n                            encounterTypes.push(encounter.encounterType.display);\n                            _this2.visits.push(_vis);\n                        }\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"getCombineEncounterTypes\",\n        value: function getCombineEncounterTypes() {\n            if (this.config.combineEncounterTypes === 'false') {\n                return false;\n            } else {\n                return true;\n            }\n        }\n    }, {\n        key: \"getMaxRecords\",\n        value: function getMaxRecords() {\n            if (this.config.maxRecords == '' || angular.isUndefined(this.config.maxRecords)) {\n                return 6;\n            } else {\n                return this.config.maxRecords;\n            }\n        }\n    }]);\n\n    return VisitByEncounterTypeController;\n}();\n\nexports.default = VisitByEncounterTypeController;\n\n/***/ }),\n\n/***/ 277:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./af\": 10,\n\t\"./af.js\": 10,\n\t\"./ar\": 17,\n\t\"./ar-dz\": 11,\n\t\"./ar-dz.js\": 11,\n\t\"./ar-kw\": 12,\n\t\"./ar-kw.js\": 12,\n\t\"./ar-ly\": 13,\n\t\"./ar-ly.js\": 13,\n\t\"./ar-ma\": 14,\n\t\"./ar-ma.js\": 14,\n\t\"./ar-sa\": 15,\n\t\"./ar-sa.js\": 15,\n\t\"./ar-tn\": 16,\n\t\"./ar-tn.js\": 16,\n\t\"./ar.js\": 17,\n\t\"./az\": 18,\n\t\"./az.js\": 18,\n\t\"./be\": 19,\n\t\"./be.js\": 19,\n\t\"./bg\": 20,\n\t\"./bg.js\": 20,\n\t\"./bn\": 21,\n\t\"./bn.js\": 21,\n\t\"./bo\": 22,\n\t\"./bo.js\": 22,\n\t\"./br\": 23,\n\t\"./br.js\": 23,\n\t\"./bs\": 24,\n\t\"./bs.js\": 24,\n\t\"./ca\": 25,\n\t\"./ca.js\": 25,\n\t\"./cs\": 26,\n\t\"./cs.js\": 26,\n\t\"./cv\": 27,\n\t\"./cv.js\": 27,\n\t\"./cy\": 28,\n\t\"./cy.js\": 28,\n\t\"./da\": 29,\n\t\"./da.js\": 29,\n\t\"./de\": 32,\n\t\"./de-at\": 30,\n\t\"./de-at.js\": 30,\n\t\"./de-ch\": 31,\n\t\"./de-ch.js\": 31,\n\t\"./de.js\": 32,\n\t\"./dv\": 33,\n\t\"./dv.js\": 33,\n\t\"./el\": 34,\n\t\"./el.js\": 34,\n\t\"./en-au\": 35,\n\t\"./en-au.js\": 35,\n\t\"./en-ca\": 36,\n\t\"./en-ca.js\": 36,\n\t\"./en-gb\": 37,\n\t\"./en-gb.js\": 37,\n\t\"./en-ie\": 38,\n\t\"./en-ie.js\": 38,\n\t\"./en-nz\": 39,\n\t\"./en-nz.js\": 39,\n\t\"./eo\": 40,\n\t\"./eo.js\": 40,\n\t\"./es\": 42,\n\t\"./es-do\": 41,\n\t\"./es-do.js\": 41,\n\t\"./es.js\": 42,\n\t\"./et\": 43,\n\t\"./et.js\": 43,\n\t\"./eu\": 44,\n\t\"./eu.js\": 44,\n\t\"./fa\": 45,\n\t\"./fa.js\": 45,\n\t\"./fi\": 46,\n\t\"./fi.js\": 46,\n\t\"./fo\": 47,\n\t\"./fo.js\": 47,\n\t\"./fr\": 50,\n\t\"./fr-ca\": 48,\n\t\"./fr-ca.js\": 48,\n\t\"./fr-ch\": 49,\n\t\"./fr-ch.js\": 49,\n\t\"./fr.js\": 50,\n\t\"./fy\": 51,\n\t\"./fy.js\": 51,\n\t\"./gd\": 52,\n\t\"./gd.js\": 52,\n\t\"./gl\": 53,\n\t\"./gl.js\": 53,\n\t\"./gom-latn\": 54,\n\t\"./gom-latn.js\": 54,\n\t\"./he\": 55,\n\t\"./he.js\": 55,\n\t\"./hi\": 56,\n\t\"./hi.js\": 56,\n\t\"./hr\": 57,\n\t\"./hr.js\": 57,\n\t\"./hu\": 58,\n\t\"./hu.js\": 58,\n\t\"./hy-am\": 59,\n\t\"./hy-am.js\": 59,\n\t\"./id\": 60,\n\t\"./id.js\": 60,\n\t\"./is\": 61,\n\t\"./is.js\": 61,\n\t\"./it\": 62,\n\t\"./it.js\": 62,\n\t\"./ja\": 63,\n\t\"./ja.js\": 63,\n\t\"./jv\": 64,\n\t\"./jv.js\": 64,\n\t\"./ka\": 65,\n\t\"./ka.js\": 65,\n\t\"./kk\": 66,\n\t\"./kk.js\": 66,\n\t\"./km\": 67,\n\t\"./km.js\": 67,\n\t\"./kn\": 68,\n\t\"./kn.js\": 68,\n\t\"./ko\": 69,\n\t\"./ko.js\": 69,\n\t\"./ky\": 70,\n\t\"./ky.js\": 70,\n\t\"./lb\": 71,\n\t\"./lb.js\": 71,\n\t\"./lo\": 72,\n\t\"./lo.js\": 72,\n\t\"./lt\": 73,\n\t\"./lt.js\": 73,\n\t\"./lv\": 74,\n\t\"./lv.js\": 74,\n\t\"./me\": 75,\n\t\"./me.js\": 75,\n\t\"./mi\": 76,\n\t\"./mi.js\": 76,\n\t\"./mk\": 77,\n\t\"./mk.js\": 77,\n\t\"./ml\": 78,\n\t\"./ml.js\": 78,\n\t\"./mr\": 79,\n\t\"./mr.js\": 79,\n\t\"./ms\": 81,\n\t\"./ms-my\": 80,\n\t\"./ms-my.js\": 80,\n\t\"./ms.js\": 81,\n\t\"./my\": 82,\n\t\"./my.js\": 82,\n\t\"./nb\": 83,\n\t\"./nb.js\": 83,\n\t\"./ne\": 84,\n\t\"./ne.js\": 84,\n\t\"./nl\": 86,\n\t\"./nl-be\": 85,\n\t\"./nl-be.js\": 85,\n\t\"./nl.js\": 86,\n\t\"./nn\": 87,\n\t\"./nn.js\": 87,\n\t\"./pa-in\": 88,\n\t\"./pa-in.js\": 88,\n\t\"./pl\": 89,\n\t\"./pl.js\": 89,\n\t\"./pt\": 91,\n\t\"./pt-br\": 90,\n\t\"./pt-br.js\": 90,\n\t\"./pt.js\": 91,\n\t\"./ro\": 92,\n\t\"./ro.js\": 92,\n\t\"./ru\": 93,\n\t\"./ru.js\": 93,\n\t\"./sd\": 94,\n\t\"./sd.js\": 94,\n\t\"./se\": 95,\n\t\"./se.js\": 95,\n\t\"./si\": 96,\n\t\"./si.js\": 96,\n\t\"./sk\": 97,\n\t\"./sk.js\": 97,\n\t\"./sl\": 98,\n\t\"./sl.js\": 98,\n\t\"./sq\": 99,\n\t\"./sq.js\": 99,\n\t\"./sr\": 101,\n\t\"./sr-cyrl\": 100,\n\t\"./sr-cyrl.js\": 100,\n\t\"./sr.js\": 101,\n\t\"./ss\": 102,\n\t\"./ss.js\": 102,\n\t\"./sv\": 103,\n\t\"./sv.js\": 103,\n\t\"./sw\": 104,\n\t\"./sw.js\": 104,\n\t\"./ta\": 105,\n\t\"./ta.js\": 105,\n\t\"./te\": 106,\n\t\"./te.js\": 106,\n\t\"./tet\": 107,\n\t\"./tet.js\": 107,\n\t\"./th\": 108,\n\t\"./th.js\": 108,\n\t\"./tl-ph\": 109,\n\t\"./tl-ph.js\": 109,\n\t\"./tlh\": 110,\n\t\"./tlh.js\": 110,\n\t\"./tr\": 111,\n\t\"./tr.js\": 111,\n\t\"./tzl\": 112,\n\t\"./tzl.js\": 112,\n\t\"./tzm\": 114,\n\t\"./tzm-latn\": 113,\n\t\"./tzm-latn.js\": 113,\n\t\"./tzm.js\": 114,\n\t\"./uk\": 115,\n\t\"./uk.js\": 115,\n\t\"./ur\": 116,\n\t\"./ur.js\": 116,\n\t\"./uz\": 118,\n\t\"./uz-latn\": 117,\n\t\"./uz-latn.js\": 117,\n\t\"./uz.js\": 118,\n\t\"./vi\": 119,\n\t\"./vi.js\": 119,\n\t\"./x-pseudo\": 120,\n\t\"./x-pseudo.js\": 120,\n\t\"./yo\": 121,\n\t\"./yo.js\": 121,\n\t\"./zh-cn\": 122,\n\t\"./zh-cn.js\": 122,\n\t\"./zh-hk\": 123,\n\t\"./zh-hk.js\": 123,\n\t\"./zh-tw\": 124,\n\t\"./zh-tw.js\": 124\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 277;\n\n/***/ }),\n\n/***/ 278:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div ng-if=\\\"$ctrl.dataViolations.length != 0\\\">\\n    <ul>\\n        <li ng-repeat=\\\"dataViolation in $ctrl.dataViolations\\\">\\n            <div style=\\\"margin: 5px\\\">\\n                <div class=\\\"tag\\\" ng-if=\\\"dataViolation.actionUrl\\\">\\n                    <a style=\\\"color: white\\\" href=\\\"{{$ctrl.serverUrl}}/{{dataViolation.actionUrl}}\\\">\\n                        <strong>\\n                            Fix\\n                        </strong>\\n                    </a>\\n                </div>\\n                <div>\\n                    {{ dataViolation.notes ? dataViolation.notes : dataViolation.rule.ruleName}}\\n                </div>\\n            </div>\\n        </li>\\n    </ul>\\n</div>\\n<div ng-if=\\\"$ctrl.dataViolations.length == 0\\\">\\n    None\\n</div>\"\n\n/***/ }),\n\n/***/ 279:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"input-group date\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\">\\n    <div class=\\\"input-group-addon\\\">\\n        <span class=\\\"icon-calendar\\\"></span>\\n    </div>\\n</div>\\n\"\n\n/***/ }),\n\n/***/ 280:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<ul>\\n    <li ng-repeat=\\\"obs in $ctrl.obs\\\">\\n        <div style=\\\"display: block; overflow: hidden; padding-right: 5px; padding-bottom: 2px\\\">\\n            <span style=\\\"float: left\\\">\\n                {{obs.concept.name.display}}: <strong>{{obs.value}}</strong>\\n            </span>\\n            <span style=\\\"float: right; font-size: small; color: #939393\\\">\\n                {{$ctrl.widgetsCommons.dateToDaysAgoMessage(obs.obsDatetime)}}\\n            </span>\\n        </div>\\n    </li>\\n</ul>\"\n\n/***/ }),\n\n/***/ 281:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<table ng-if=\\\"$ctrl.encounters.length != 0\\\">\\n    <thead>\\n        <tr>\\n            <th>Encounter</th>\\n            <th ng-repeat=\\\"concept in $ctrl.concepts\\\">{{concept.display}}</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr ng-repeat=\\\"encounter in $ctrl.encounters| orderBy: '-encounterDatetime'\\\">\\n            <th style=\\\"white-space: nowrap;\\\">{{encounter.encounterDatetime | date: $ctrl.config.dateFormat}}</th>\\n            <th ng-repeat=\\\"ob in encounter.obs\\\">\\n                {{ob.value}}\\n            </th>\\n        </tr>\\n    </tbody>\\n</table>\\n<p ng-if=\\\"$ctrl.encounters.length == 0\\\">None</p>\"\n\n/***/ }),\n\n/***/ 282:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div ng-if=\\\"$ctrl.series.length > 0\\\">\\n    <div style=\\\"padding-bottom: 10px\\\">\\n        <strong>\\n            {{$ctrl.concept.display}}\\n        </strong>\\n    </div>\\n    <canvas class=\\\"chart chart-line\\\" chart-data=\\\"$ctrl.data\\\" chart-labels=\\\"$ctrl.labels\\\"\\n            chart-series=\\\"$ctrl.series\\\"></canvas>\\n</div>\\n<div ng-if=\\\"$ctrl.series.length === 0\\\">\\n    None\\n</div>\"\n\n/***/ }),\n\n/***/ 283:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- NOTE: work-in-progress, consider this not yet an \\\"official\\\" release of this widgets, future changes may not be backwards-compatible and change functionality signficantly -->\\n\\n<!-- TODO move styles to separate file? -->\\n\\n<style>\\n    #cancel-button {\\n        padding: 2px 5px;\\n        margin: 5px;\\n        font-size: 0.8em;;\\n    }\\n\\n    #enroll-button {\\n        padding: 2px 5px;\\n        margin: 5px;\\n        font-size: 0.8em;;\\n    }\\n</style>\\n<ul>\\n    <li ng-show=\\\"$ctrl.patientPrograms.length != 0\\\" ng-repeat=\\\"patientProgram in $ctrl.patientPrograms | orderBy: '-dateEnrolled'\\\">\\n        <a ng-click=\\\"$ctrl.gotoProgramDashboard(patientProgram.program.uuid)\\\">\\n            {{ patientProgram.program.display }}\\n        </a>\\n\\n        <div ng-show=\\\"!patientProgram.dateCompleted\\\" class=\\\"tag\\\">{{ patientProgram.dateEnrolled | date:$ctrl.dateFormat }} - {{'coreapps.dashboardwidgets.programs.current' | translate }}</div>\\n        <div ng-show=\\\"patientProgram.dateCompleted\\\" class=\\\"tag\\\">{{ patientProgram.dateEnrolled | date:$ctrl.dateFormat }} - {{ patientProgram.dateCompleted | date:$ctrl.dateFormat }}</div>\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.patientPrograms.length == 0\\\">\\n        {{'coreapps.none' | translate }}\\n    </li>\\n\\n</ul>\\n\\n\\n<div ng-show=\\\"$ctrl.canEnrollInProgram && !$ctrl.showAddProgram && $ctrl.config.enableProgramDashboards && $ctrl.unenrolledPrograms && $ctrl.unenrolledPrograms.length > 0\\\">\\n    <a class=\\\"add-link\\\" ng-click=\\\"$ctrl.addProgram()\\\">\\n        <i class=\\\"icon-plus-sign\\\" title=\\\"{{'coreapps.dashboardwidgets.programs.addProgram' | translate }}\\\"/>\\n    </a>\\n</div>\\n\\n<div ng-show=\\\"$ctrl.showAddProgram\\\">\\n    <div>\\n        <select  ng-model=\\\"$ctrl.input.program\\\"\\n                 ng-options=\\\"program.uuid as program.display for program in $ctrl.unenrolledPrograms\\\">\\n            <option value=\\\"\\\">{{'coreapps.dashboardwidgets.programs.selectProgram' | translate }}:</option>\\n        </select>\\n        <br/>\\n    </div>\\n    <div>\\n        <button id=\\\"enroll-button\\\" class=\\\"confirm\\\" ng-click=\\\"$ctrl.gotoProgramDashboard()\\\">{{'coreapps.enroll' | translate }}</button>\\n        <button id=\\\"cancel-button\\\" class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelAddProgram()\\\">{{'coreapps.cancel' | translate }}</button>\\n    </div>\\n</div>\"\n\n/***/ }),\n\n/***/ 284:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<ul>\\n    <li>{{'coreapps.dashboardwidgets.programstatistics.currentlyEnrolled' | translate }}: {{  $ctrl.currentlyEnrolled != null ? $ctrl.currentlyEnrolled : 'coreapps.dashboardwidgets.programstatistics.loading' | translate }}</li>\\n    <li>{{'coreapps.dashboardwidgets.programstatistics.everEnrolled' | translate }}: {{  $ctrl.everEnrolled != null ? $ctrl.everEnrolled : 'coreapps.dashboardwidgets.programstatistics.loading' | translate }}</li>\\n</ul>\"\n\n/***/ }),\n\n/***/ 285:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- TODO: move css to separate file? the the \\\"workflow-header\\\" is a super hack, should be fixed by someone who understands css bettter -->\\n<!-- input-group-addon is to fix alignment of calendar icons on date pickers -->\\n\\n<style>\\n\\n    .input-group-addon {\\n        display: inline-block;;\\n    }\\n\\n    input {\\n        width: 80%\\n    }\\n\\n    .programstatus-fieldset, .programstatus-field {\\n        padding-top: 2px;\\n        padding-bottom: 2px;\\n    }\\n\\n    .workflow-section {\\n        padding-top: 5px;\\n    }\\n\\n    .workflow-table {\\n        border: none !important;\\n        font-size: 0.8em !important;\\n        background: #f9f9f9 !important;\\n    }\\n\\n    .workflow-header  {\\n        width: 100% !important;\\n        text-align: left !important;\\n    }\\n\\n    .workflow-cell {\\n        border: none !important;\\n        font-size: 0.8em !important;\\n    }\\n\\n    .hidden {\\n        visibility: hidden;\\n    }\\n\\n    .center {\\n        margin-left: 0px;\\n        margin-right: 0px;\\n        text-align: center;\\n    }\\n\\n    .bold {\\n        font-weight: bold;\\n    }\\n\\n</style>\\n\\n<div ng-show=\\\"$ctrl.deleted\\\">\\n    {{ 'coreapps.dashboardwidgets.programstatus.programDeleted' | translate }}\\n</div>\\n\\n<div ng-show=\\\"$ctrl.loaded && !$ctrl.deleted\\\">\\n    <div ng-show=\\\"$ctrl.canEnrollInProgram && !$ctrl.patientProgram && $ctrl.expanded.enrollment\\\">\\n        <fieldset class=\\\"programstatus-fieldset\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.enrollmentdate' | translate }}</h3>\\n\\t\\t\\t<p class=\\\"programstatus-field\\\">\\n                <openmrs-datepicker ng-model=\\\"$ctrl.input.dateEnrolled\\\"\\n                                    format=\\\"{{$ctrl.dateFormat}}\\\"\\n                                    start-date=\\\"$ctrl.minEnrollmentDate\\\"\\n                                    end-date=\\\"$ctrl.today\\\"/>\\n            </p>\\n        </fieldset>\\n        <fieldset class=\\\"programstatus-fieldset\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.enrollmentlocation' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <select ng-model=\\\"$ctrl.input.enrollmentLocation\\\"\\n                        ng-options=\\\"location.uuid as location.display for location in $ctrl.programLocations\\\">\\n                </select>\\n            </p>\\n        </fieldset>\\n        <div ng-repeat=\\\"workflow in $ctrl.program.workflows track by $index\\\" ng-show=\\\"$ctrl.program.workflows.length != 0\\\">\\n            <fieldset class=\\\"programstatus-fieldset\\\">\\n                <h3>{{ workflow.concept.display }}</h3>\\n                <p class=\\\"programstatus-field\\\">\\n                    <select ng-model=\\\"$ctrl.input.initialWorkflowStateByWorkflow[workflow.uuid].state\\\"\\n                            ng-options=\\\"state.uuid as state.concept.display for state in $ctrl.statesByWorkflow[workflow.uuid] | filter: $ctrl.isInitialState() | orderBy: 'concept.display' \\\">\\n                        <option value=\\\"\\\"></option>\\n                    </select>\\n                </p>\\n            </fieldset>\\n        </div>\\n        <div class=\\\"center\\\">\\n            <button class=\\\"confirm\\\" ng-disabled=\\\"!$ctrl.enrollmentValid()\\\" ng-click=\\\"$ctrl.enrollInProgram()\\\">{{'coreapps.enroll' | translate }}</button>\\n            <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelEnrollment()\\\">{{'coreapps.cancel' | translate }}</button>\\n        </div>\\n    </div>\\n\\n    <div ng-show=\\\"$ctrl.canEnrollInProgram && !$ctrl.patientProgram && !$ctrl.expanded.enrollment\\\">\\n        <div class=\\\"center\\\">\\n            {{ 'coreapps.dashboardwidgets.programstatus.notCurrentlyEnrolled' | translate }}\\n        </div>\\n        <div class=\\\"center\\\">\\n            <button class=\\\"confirm\\\" ng-click=\\\"$ctrl.expanded.enrollment = true\\\">{{'coreapps.enroll' | translate }}</button>\\n        </div>\\n    </div>\\n\\n    <div ng-show=\\\"$ctrl.patientProgram\\\">\\n\\n        <!-- VIEW sections -->\\n\\n        <fieldset  class=\\\"programstatus-fieldset\\\" ng-show=\\\"!$ctrl.edit.enrollment\\\">\\n            <i ng-show=\\\"$ctrl.canDeleteProgram && !$ctrl.inEditMode() && !$ctrl.inConfirmDelete()\\\" ng-click=\\\"$ctrl.deletePatientProgram()\\\" class=\\\"icon-remove right\\\"/>\\n            <i ng-show=\\\"$ctrl.canEditProgram && !$ctrl.inEditMode() && !$ctrl.inConfirmDelete()\\\" ng-click=\\\"$ctrl.toggleEditEnrollment()\\\" class=\\\"icon-pencil right\\\"/>\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.enrolled' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">{{ $ctrl.patientProgram.dateEnrolled | date:$ctrl.dateFormat }}</p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\"  ng-show=\\\"!$ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.location' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">{{ $ctrl.patientProgram.location.display }}</p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"!$ctrl.edit.enrollment && $ctrl.programIsCompleted()\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.completed' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">{{ $ctrl.patientProgram.dateCompleted | date:$ctrl.dateFormat }}</p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.programOutcomes && !$ctrl.edit.enrollment && $ctrl.programIsCompleted()\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.outcome' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">{{ $ctrl.patientProgram.outcome.display }}</p>\\n        </fieldset>\\n\\n        <!-- EDIT sections -->\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.enrolled' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <openmrs-datepicker ng-model=\\\"$ctrl.input.dateEnrolled\\\"\\n                                    format=\\\"{{$ctrl.dateFormat}}\\\"\\n                                    start-date=\\\"$ctrl.minEnrollmentDate\\\"\\n                                    end-date=\\\"$ctrl.input.dateCompleted ? $ctrl.input.dateCompleted : $ctrl.today\\\"\\n                                    language=\\\"{{$ctrl.language}}\\\"/>\\n            </p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.location' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <select ng-model=\\\"$ctrl.input.enrollmentLocation\\\"\\n                    ng-options=\\\"location.uuid as location.display for location in $ctrl.programLocations\\\">\\n                </select>\\n            </p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.completed' | translate }}:</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <openmrs-datepicker ng-model=\\\"$ctrl.input.dateCompleted\\\"\\n                                format=\\\"{{$ctrl.dateFormat}}\\\"\\n                                start-date=\\\"$ctrl.getMostRecentStateChangeDate() ? $ctrl.getMostRecentStateChangeDate() : $ctrl.input.dateEnrolled\\\"\\n                                end-date=\\\"$ctrl.maxCompletionDate ? $ctrl.maxCompletionDate : $ctrl.today\\\"\\n                                clear-btn=\\\"true\\\"\\n                                language=\\\"{{$ctrl.language}}\\\"/>\\n            </p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.programOutcomes && $ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.outcome' | translate }}:</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <select ng-model=\\\"$ctrl.input.outcome\\\"\\n                    ng-options=\\\"outcome.uuid as outcome.display for outcome in $ctrl.programOutcomes | orderBy: 'display' \\\">\\n                    <option value=\\\"\\\"></option>\\n                </select>\\n            </p>\\n        </fieldset>\\n\\n        <div ng-show=\\\"$ctrl.edit.enrollment\\\" class=\\\"center\\\">\\n            <button class=\\\"confirm\\\" ng-disabled=\\\"!$ctrl.enrollmentValid()\\\" ng-click=\\\"$ctrl.update()\\\">{{'coreapps.save' | translate }}</button>  <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelEdit()\\\">{{'coreapps.cancel' | translate }}</button>\\n        </div>\\n\\n        <!-- DELETE confirmation section -->\\n\\n        <div ng-show=\\\"$ctrl.confirmDelete.enrollment\\\" class=\\\"center\\\">\\n            {{'coreapps.dashboardwidgets.programstatus.confirmDelete' | translate }}\\n            <br/><br/>\\n            <button class=\\\"confirm\\\" ng-click=\\\"$ctrl.deletePatientProgram()\\\">{{'coreapps.delete' | translate }}</button>  <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelDelete()\\\">{{'coreapps.cancel' | translate }}</button>\\n        </div>\\n\\n        <!-- workflow sections -->\\n\\n        <div class=\\\"workflow-section\\\" ng-repeat=\\\"workflow in $ctrl.program.workflows track by $index\\\" ng-show=\\\"$ctrl.program.workflows.length != 0\\\">\\n            <!-- TODO review the use of the \\\"isToday\\\" functionality -->\\n            <h3 class=\\\"workflow-header\\\">{{ workflow.concept.display }}\\n                <i ng-show=\\\"$ctrl.canEditProgram && !$ctrl.inEditMode() && !$ctrl.inConfirmDelete() && !$ctrl.isToday($ctrl.sortedStatesByWorkflow[workflow.uuid].startDate)\\\" ng-click=\\\"$ctrl.toggleEditWorkflow(workflow.uuid)\\\" class=\\\"icon-pencil\\\"/>\\n            </h3>\\n\\n            <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.workflow[workflow.uuid]\\\">\\n                <h3>{{'coreapps.dashboardwidgets.programstatus.transitionTo' | translate }}</h3>\\n                <p class=\\\"programstatus-field\\\">\\n                    <select ng-model=\\\"$ctrl.input.changeToStateByWorkflow[workflow.uuid].state\\\"\\n                            ng-options=\\\"state.uuid as state.concept.display for state in $ctrl.statesByWorkflow[workflow.uuid] | filter: $ctrl.isNotCurrentState(workflow) | orderBy: 'concept.display' \\\">\\n                        <option value=\\\"\\\"></option>\\n                    </select>\\n                </p>\\n            </fieldset>\\n\\n            <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.workflow[workflow.uuid]\\\">\\n                <h3>{{'coreapps.on' | translate }}</h3>\\n                <p class=\\\"programstatus-field\\\">\\n                    <openmrs-datepicker ng-model=\\\"$ctrl.input.changeToStateByWorkflow[workflow.uuid].date\\\"\\n                                        format=\\\"{{$ctrl.dateFormat}}\\\"\\n                                        start-date=\\\"$ctrl.sortedStatesByWorkflow[workflow.uuid] ? $ctrl.sortedStatesByWorkflow[workflow.uuid][0].dayAfterStartDate : $ctrl.input.dateEnrolled\\\"\\n                                        end-date=\\\"$ctrl.programIsCompleted() ? $ctrl.patientProgram.dateCompleted : $ctrl.today\\\"\\n                                        language=\\\"{{$ctrl.language}}\\\"/>\\n                </p>\\n            </fieldset>\\n\\n            <div ng-show=\\\"$ctrl.edit.workflow[workflow.uuid]\\\" class=\\\"center\\\">\\n                <button class=\\\"confirm\\\" ng-disabled=\\\"!$ctrl.workflowTransitionValid(workflow.uuid)\\\" ng-click=\\\"$ctrl.updatePatientState(workflow.uuid)\\\">{{'coreapps.save' | translate }}</button>  <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.toggleEditWorkflow(workflow.uuid)\\\">{{'coreapps.cancel' | translate }}</button>\\n            </div>\\n\\n            <table class=\\\"workflow-table\\\">\\n                <tr ng-repeat=\\\"row in $ctrl.sortedStatesByWorkflow[workflow.uuid]\\\" ng-show=\\\"$first || $ctrl.expanded.workflow[workflow.uuid]\\\">\\n                    <td class=\\\"workflow-cell\\\">\\n                        {{ row.startDate | date:$ctrl.dateFormat }}\\n                        <span ng-show=\\\"!$first\\\">{{'coreapps.to' | translate}} {{ row.endDate | date:$ctrl.dateFormat }} </span>\\n                    </td>\\n                    <td class=\\\"workflow-cell\\\" ng-class=\\\"{bold:$first}\\\">\\n                        {{ row.state.concept.display }}\\n                    </td>\\n                    <td class=\\\"workflow-cell\\\">\\n                        <i ng-show=\\\"$first && $ctrl.canEditProgram  && !$ctrl.inEditMode() && !$ctrl.inConfirmDelete()\\\" class=\\\"icon-remove right\\\" ng-click=\\\"$ctrl.deleteMostRecentPatientState(workflow.uuid)\\\"/>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td class=\\\"workflow-cell\\\" colspan=\\\"4\\\" ng-show=\\\"!$ctrl.expanded.workflow[workflow.uuid] && $ctrl.sortedStatesByWorkflow[workflow.uuid] && $ctrl.sortedStatesByWorkflow[workflow.uuid].length > 1\\\">\\n                        <a ng-click=\\\"$ctrl.toggleExpandedWorkflow(workflow.uuid)\\\">{{ 'coreapps.showMore' | translate }}</a>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td class=\\\"workflow-cell\\\" colspan=\\\"4\\\" ng-show=\\\"$ctrl.expanded.workflow[workflow.uuid] && $ctrl.sortedStatesByWorkflow[workflow.uuid] && $ctrl.sortedStatesByWorkflow[workflow.uuid].length > 1\\\">\\n                        <a ng-click=\\\"$ctrl.toggleExpandedWorkflow(workflow.uuid)\\\">{{ 'coreapps.showLess' | translate }}</a>\\n                    </td>\\n                </tr>\\n            </table>\\n\\n            <!-- DELETE  workflow confirmation section -->\\n\\n            <div ng-show=\\\"$ctrl.confirmDelete.workflow[workflow.uuid]\\\" class=\\\"center\\\">\\n                {{'coreapps.dashboardwidgets.programstatus.confirmWorkflowStateDelete' | translate }}\\n                <br/><br/>\\n                <button class=\\\"confirm\\\" ng-click=\\\"$ctrl.deleteMostRecentPatientState(workflow.uuid)\\\">{{'coreapps.delete' | translate }}</button>  <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelDelete()\\\">{{'coreapps.cancel' | translate }}</button>\\n            </div>\\n\\n        </div>\\n\\n\\n\\n    </div>\\n\\n</div>\\n\"\n\n/***/ }),\n\n/***/ 286:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<ul>\\n    <li class=\\\"relationship-li\\\" ng-show=\\\"$ctrl.relationships.length != 0\\\" ng-repeat=\\\"relationship in $ctrl.relationships track by $index\\\">\\n        <div class=\\\"relationship-wrapper\\\">\\n            <div class=\\\"fifty-percent relationship-inner\\\">\\n                <span>\\n                    <a ng-show=\\\"relationship.isPatient || relationship.isProvider\\\" ng-click=\\\"$ctrl.goTo(relationship.toPerson.uuid)\\\">\\n                        {{relationship.toPerson.display ? relationship.toPerson.display : relationship.toPerson.personName.display}}\\n                    </a>\\n                    <span ng-show=\\\"!relationship.isPatient && !relationship.isProvider\\\">{{relationship.toPerson.display ? relationship.toPerson.display : relationship.toPerson.personName.display}}</span>\\n                </span>\\n            </div>\\n            <div class=\\\"tag forty-percent relationship-inner\\\">\\n                <span ng-show=\\\"$ctrl.hasEditPrivileges == true && $ctrl.removeFlag == false && $ctrl.edit == false\\\" class=\\\"remove-tag\\\">\\n                    <a ng-show=\\\"relationship.isPatient\\\" class=\\\"remove-link\\\" ng-click=\\\"$ctrl.removeRelationship(relationship.uuid)\\\">\\n                        <i class=\\\"icon-remove\\\" title=\\\"Remove relationship\\\"></i>\\n                    </a>\\n                </span>\\n                {{relationship.type}}\\n            </div>\\n        </div>\\n    </li>\\n    <p ng-show=\\\"$ctrl.relationships.length == 0\\\">\\n        {{ 'coreapps.none' | translate }}\\n    </p>\\n\\n    <li ng-show=\\\"$ctrl.removeFlag\\\">\\n        {{ 'coreapps.dashboardwidgets.relationships.confirmRemove' | translate }}\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.hasEditPrivileges && !$ctrl.edit && !$ctrl.removeFlag\\\">\\n        <a class=\\\"add-link\\\" ng-click=\\\"$ctrl.addRelationship()\\\">\\n            <i class=\\\"icon-plus-sign\\\" title=\\\"Add relationship\\\"></i>\\n        </a>\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.edit\\\">\\n        {{ 'coreapps.dashboardwidgets.relationships.add' | translate }}\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.edit\\\">\\n        <p class=\\\"left\\\">\\n        <select class=\\\"relationship-input\\\" ng-options=\\\"type as type.name for type in $ctrl.types\\\"\\n                ng-model=\\\"$ctrl.relationshipType\\\" ng-change=\\\"$ctrl.updateRelationshipType()\\\">\\n            <option value=\\\"\\\">{{ 'coreapps.dashboardwidgets.relationships.whatType' | translate }}</option>\\n        </select>\\n\\n        </p>\\n    </li>\\n    <li ng-show=\\\"$ctrl.showFindOtherPerson\\\">\\n        &nbsp;\\n    </li>\\n    <li ng-show=\\\"$ctrl.showFindOtherPerson\\\">\\n        <p class=\\\"left\\\">\\n            <input type=\\\"text\\\" class=\\\"person-typeahead relationship-input\\\" placeholder=\\\"{{ 'coreapps.relationships.find' | translate }} {{ $ctrl.relationshipType.name }}\\\"\\n                   ng-model=\\\"$ctrl.searchPerson\\\"\\n                   typeahead-no-results=\\\"noResults\\\"\\n                   ng-change=\\\"$ctrl.searchPersons()\\\"\\n                   uib-typeahead=\\\"person as person.display + ' (' + person.gender + ', ' + (person.age ? person.age:'') + ')' for person in $ctrl.relatedPersons\\\"\\n                   typeahead-wait-ms=\\\"250\\\"\\n                   typeahead-select-on-exact=\\\"true\\\"\\n                   typeahead-min-length=\\\"3\\\"\\n                   typeahead-on-select=\\\"$ctrl.onSelect($item, $model, $label)\\\"\\n                   />\\n        </p>\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.edit\\\">\\n        <p>\\n        <div>\\n            <button class=\\\"tag\\\" ng-show=\\\"$ctrl.showSaveButton\\\" ng-click=\\\"$ctrl.save()\\\">{{ 'coreapps.save' | translate }}</button>\\n            <button class=\\\"cancel-tag\\\" ng-click=\\\"$ctrl.cancel()\\\">{{ 'coreapps.cancel' | translate }}</button>\\n        </div>\\n        </p>\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.removeFlag\\\">\\n        <p>\\n        <div>\\n            <button class=\\\"tag\\\" ng-click=\\\"$ctrl.remove()\\\">{{ 'coreapps.delete' | translate }}</button>\\n            <button class=\\\"cancel-tag\\\" ng-click=\\\"$ctrl.cancel()\\\">{{ 'coreapps.cancel' | translate }}</button>\\n        </div>\\n        </p>\\n    </li>\\n\\n</ul>\"\n\n/***/ }),\n\n/***/ 287:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<ul>\\n    <li ng-if=\\\"$ctrl.visits.length != 0\\\" ng-repeat=\\\"visit in $ctrl.visits track by $index\\\">\\n        <a href=\\\"{{$ctrl.serverUrl}}/coreapps/patientdashboard/patientDashboard.page?patientId={{$ctrl.config.patientUuid}}&visitId={{visit.uuid}}\\\">\\n            {{visit.startDatetime | date: $ctrl.config.dateFormat}}\\n        </a>\\n        <div class=\\\"tag\\\" ng-if=\\\"visit.encounterType !== ''\\\">{{visit.encounterType}}</div>\\n    </li>\\n    <p ng-if=\\\"$ctrl.visits.length == 0\\\">\\n        None\\n    </p>\\n</ul>\"\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _angular = __webpack_require__(2);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _dashboardwidgetscommons = __webpack_require__(146);\n\nvar _dashboardwidgetscommons2 = _interopRequireDefault(_dashboardwidgetscommons);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar services = _angular2.default.module('dashboardwidgets.services', []);\n\nservices.service('widgetsCommons', _dashboardwidgetscommons2.default);\n\nexports.default = services.name;\n\n/***/ })\n\n},[153]);\n});\n\n\n// WEBPACK FOOTER //\n// coreapps.dashboardwidgets.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport { DatatIntegrityViolationsComponent } from './dataintegrityviolations.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.dataintegrityviolations\", [ openmrsApi ])\n\t.component(DatatIntegrityViolationsComponent.selector, DatatIntegrityViolationsComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/dataintegrityviolations/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport commons from './../dashboardwidgets.services';\nimport { LatestObsForConceptListComponent } from './latestobsforconceptlist.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.latestobsforconceptlist\", [ openmrsApi, commons ])\n\t.component(LatestObsForConceptListComponent.selector, LatestObsForConceptListComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport commons from './../dashboardwidgets.services';\n\nimport { ObsAcrossEncountersComponent } from './obsacrossencounters.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.obsacrossencounters\", [ openmrsApi, commons ])\n\t.component(ObsAcrossEncountersComponent.selector, ObsAcrossEncountersComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/obsacrossencounters/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport chartjs from 'angular-chart.js';\nimport commons from './../dashboardwidgets.services';\n\nimport { ObsGraphComponent } from './obsgraph.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.obsgraph\", [openmrsApi, commons, chartjs])\n\t.component(ObsGraphComponent.selector, ObsGraphComponent)\n\t.config(['ChartJsProvider', function (ChartJsProvider) {\n\t\tChartJsProvider.setOptions({\n\t\t\tchartColors: ['#00463f'],\n\t\t\telements: {\n\t\t\t\tline: {\n\t\t\t\t\ttension: 0\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}]).name;\n\t\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/obsgraph/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport openmrsTranslate from '@openmrs/angularjs-openmrs-api';\n\nimport { ProgramsComponent } from './programs.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.programs\", [ openmrsApi, openmrsTranslate ])\n\t.component(ProgramsComponent.selector, ProgramsComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programs/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport openmrsTranslate from '@openmrs/angularjs-openmrs-api';\n\nimport { ProgramStatisticsComponent } from './programstatistics.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.programstatistics\", [ openmrsApi, openmrsTranslate ])\n    .component(ProgramStatisticsComponent.selector, ProgramStatisticsComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programstatistics/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport openmrsTranslate from '@openmrs/angularjs-openmrs-api';\nimport datepicker from './../datepicker';\n\nimport { ProgramStatusComponent } from './programstatus.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.programstatus\", [ openmrsApi, datepicker, openmrsTranslate ])\n\t.component(ProgramStatusComponent.selector, ProgramStatusComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programstatus/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport openmrsTranslate from '@openmrs/angularjs-openmrs-api';\nimport typeahead from 'angular-ui-bootstrap/src/typeahead';\n\nimport { RelationshipsComponent } from './relationships.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.relationships\", [ openmrsApi, typeahead, openmrsTranslate ])\n\t.component(RelationshipsComponent.selector, RelationshipsComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/relationships/index.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport commons from './../dashboardwidgets.services';\n\nimport { VisitByEncounterTypeComponent } from './visitbyencountertype.component';\n\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.visitbyencountertype\", [ openmrsApi, commons ])\n\t.component(VisitByEncounterTypeComponent.selector, VisitByEncounterTypeComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/visitbyencountertype/index.js","export default class WidgetsCommons {\n\n        // Method used to define days since given date and return it as message\n        dateToDaysAgoMessage(date) {\n            let days = this.dateToDaysAgo(date);\n\n            if (days == 0) {\n                return \"today\"\n            }\n            else if (days == 1) {\n                return days + \" day ago\"\n            }\n            else {\n                return days + \" days ago\"\n            }\n        };\n\n        // Method used to define days since given date\n        dateToDaysAgo(date) {\n            const time = new Date(date).getTime();\n            const seconds = Math.floor((new Date().getTime() - time) / 1000);\n            const interval = Math.floor(seconds / 86400);\n            let days = 0;\n            if (interval > 1) {\n                days = interval;\n            }\n            return days;\n        };\n\n        // Method used to parse maxAge to day count\n        maxAgeToDays(maxAge) {\n            if (typeof maxAge === 'undefined') {\n                return undefined;\n            } else {\n                let days = 0;\n                const values = maxAge.split(\" \");\n                for (const value of values) {\n                    if (value.includes(\"d\")) {\n                        days += parseInt(value.replace(\"d\", \"\"));\n                    }\n                    if (value.includes(\"w\")) {\n                        days += parseInt(value.replace(\"w\", \"\")) * 7;\n                    }\n                    if (value.includes(\"m\")) {\n                        days += parseInt(value.replace(\"m\", \"\")) * 30;\n                    }\n                    if (value.includes(\"y\")) {\n                        days += parseInt(value.replace(\"y\", \"\")) * 365;\n                    }\n                }\n                return days;\n            }\n        };\n\n        maxAgeToDate(maxAge) {\n            if(typeof maxAge === 'undefined')\n                return null;\n\n            var today = new Date();\n            if( maxAge.indexOf('d') !== -1 ){\n                maxAge = maxAge.replace('d', '');\n                today.setDate(today.getDate()-parseInt(maxAge));\n            } else if( maxAge.indexOf('w') !== -1 ){\n                maxAge = maxAge.replace('w', '');\n                today.setDate(today.getDate()-(parseInt(maxAge)*7));\n            } else if( maxAge.indexOf('m') !== -1 ){\n                maxAge = maxAge.replace('m', '');\n                today.setMonth(today.getMonth()-parseInt(maxAge));\n            } else if( maxAge.indexOf('y') !== -1 ){\n                maxAge = maxAge.replace('y', '');\n                today.setDate(today.getYear()-(parseInt(maxAge)));\n            } else {\n                return null;\n            }\n            return today;\n        };\n}\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/dashboardwidgetscommons.service.js","import DataIntegrityViolationsController from './dataintegrityviolations.controller';\nimport template from './dataintegrityviolations.html';\n\nexport let DatatIntegrityViolationsComponent = {\n    template,\n    controller: DataIntegrityViolationsController,\n    selector: 'dataintegrityviolations',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/dataintegrityviolations/dataintegrityviolations.component.js","export default class DataIntegrityViolationsController {\n    constructor (openmrsRest) {\n        'ngInject';\n\n        Object.assign(this, { openmrsRest });\n    }\n\n    $onInit() {\n        this.dataViolations = [];\n\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n        this.openmrsRest.getServerUrl().then((result) => {\n            this.serverUrl = result;\n        });\n\n        // Set default maxResults if not defined\n        if (angular.isUndefined(this.config.maxResults)) {\n            this.config.maxResults = 6;\n        }\n\n        this.openmrsRest.list('dataintegrity/integrityresults', { patient: this.config.patientUuid, v: 'full', limit: this.config.maxResults }).then((resp) => {\n            for (let index = 0; index < resp.results.length; index++) {\n                this.dataViolations.push(resp.results[index]);\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/dataintegrityviolations/dataintegrityviolations.controller.js","import controller from './datepicker.controller';\nimport template from './datepicker.html';\n\nexport let DatepickerComponent = {\n    template,\n    controller,\n    selector: 'openmrsDatepicker',\n    bindings: {\n        ngModel: '=',\n        format: '@',\n        language: '@',\n        startDate: '<',\n        endDate: '<',\n        clearBtn: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/datepicker/datepicker.component.js","import angular from 'angular';\n\nexport default class DatepickerController  {\n    constructor($document, $element, $scope, $filter, $timeout, openmrsTranslate) {\n        'ngInject';\n\n        Object.assign(this, { $document, $element, $scope, $filter, $timeout, openmrsTranslate });\n    }\n\n    $onInit() {\n        this.$document.ready(() => {\n            this.openmrsTranslate.getLanguage().then((language) => {\n                $(this.$element).datepicker({\n                    format: this.convertDateFormat(this.format),\n                    autoclose: true,\n                    container: \"html\",\n                    language:  language,\n                    clearBtn: this.clearBtn\n                }).on(\"changeDate\", (e) => {\n                    if (e.date != null) {\n                        if (this.ngModel == null || this.stripTime(this.ngModel).getTime() !== this.stripTime(e.date).getTime()) {\n                            //apply changes if not triggered by the watch\n                            this.$scope.$apply(() => {\n                                this.ngModel = this.stripTime(e.date);\n                            });\n                        }\n                    }\n                    // clear out if necessary if set to null and model isn't null\n                    else if (this.ngModel != null) {\n                        this.$timeout(() => {\n                            this.ngModel = null;\n                        })\n                    }\n                });\n\n                this.$scope.$watch(() => { return this.ngModel; },\n                    (value) => { this.updateDates(); }\n                );\n\n                this.$scope.$watch(() => { return this.startDate; },\n                    (value) => { this.updateDates(); }\n                );\n                \n                this.$scope.$watch(() => { return this.endDate; },\n                    (value) => { this.updateDates(); }\n                )\n            });\n        });\n    }\n\n    updateDates() {\n        //I need to update all at once due to a bug in the datepicker, which resets the selected date.\n        $(this.$element).datepicker(\"setStartDate\", this.stripTime(this.startDate));\n        $(this.$element).datepicker(\"setEndDate\", this.stripTime(this.endDate));\n        $(this.$element).datepicker(\"setDate\", this.stripTime(this.ngModel));\n    }\n\n    stripTime(date) {\n        if (date == null) {\n            return null;\n        } else {\n            return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n        }\n    }\n\n    convertDateFormat(dateFormat) {\n        let mappings = {\n            \"MMMM\": \"MM\",\n            \"MMM\": \"M\",\n            \"MM\": \"mm\",\n            \"M\": \"m\",\n            \"yyyy\": \"yy\",\n            \"yy\": \"y\",\n            'EEEE': 'DD',\n            'EEE': 'D'\n        };\n\n        let regex = \"\";\n        for (let mapping in mappings) {\n            regex = regex + mapping + '|';\n        }\n        regex = regex.substring(0, regex.length - 1);\n\n        dateFormat = dateFormat.replace(new RegExp(regex, \"g\"), (match) => {\n            if (mappings[match]) {\n                return mappings[match];\n            } else {\n                return match;\n            }\n        });\n        return dateFormat;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/datepicker/datepicker.controller.js","import angular from 'angular';\nimport openmrsApi from '@openmrs/angularjs-openmrs-api';\nimport 'bootstrap-datepicker';\nimport 'bootstrap-datepicker/dist/css/bootstrap-datepicker.standalone.css';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ar.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.az.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.bg.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.bn.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.br.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.bs.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ca.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.cs.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.cy.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.da.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.de.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.el.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.eo.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.es.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.et.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.eu.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.fa.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.fi.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.fo.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.fr.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.gl.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.he.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.hi.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.hr.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.hu.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.hy.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.id.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.is.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.it.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ja.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ka.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.km.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ko.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.lt.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.lv.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.me.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.mk.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.mn.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ms.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.nb.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.nl.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.no.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.oc.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.pl.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.pt.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ro.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ru.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.si.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.sk.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.sl.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.sq.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.sr.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.sv.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.sw.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.ta.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.tg.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.th.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.tr.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.uk.min.js';\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.vi.min.js';\nimport './locales/bootstrap-datepicker.ht.js';\n\nimport { DatepickerComponent } from './datepicker.component';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets.datepicker\", [openmrsApi])\n\t.component(DatepickerComponent.selector, DatepickerComponent).name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/datepicker/index.js","/**\n * Creole translation for bootstrap-datetimepicker>\n * (Not provided by standard npm install of bootstrap-datepicker)\n */\n(function($){\n    $.fn.datepicker.dates['ht'] = {\n        days: [\"dimanch\", \"lendi\", \"madi\", \"mèkredi\", \"jedi\", \"vandredi\", \"samdi\"],\n        daysShort: [\"dim\", \"len\", \"mad\", \"mek\", \"jed\", \"van\", \"sam\" ],\n        daysMin: [\"d\", \"l\", \"ma\", \"me\", \"j\", \"v\", \"s\", \"d\"],\n        months: [\"janvye\", \"fevriye\", \"mas\", \"avril\", \"me\", \"jen\", \"jiyè\", \"out\", \"septanm\", \"oktòb\", \"novanm\", \"desanm\"],\n        monthsShort: [\"jan\", \"fev\", \"mas\", \"avr\", \"me\", \"jen\", \"jiy\", \"out\", \"sep\", \"okt\", \"nov\", \"des\"],\n        today: \"Jodi a\",\n        suffix: [],\n        meridiem: [\"am\", \"pm\"],\n        weekStart: 1,\n        format: \"dd/mm/yyyy\"\n    };\n}(jQuery));\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/datepicker/locales/bootstrap-datepicker.ht.js","import angular from 'angular';\n\nimport DataIntegrityViolations from './dataintegrityviolations';\nimport LatestObsForConceptList from './latestobsforconceptlist';\nimport ObsAcrossEncounters from './obsacrossencounters';\nimport ObsGraph from './obsgraph';\nimport Programs from './programs';\nimport ProgramStatistics from './programstatistics';\nimport ProgramStatus from './programstatus';\nimport Relationships from './relationships';\nimport VisitByEncounterType from './visitbyencountertype';\n\nexport default angular.module(\"openmrs-contrib-dashboardwidgets\", [ DataIntegrityViolations, LatestObsForConceptList,\n    ObsAcrossEncounters, ObsGraph, Programs, ProgramStatistics, ProgramStatus, Relationships, VisitByEncounterType]).name;\n\n\nangular.element(document).ready(function() {\n    for (var dashboardwidget of document.getElementsByClassName('openmrs-contrib-dashboardwidgets')) {\n        angular.bootstrap(dashboardwidget, [ 'openmrs-contrib-dashboardwidgets' ]);\n    }\n});\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/index.js","import LatestObsForConceptListController from './latestobsforconceptlist.controller';\nimport template from './latestobsforconceptlist.html';\n\nexport let LatestObsForConceptListComponent = {\n    template,\n    controller: LatestObsForConceptListController,\n    selector: 'latestobsforconceptlist',\n\tscope: {},\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/latestobsforconceptlist.component.js","export default class LatestObsForConceptListController {\n    constructor($filter, openmrsRest, widgetsCommons) {\n        'ngInject';\n\n        Object.assign(this, {$filter, openmrsRest, widgetsCommons });\n    }\n\n    $onInit() {\n        this.maxConceptCount = 10;\n        this.maxAgeInDays = undefined;\n        this.obs = [];\n\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n        this.maxAgeInDays = this.widgetsCommons.maxAgeToDays(this.config.maxAge);\n\n        // Remove whitespaces\n        this.config.concepts = this.config.concepts.replace(/\\s/g,'');\n\n        let concepts = this.config.concepts.split(\",\");\n        for (let i = 0; i < concepts.length; i++) {\n            let concept = concepts[i];\n            // Fetch last obs for concept\n            this.openmrsRest.list('obs', {\n                patient: this.config.patientUuid,\n                v: 'full',\n                concept: concept\n            }).then((resp) => {\n                // Don't add more items if max concept count is reached\n                if (this.obs.length < this.maxConceptCount && resp.results.length > 0) {\n                    let obs = resp.results[0];\n                    // Don't add obs older than maxAge\n                    if (angular.isUndefined(this.maxAgeInDays) || this.widgetsCommons.dateToDaysAgo(obs.obsDatetime) <= this.maxAgeInDays) {\n                        // Add last obs for concept to list\n\n                        if (['8d4a505e-c2cc-11de-8d13-0010c6dffd0f',\n                                '8d4a591e-c2cc-11de-8d13-0010c6dffd0f',\n                                '8d4a5af4-c2cc-11de-8d13-0010c6dffd0f'].indexOf(obs.concept.datatype.uuid) > -1) {\n                            //If value is date, time or datetime\n                            var date = this.$filter('date')(new Date(obs.value), this.config.dateFormat);\n                            obs.value = date;\n                        } else if (angular.isDefined(obs.value.display)) {\n                            //If value is a concept\n                            obs.value = obs.value.display;\n                        }\n\n                        this.obs.push(obs);\n                    }\n                }\n            });\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/latestobsforconceptlist.controller.js","import ObsAcrossEncountersController from './obsacrossencounters.controller';\nimport template from './obsacrossencounters.html';\n\nexport let ObsAcrossEncountersComponent = {\n    template,\n    controller: ObsAcrossEncountersController,\n    selector: 'obsacrossencounters',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/obsacrossencounters/obsacrossencounters.component.js","export default class ObsAcrossEncountersController {\n    constructor($filter, openmrsRest, widgetsCommons) {\n        'ngInject';\n\n        Object.assign(this, { $filter, openmrsRest, widgetsCommons });\n    }\n\n    $onInit() {\n        this.order = 'desc';\n        this.concepts = [];\n        this.encounters = [];\n\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n        this.fetchConcepts();\n        this.fetchEncounters();\n    }\n\n    fetchConcepts() {\n        this.concepts = this.getConfigConceptsAsArray(this.config.concepts);\n        for(let i = 0; i < this.concepts.length; i++) {\n            this.openmrsRest.getFull(\"concept/\" + this.concepts[i], {v: 'custom:(uuid,display,names:(display,conceptNameType)'}).then((concept) => {\n                let index = this.concepts.indexOf(concept.uuid);\n                this.concepts[index] = this.getConceptWithShortName(concept);\n            });\n        }\n    }\n\n    fetchEncounters() {\n        this.openmrsRest.get(\"encounter\", {\n            patient: this.config.patientUuid,\n            v: 'custom:(uuid,encounterDatetime,obs:(uuid,value,concept:(uuid,datatype),groupMembers)',\n            limit: this.getMaxRecords(),\n            fromdate: this.widgetsCommons.maxAgeToDate(this.config.maxAge),\n            order: this.order\n        }).then((response) => {\n            this.getEncounters(response.results);\n        });\n    }\n\n    getMaxRecords() {\n        if(this.config.maxRecords == '' || angular.isUndefined(this.config.maxRecords)){\n            return 4;\n        } else {\n            return this.config.maxRecords;\n        }\n    }\n\n    getConfigConceptsAsArray(commaDelimitedConcepts) {\n        return commaDelimitedConcepts.replace(\" \", \"\").split(\",\");\n    }\n\n    getConceptWithShortName(concept) {\n        angular.forEach(concept.names, (name) => {\n            if(name.conceptNameType == 'SHORT'){\n                concept.display = name.display;\n            }\n        });\n        return concept;\n    }\n\n    getEncounters(encounters) {\n        angular.forEach(encounters, (encounter) => {\n            let enc = {\n                encounterDatetime: encounter.encounterDatetime,\n                obs: []\n            };\n            var nullRow = true;\n            angular.forEach(this.getConfigConceptsAsArray(this.config.concepts), (concept) => {\n                let obsValue = this.getObservationForConcept(encounter.obs, concept);\n                enc.obs.push(obsValue);\n                if(obsValue.value !== '-') {\n                    nullRow = false;\n                }\n            });\n\n            if(!nullRow) {\n                this.encounters.push(enc);\n            }\n        });\n    }\n\n    getObservationForConcept(observations, conceptUuid) {\n        for(var i = 0; i < observations.length; i++){\n            var obs = observations[i];\n            if (obs.groupMembers != null) {\n                if (obs.groupMembers.length !== 0) {\n                    //it is a group obs\n                    for (var j = 0; j < obs.groupMembers.length; j++) {\n                        var groupMember = obs.groupMembers[j];\n                        if (groupMember.concept.uuid === conceptUuid) {\n                            obs = groupMember;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (obs.value != null && obs.concept.uuid === conceptUuid) {\n                if (angular.isDefined(obs.value.display)) {\n                    //If value is a concept\n                    obs.value = obs.value.display;\n                }\n                else if (['8d4a505e-c2cc-11de-8d13-0010c6dffd0f',\n                        '8d4a591e-c2cc-11de-8d13-0010c6dffd0f',\n                        '8d4a5af4-c2cc-11de-8d13-0010c6dffd0f'].indexOf(obs.concept.datatype.uuid) > -1) {\n                    //If value is date, time or datetime\n                    var date = this.$filter('date')(new Date(obs.value), this.config.dateFormat);\n                    obs.value = date;\n                }\n\n                return obs;\n            }\n        }\n        return {value: '-'};\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/obsacrossencounters/obsacrossencounters.controller.js","import ObsGraphController from './obsgraph.controller';\nimport template from './obsgraph.html';\n\nexport let ObsGraphComponent = {\n    template,\n    controller: ObsGraphController,\n    selector: 'obsgraph',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/obsgraph/obsgraph.component.js","export default class ObsGraphController {\n    constructor($filter, openmrsRest, widgetsCommons) {\n        'ngInject';\n\n        Object.assign(this, { $filter, openmrsRest, widgetsCommons });\n    }\n    \n    $onInit() {\n        // Max age of obs to display\n        this.maxAgeInDays = undefined;\n\n        // Concept info\n        this.concept = {};\n\n        // Chart data\n        this.series = [];\n        this.labels = [];\n        this.data = [[]];\n\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n        // Set default maxResults if not defined\n        if (angular.isUndefined(this.config.maxResults)) {\n            this.config.maxResults = 4;\n        }\n        // Parse maxAge to day count\n        this.maxAgeInDays = this.widgetsCommons.maxAgeToDays(this.config.maxAge);\n\n        this.openmrsRest.list('obs',{ patient: this.config.patientUuid, v: 'full', limit: this.config.maxResults, concept: this.config.conceptId }).then((resp) => {\n            const obss = resp.results;\n            if (obss.length > 0) {\n                // Set concept to display\n                this.concept = obss[0].concept;\n                this.series.push(this.concept.display);\n                for (let i = 0; i < obss.length; i++) {\n                    let obs = obss[i];\n                    // Show numeric concepts only\n                    if (obs.concept.datatype.display == 'Numeric') {\n                        // Don't add obs older than maxAge\n                        if (angular.isUndefined(this.maxAgeInDays) || this.widgetsCommons.dateToDaysAgo(obs.obsDatetime) <= this.maxAgeInDays) {\n                            // Add obs data for chart display\n                            var date = this.$filter('date')(new Date(obs.obsDatetime), this.config.dateFormat);\n                            this.labels.unshift(date);\n                            this.data[0].unshift(obs.value);\n                        }\n                    }\n                }\n            }\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/obsgraph/obsgraph.controller.js","// NOTE: work-in-progress, consider this not yet an \"official\" release of this widgets, future changes may not be bacwards-compatible and change functionality signficantly\n// TODO: document when we do an \"official\" release\n\nimport ProgramsController from './programs.controller';\nimport template from './programs.html';\n\nexport let ProgramsComponent = {\n    template,\n    controller: ProgramsController,\n    selector: 'programs',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programs/programs.component.js","\nimport angular from 'angular';\n\nexport default class ProgramsController {\n\n    constructor($filter, openmrsRest, openmrsTranslate) {\n        'ngInject';\n\n        Object.assign(this, {$filter, openmrsRest, openmrsTranslate});\n    }\n\n    $onInit() {\n        // the default patient page is the clinician dashboard\n        this.dashboardPage = \"/coreapps/clinicianfacing/patient.page?patientId={{patientUuid}}&dashboard={{dashboard}}\";\n\n        this.programs = [];\n\n        this.unenrolledPrograms = [];\n\n        this.patientPrograms= [];\n\n        this.showAddProgram = false;\n\n        this.canEnrollInProgram = false;\n\n        this.input = {\n            program: \"\"\n        };\n\n        // TODO did this work?\n        this.dateFormat = (this.config.dateFormat == '' || angular.isUndefined(this.config.dateFormat))\n            ? 'yyyy-MM-dd' : this.config.dateFormat;\n\n        this.supportedPrograms = [];\n\n        if (this.config.supportedPrograms) {\n            this.supportedPrograms = this.config.supportedPrograms.split(',');\n        }\n\n        this.activate();\n    }\n\n    activate() {\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n        if(this.config.dashboardPage) {\n            this.dashboardPage = this.config.dashboardPage;\n        }\n\n        this.fetchPrivileges();\n\n        this.fetchPrograms()\n            .then(this.fetchPatientPrograms.bind(this))\n            .then(this.determineUnenrolledPrograms.bind(this));\n    }\n\n    fetchPrivileges() {\n        this.openmrsRest.get('session', {\n            v: 'custom:(privileges)'\n        }).then((response) => {\n            if (response && response.user && angular.isArray(response.user.privileges)) {\n                if (response.user.privileges.some( (p) => { return p.name === 'Task: coreapps.enrollInProgram'; })) {\n                    this.canEnrollInProgram = true;\n                };\n            }\n        });\n    }\n\n    fetchPrograms() {\n        return this.openmrsRest.get('program', {\n            v: 'custom:display,uuid'\n        }).then((response) => {\n            this.getPrograms(response.results)\n        });\n    }\n\n    fetchPatientPrograms() {\n        return this.openmrsRest.get('programenrollment', {\n            patient: this.config.patientUuid,\n            voided: false,\n            limit: this.getMaxRecords(),\n            v: 'custom:program:(uuid,display),dateEnrolled,dateCompleted'\n        }).then((response) => {\n            this.getPatientPrograms(response.results);\n        });\n    }\n\n    getPrograms(programs) {\n        angular.forEach(programs, (program) => {\n            // filter out any unsupported programs\n            if (this.supportedPrograms.length == 0 || this.supportedPrograms.indexOf(program.uuid) != -1) {\n                this.programs.push(program)\n            }\n        });\n    }\n\n    getPatientPrograms(patientPrograms) {\n        this.patientPrograms = [];\n        angular.forEach(patientPrograms, (patientProgram) => {\n            // filter out any unsupported programs\n            if (this.supportedPrograms.length == 0 || this.supportedPrograms.indexOf(patientProgram.program.uuid) != -1) {\n                this.patientPrograms.push(patientProgram);\n            }\n        });\n    }\n\n    getMaxRecords() {\n        if (this.config.maxRecords == '' || angular.isUndefined(this.config.maxRecords)) {\n            return 20;\n        } else {\n            return this.config.maxRecords;\n        }\n    }\n\n    determineUnenrolledPrograms() {\n        let activeProgramsUuids = [];\n        angular.forEach(this.patientPrograms, (patientProgram) => {\n            if (!patientProgram.dateCompleted) {\n                activeProgramsUuids.push(patientProgram.program.uuid)\n            }\n        });\n\n        this.unenrolledPrograms = this.$filter('filter')(this.programs, (program) => {\n            return activeProgramsUuids.indexOf(program.uuid) == -1\n        });\n    }\n\n    addProgram() {\n        this.showAddProgram = true;\n    }\n\n    cancelAddProgram() {\n        this.showAddProgram = false;\n        this.input.program = \"\";\n    }\n\n   gotoProgramDashboard(programUuid) {\n\n        if (!programUuid) {\n            programUuid = this.input.program\n        }\n\n        if (programUuid && this.config.enableProgramDashboards) {\n            var destinationPage = \"\";\n            destinationPage = Handlebars.compile(this.dashboardPage)({\n                patientUuid: this.config.patientUuid,\n                dashboard: programUuid\n            });\n            this.openmrsRest.getServerUrl().then((url) => {\n                window.location.href = url + destinationPage;\n            });\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programs/programs.controller.js","// NOTE: work-in-progress, consider this not yet an \"official\" release of this widgets, future changes may not be bacwards-compatible and change functionality signficantly\n// TODO: document when we do an \"official\" release\n\nimport ProgramStatisticsController from './programstatistics.controller';\nimport template from './programstatistics.html';\n\nexport let ProgramStatisticsComponent = {\n    template,\n    controller: ProgramStatisticsController,\n    selector: 'programstatistics',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programstatistics/programstatistics.component.js","import angular from 'angular';\n\nexport default class ProgramStatisticsController {\n\n    constructor($filter, openmrsRest, openmrsTranslate) {\n        'ngInject';\n\n        Object.assign(this, {$filter, openmrsRest, openmrsTranslate});\n    }\n\n    $onInit() {\n        this.activate();\n        let ctrl = this;\n    }\n\n    activate() {\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n        this.getEverEnrolledInProgram();\n        this.getCurrentlyEnrolledInProgram();\n    }\n\n    getEverEnrolledInProgram() {\n        return this.openmrsRest.get('reportingrest/cohort', {\n            v: \"ref\",\n            uuid: 'reporting.library.cohortDefinition.builtIn.patientsWithEnrollment',\n            programs: [this.config.program]\n        }).then((response) => {\n            this.everEnrolled = (response && 'count' in response ? response.count : this.$filter('translate')('coreapps.dashboardwidgets.programstatistics.error'));\n        });\n    }\n\n    getCurrentlyEnrolledInProgram() {\n        return this.openmrsRest.get('reportingrest/cohort', {\n            v: \"ref\",\n            uuid: 'reporting.library.cohortDefinition.builtIn.patientsInProgram',\n            programs: [this.config.program],\n            onDate: new Date\n        }).then((response) => {\n            this.currentlyEnrolled = (response && 'count' in response  ? response.count : this.$filter('translate')('coreapps.dashboardwidgets.programstatistics.error'));\n    });\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programstatistics/programstatistics.controller.js","// NOTE: work-in-progress, consider this not yet an \"official\" release of this widgets, future changes may not be bacwards-compatible and change functionality signficantly\n// TODO: document when complete\n\n\nimport controller from './programstatus.controller';\nimport template from './programstatus.html';\n\nexport let ProgramStatusComponent = {\n    template,\n    controller,\n    selector: 'programstatus',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programstatus/programstatus.component.js","\nimport angular from 'angular';\nimport moment from 'moment';\n\nexport default class ProgramStatusController {\n\n    // TODO add support for special logic around \"initial\" and \"terminal?\"\n\n    constructor($filter, $window, $q, openmrsRest, openmrsTranslate) {\n        'ngInject';\n\n        Object.assign(this, {$filter, $window, $q, openmrsRest, openmrsTranslate});\n    }\n\n    $onInit() {\n        this.vPatientProgram = 'custom:uuid,program:(uuid),dateEnrolled,dateCompleted,outcome:(display),location:(display,uuid),dateCompleted,outcome,states:(uuid,startDate,endDate,voided,state:(uuid,concept:(display)))';\n\n        this.dateFormat = (this.config.dateFormat == '' || angular.isUndefined(this.config.dateFormat))\n            ? 'dd-MMM-yyyy' : this.config.dateFormat;\n        this.today = new Date();\n\n        this.loaded = false;\n        this.deleted = false;\n\n        this.program = null;\n        this.patientProgram = null;\n        this.patientPrograms = null;\n        this.programLocations = null;\n        this.programOutcomes = null;\n\n        // we calculate these two values based on the completion date of the previous program and the enrollment date of any subsequent program\n        // we populate these on initial load\n        this.minEnrollmentDate = null;\n        this.maxCompletionDate = null;\n\n        this.canEnrollInProgram = false;\n        this.canEditProgram = false;\n        this.canDeleteProgram = false;\n\n        this.statesByWorkflow = {};\n        this.statesByUuid = {};\n        this.sortedStatesByWorkflow = {};\n\n        // backs the various input fields\n        this.input = {\n            dateEnrolled: null,\n            enrollmentLocation: null,\n            dateCompleted: null,\n            outcome: null,\n            initialWorkflowStateByWorkflow: {},\n            changeToStateByWorkflow: {}\n        }\n\n        this.resetWindowStates();\n\n        this.activate();\n\n        let ctrl = this;\n\n    }\n\n    activate() {\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n\n        this.fetchPrivileges();\n\n        this.fetchLocations().then((response) => {\n            this.fetchProgram().then((response) => {\n                this.fetchOutcomes();\n                this.fetchPatientProgram()\n            });\n        });\n    }\n\n    fetchPrivileges() {\n        this.openmrsRest.get('session', {\n            v: 'custom:(privileges)'\n        }).then((response) => {\n            if (response && response.user && angular.isArray(response.user.privileges)) {\n                if (response.user.privileges.some( (p) => { return p.name === 'Task: coreapps.enrollInProgram'; })) {\n                    this.canEnrollInProgram = true;\n                };\n                if (response.user.privileges.some( (p) => { return p.name === 'Task: coreapps.editPatientProgram'; })) {\n                    this.canEditProgram = true;\n                };\n                if (response.user.privileges.some( (p) => { return p.name === 'Task: coreapps.deletePatientProgram'; })) {\n                    this.canDeleteProgram = true;\n                };\n            }\n        });\n    }\n\n    setInputsToStartingValues() {\n        this.input.dateEnrolled = this.patientProgram ? new Date(this.patientProgram.dateEnrolled) : null;\n        this.input.dateCompleted = this.patientProgram && this.patientProgram.dateCompleted ? new Date(this.patientProgram.dateCompleted) : null;\n        this.input.outcome = this.patientProgram && this.patientProgram.outcome ? this.patientProgram.outcome.uuid : null;\n\n        if (this.patientProgram && this.patientProgram.location) {\n            this.input.enrollmentLocation = this.patientProgram.location.uuid;\n        }\n        // if there is only possible location, set it as the default (this is why loading locations (in activate) needs to happen before patient programs)\n        else if (this.programLocations && this.programLocations.length == 1) {\n            this.input.enrollmentLocation = this.programLocations[0].uuid;\n        }\n\n        this.input.initialWorkflowStateByWorkflow = {};\n        this.input.changeToStateByWorkflow = {};\n    }\n\n    convertDateEnrolledAndDateCompletedStringsToDates() {\n        if (this.patientProgram) {\n            this.patientProgram.dateEnrolled = this.patientProgram ? new Date(this.patientProgram.dateEnrolled) : null;\n            this.patientProgram.dateCompleted = this.patientProgram && this.patientProgram.dateCompleted ? new Date(this.patientProgram.dateCompleted) : null;\n        }\n    }\n\n    toggleEditEnrollment() {\n        let currentStatus = this.edit.enrollment;\n        this.cancelAllEditModes();\n        this.setInputsToStartingValues();\n\n        this.edit.enrollment = !currentStatus;\n    }\n\n    toggleEditWorkflow(workflowUuid) {\n        let currentStatus = this.edit.workflow[workflowUuid];\n        this.cancelAllEditModes();\n        this.setInputsToStartingValues();\n\n        // the first time we hit this, we need to initialize the workflow\n        if (!workflowUuid in this.edit.workflow) {\n            this.edit.workflow[workflowUuid] = true\n        }\n        else {\n            this.edit.workflow[workflowUuid] = !currentStatus;\n        }\n    }\n\n    toggleExpandedWorkflow(workflowUuid) {\n        // the first time we hit this, we need to initialize the workflow\n        if (!workflowUuid in this.expanded.workflow) {\n            this.expanded.workflow[workflowUuid] = true;\n        }\n        else {\n            this.expanded.workflow[workflowUuid] = !this.expanded.workflow[workflowUuid];\n        }\n    }\n\n    fetchProgram() {\n        return this.openmrsRest.get('program', {\n            uuid: this.config.program,\n            v: 'custom:display,uuid,outcomesConcept:(uuid),workflows:(uuid,concept:(display),states:(uuid,initial,terminal,concept:(display))'\n        }).then((response) => {\n            // TODO handle error cases, program doesn't exist\n            this.program = response;\n\n            angular.forEach(this.program.workflows, (workflow) => {\n                this.statesByWorkflow[workflow.uuid] = workflow.states;\n                angular.forEach(workflow.states, (state) => {\n                    this.statesByUuid[state.uuid] = state;\n                });\n            });\n        });\n    }\n\n    fetchPatientProgram() {\n\n        this.loaded = false;\n        this.patientProgram = null;\n        this.resetWindowStates();\n\n        return this.openmrsRest.get('programenrollment', {\n            patient: this.config.patientUuid,\n            v: this.vPatientProgram\n        }).then((response) => {\n            this.patientPrograms = response.results;\n            this.getPatientProgramFromPatientProgramList();\n            this.groupAndSortPatientStates();\n            this.setInputsToStartingValues();\n            this.convertDateEnrolledAndDateCompletedStringsToDates();\n            this.loaded = true;\n        });\n    }\n\n    fetchLocations() {\n        return this.openmrsRest.get('location', {\n            v: 'custom:display,uuid',\n            tag: this.config.locationTag,\n        }).then((response) => {\n            this.programLocations = response.results;\n        })\n    }\n\n\n    fetchOutcomes() {\n        if (this.program.outcomesConcept) {\n            return this.openmrsRest.get('concept', {\n                v: 'custom:answers:(display,uuid)',\n                uuid: this.program.outcomesConcept.uuid,\n            }).then((response) => {\n                this.programOutcomes = response.answers;\n            })\n        }\n    }\n\n    // get the patient program that this widget will be displaying/manipulating\n    getPatientProgramFromPatientProgramList() {\n\n        // first, filter to only patient programs of the specified type\n        this.patientPrograms = this.$filter('filter') (this.patientPrograms, (patientProgram) => {\n            return (patientProgram.program.uuid == this.config.program);\n        });\n\n\n        if (this.patientPrograms.length > 0) {\n\n            // sort programs in order\n            this.patientPrograms = this.$filter('orderBy')(this.patientPrograms, (patientProgram) => {\n                return -this.patientPrograms.startDate;\n            });\n\n            // find the matching program, and set the min/max for enroll/complete based on the surrounding programs\n            if (!this.displayActiveProgram()) {\n\n                angular.forEach(this.patientPrograms, (patientProgram, i) => {\n                    if (patientProgram.uuid == this.config.patientProgram) {\n                        this.patientProgram = patientProgram;\n                        if (i > 0) {\n                            this.maxCompletionDate = this.getPreviousDay(new Date(this.patientPrograms[i-1].dateEnrolled));\n                        }\n                        if (i + 1 < this.patientPrograms.length) {\n                            this.minEnrollmentDate = this.getNextDay(new Date(this.patientPrograms[i+1].dateCompleted));\n                        }\n                    }\n                })\n\n                // TODO error case: no match found\n            }\n            // this widget is meant to show the active program, or if no active program, will render a widget for enrolling in the program\n            else {\n                // there's an active program\n                if (!this.patientPrograms[0].dateCompleted) {\n                    this.patientProgram = this.patientPrograms[0];\n                    if (this.patientPrograms.length > 1) {\n                        // enrollment date cannot be shifted to before completion date of previous program\n                        this.minEnrollmentDate = this.getNextDay(new Date(this.patientPrograms[1].dateCompleted))\n\n                    }\n                }\n                // no active program\n                else {\n                    // enrollment date for a new program can't be set before the completion date of any previous program\n\n                    this.minEnrollmentDate = this.getNextDay(new Date(this.patientPrograms[0].dateCompleted))\n                }\n\n            }\n\n        }\n    }\n\n    enrollInProgram() {\n        if (this.input.dateEnrolled && this.input.enrollmentLocation) {\n\n            var states = [];\n            angular.forEach(this.input.initialWorkflowStateByWorkflow, (state) => {\n                state.startDate = this.input.dateEnrolled;\n                states.push(state);\n            });\n\n            this.openmrsRest.create('programenrollment', {\n                patient: this.config.patientUuid,\n                program: this.config.program,\n                dateEnrolled: this.input.dateEnrolled,\n                location: this.input.enrollmentLocation,\n                states: states\n            }).then((response) => {\n                if (this.config.disableReloadPage) {\n                    this.fetchPatientProgram(this.patientProgram.uuid); // refresh display\n                }\n                else {\n                    this.reloadPage();  // closing a program affects other widgets, so we need to reload the entire page\n                }\n            });\n\n        }\n    }\n\n    updatePatientProgram() {\n\n        // we need to reload the entire page if date of enrollment or completion has changed, because may affect other program widget on the same page\n        // (reloading can be disabled by using the \"disable reload page\" config parameter\n        var needToReloadPage =\n            !this.config.disableReloadPage &&\n            (this.input.dateEnrolled.getTime() != this.patientProgram.dateEnrolled.getTime()) ||\n            (this.input.dateCompleted && !this.patientProgram.dateCompleted) ||\n            (!this.input.dateCompleted && this.patientProgram.dateCompleted) ||\n            (this.input.dateCompleted && this.patientProgram.dateCompleted && this.input.dateCompleted.getTime() != this.patientProgram.dateCompleted.getTime());\n\n        // (disabling this... keeping most recent state with no end date for consistency with current workflow)\n        // we need to make sure that the most recent state for each workflow has an end date = completion date\n        // (this should really be handled by the api?)\n      /*  let states = [];\n        angular.forEach(this.sortedStatesByWorkflow, (workflow) => {\n            if (workflow.length > 0) {\n                states.push({\n                    uuid: workflow[0].uuid,\n                    endDate: this.input.dateCompleted\n                })\n            }\n        })*/\n\n        this.openmrsRest.update('programenrollment/' + this.patientProgram.uuid, {\n            dateEnrolled: this.input.dateEnrolled,\n            dateCompleted: this.input.dateCompleted,\n            location: this.input.enrollmentLocation,\n            outcome: this.input.outcome//,\n            //states: states\n        }).then((response) => {\n            if (!needToReloadPage) {\n                this.fetchPatientProgram(this.patientProgram.uuid); // refresh display\n            }\n            else {\n                this.reloadPage();  // closing a program affects other widgets, so we need to reload the entire page\n            }\n        });\n    }\n\n    deletePatientProgram() {\n        if (!this.confirmDelete.enrollment) {\n            this.confirmDelete.enrollment= true;\n        }\n        else {\n            this.confirmDelete.enrollment = false;\n            this.openmrsRest.remove('programenrollment/', {\n                uuid: this.patientProgram.uuid\n            }).then((response) => {\n                this.patientProgram = null;\n\n                // if this widget was set to display the \"active program\" (ie, no patient program uuid passed in)\n                // then reload, otherwise render a \"patient program deleted\" message and reload entire page\n\n                if (this.displayActiveProgram()) {\n                    this.fetchPatientProgram(); // refresh display\n                }\n                else {\n                    this.deleted = true;\n                    if (!this.config.disableReloadPage) {\n                        this.reloadPage();\n                    }\n                }\n            })\n        }\n    }\n\n    deleteMostRecentPatientState(workflowUuid) {\n        if (!this.confirmDelete.workflow[workflowUuid]) {\n            this.confirmDelete.workflow[workflowUuid] = true;\n        }\n        else {\n            this.confirmDelete.workflow[workflowUuid] = false;\n            if (workflowUuid in this.sortedStatesByWorkflow && this.sortedStatesByWorkflow[workflowUuid].length > 0) {\n                this.voidPatientState(this.sortedStatesByWorkflow[workflowUuid][0].uuid);\n            }\n        }\n    }\n\n    createPatientState(state) {\n        this.openmrsRest.update('programenrollment/' + this.patientProgram.uuid, {\n            states: [\n                {\n                    state: state.state,\n                    startDate: state.date    // TODO is it okay that we set this date on the client-side? need to sync with\n                }\n            ]\n        }).then((response) => {\n            // TODO: handle error cases\n            if (this.statesByUuid[state.state].terminal) {\n                this.reloadPage()\n            }\n            else {\n                this.fetchPatientProgram(this.patientProgram.uuid); // refresh display\n            }\n        })\n    }\n\n    getWorkflowForState(state) {\n        let result;\n        angular.forEach(this.program.workflows, (workflow) => {\n            angular.forEach(workflow.states, (workflowState) => {\n                if (state.uuid == workflowState.uuid) {\n                    result = workflow;\n                }\n            })\n        })\n        return result;\n    }\n\n    voidPatientState(patientStateUuid) {\n\n        return this.openmrsRest.remove('programenrollment/' + this.patientProgram.uuid + \"/state/\" + patientStateUuid, {\n                voided: \"true\",\n                voidReason: \"voided via UI\"\n            })\n            .then((response) => {\n                // TODO: handle error cases\n                this.fetchPatientProgram(this.patientProgram.uuid); // refresh display\n            });\n\n    }\n\n    updatePatientState(workflowUuid, stateUuid) {\n        this.edit.workflow[workflowUuid] = false;\n        this.createPatientState(this.input.changeToStateByWorkflow[workflowUuid])\n    }\n\n    isNotCurrentState(workflow) {\n        return (state) => {\n            var currentState = (workflow.uuid in this.sortedStatesByWorkflow) ? this.sortedStatesByWorkflow[workflow.uuid][0] : null;\n            return !currentState || currentState.state.uuid != state.uuid;\n        }\n\n    }\n\n    isInitialState() {\n        return (state) => { return state.initial };\n    }\n\n    groupAndSortPatientStates() {\n\n        this.sortedStatesByWorkflow = {};\n\n        if (this.patientProgram && this.patientProgram.states) {\n            // TODO remove this first filter once the bug with the REST request returning voided elements is fixed\n            this.patientProgram.states = this.$filter('filter')(this.patientProgram.states, (state) => {\n                return !state.voided\n            }, true);\n            this.patientProgram.states = this.$filter('orderBy')(this.patientProgram.states, (state) => {\n                return state.startDate\n            });\n\n            angular.forEach(this.patientProgram.states, (patientState) => {\n                let workflow = this.getWorkflowForState(patientState.state);\n\n                if (!(workflow.uuid in this.sortedStatesByWorkflow)) {\n                    this.sortedStatesByWorkflow[workflow.uuid] = [];\n                }\n\n                var newEntry = {\n                    startDate:  new Date(patientState.startDate),\n                    dayAfterStartDate: this.getNextDay(patientState.startDate),\n                    endDate: patientState.endDate ? new Date(patientState.endDate) : null,\n                    state: patientState.state,\n                    uuid: patientState.uuid\n                }\n\n                this.sortedStatesByWorkflow[workflow.uuid].unshift(newEntry);  // add to front\n            })\n        }\n    }\n\n    getMostRecentStateChangeDate() {\n        let mostRecentStateChangeDate = null\n\n        angular.forEach(this.sortedStatesByWorkflow, (workflow) => {\n            if (workflow.length > 0) {\n                if (!mostRecentStateChangeDate || workflow[0].startDate > mostRecentStateChangeDate){\n                    mostRecentStateChangeDate = workflow[0].startDate\n                }\n            }\n        })\n\n        return mostRecentStateChangeDate;\n    }\n\n    update() {\n        this.cancelAllEditModes();\n        this.updatePatientProgram();\n    }\n\n    cancelAllEditModes() {\n        this.edit.enrollment = false;\n        for (let uuid in this.edit.workflow) {\n            this.edit.workflow[uuid] = false\n        }\n    }\n\n    cancelEdit() {\n        this.cancelAllEditModes();\n        this.setInputsToStartingValues();\n    }\n\n    cancelEnrollment() {\n        this.expanded.enrollment = false;\n        this.setInputsToStartingValues();\n    }\n\n    cancelDelete() {\n        this.confirmDelete = {\n            enrollment: false,\n            workflow:{}\n        }\n    }\n\n    inConfirmDelete() {\n        if (this.confirmDelete.enrollment === true) {\n            return true;\n        }\n        var result = false;\n        angular.forEach(this.confirmDelete.workflow, function (value, key) {\n            if (value === true) {\n                result = true;\n            }\n        })\n        return result;\n    }\n\n    inEditMode() {\n        if (this.edit.enrollment === true) {\n            return true;\n        }\n        var result = false;\n        angular.forEach(this.edit.workflow, function (value, key) {\n            if (value === true) {\n                result = true;\n            }\n        })\n        return result;\n    }\n\n    getNextDay(date) {\n        return moment(date).add(1, 'days').toDate();\n    }\n\n    getPreviousDay(date) {\n        return moment(date).add(-1, 'days').toDate();\n    }\n\n    isToday(date) {\n        if (!date) {\n            return false;\n        }\n        else {\n           return moment(date).isSame(moment(), 'day');\n        }\n    }\n\n    isMostRecentProgram() {\n        return !this.patientPrograms || this.patientPrograms.length == 0 || !this.patientProgram || this.patientPrograms[0].uuid === this.patientProgram.uuid;\n    }\n\n    // if no program uuid is passed in, this widget will display the active program, or an \"enroll in program\" option if no active program\n    displayActiveProgram() {\n        return this.config.patientProgram ? false : true;\n    }\n\n    programIsCompleted() {\n        return (this.patientProgram && this.patientProgram.dateCompleted ? true : false);\n    }\n\n    enrollmentValid() {\n        return this.input.enrollmentLocation && this.input.dateEnrolled &&  // must have enrollmentLocation and date enrolled\n            (!this.input.dateCompleted || this.input.dateCompleted >= this.input.dateEnrolled) &&  // date completed must be after date enrolled\n            ((!this.input.dateCompleted && !this.input.outcome) || (this.input.dateCompleted && this.input.outcome)) &&  // if there's a completion date, must specific an outcome (and vice versa)\n            (this.isMostRecentProgram() || this.input.dateCompleted);  // must be the most recent program or have a date completed\n    }\n\n    workflowTransitionValid(workflowUuid) {\n        return this.input.changeToStateByWorkflow[workflowUuid] && this.input.changeToStateByWorkflow[workflowUuid].date && this.input.changeToStateByWorkflow[workflowUuid].state;\n    }\n\n    resetWindowStates() {\n        // controls the state (open/closed) of the elements to edit enrollment & state information\n        this.edit = {\n            enrollment: false,\n            workflow: {}\n        }\n\n        // controls the state (opened/closed) of the expanded view of enrollment & workflows\n        this.expanded = {\n            enrollment: false,\n            workflow: {}\n        }\n\n        // controls whether the \"confirm delete\" message is displayed\n        this.confirmDelete = {\n            enrollment: false,\n            workflow: {}\n        };\n    }\n\n    reloadPage() {\n        this.$window.location.reload();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/programstatus/programstatus.controller.js","import RelationshipsController from './relationships.controller';\nimport template from './relationships.html';\n\nexport let RelationshipsComponent = {\n    template,\n    controller: RelationshipsController,\n    selector: 'relationships',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/relationships/relationships.component.js","import angular from 'angular';\n\nexport default class RelationshipsController  {\n    constructor($q, openmrsRest, openmrsTranslate) {\n        'ngInject';\n\n        Object.assign(this, { $q, openmrsRest, openmrsTranslate });\n    }\n\n    $onInit() {\n        this.minSearchLength = 2;\n        // the default patient page is the clinician dashboard\n        this.dashboardPage = \"/coreapps/clinicianfacing/patient.page?patientId={{patientUuid}}\";\n        this.providerPage = null;\n\n        this.relationships = [];\n        this.types = [];\n        this.allowedTypes = [];\n        this.relationshipType = [];\n        this.hasEditPrivileges = false;\n        this.edit = false;\n        this.removeFlag = false;\n        this.showFindOtherPerson = false;\n        this.showSaveButton = false;\n        this.searchPerson = null;\n        this.otherPerson = null;\n        this.relatedPersons = [];\n\n        this.activate();\n\n        let ctrl = this;\n    }\n\n    activate() {\n        if (this.config.baseAppPath) {\n            this.openmrsRest.setBaseAppPath(this.config.baseAppPath);\n        } else {\n            this.openmrsRest.setBaseAppPath(\"/coreapps\");\n        }\n\n        if( this.config.dashboardPage ) {\n            this.dashboardPage = this.config.dashboardPage;\n        }\n\n        if( this.config.providerPage ) {\n            this.providerPage = this.config.providerPage;\n        }\n\n        if (this.config.includeRelationshipTypes) {\n            this.allowedTypes = this.config.includeRelationshipTypes.split(',');\n        }\n\n        //fetchPrivileges\n        this.openmrsRest.get('session', {\n            v: 'custom:(privileges)'\n        }).then((response) => {\n            this.getPrivileges(response.user.privileges);\n        });\n\n        //fetchRelationships\n        this.openmrsRest.get('relationship', {\n            person: this.config.patientUuid,\n            limit: this.getMaxRecords(),\n            v: 'custom:(uuid,personA:(uuid,display,personName,birthdate,isPatient,personId),personB:(uuid,display,personName,birthdate,isPatient,personId),relationshipType)'\n        }).then((response) => {\n            this.getRelationships(response.results);\n            if (this.providerPage) {\n                // if a provider page has been configured then check if there are any providers listed as relationships\n                this.checkForProviders();\n            }\n        });\n\n        //fetchRelationshipTypes\n        this.openmrsRest.get('relationshiptype', {\n            v: 'default'\n        }).then((response) => {\n            this.getRelationshipTypes(response.results);\n        });\n    }\n\n    getRelationships(relationships) {\n        angular.forEach(relationships, (relationship) => {\n            var rel = {};\n            rel.uuid = relationship.uuid;\n            rel.isProvider = false;\n            if(relationship.personA.uuid !== this.config.patientUuid){\n                rel.toPerson = relationship.personA;\n                rel.isPatient = relationship.personA.isPatient;\n                rel.type = angular.isDefined(relationship.relationshipType.displayAIsToB) ? relationship.relationshipType.displayAIsToB : relationship.relationshipType.aIsToB;\n            } else {\n                rel.toPerson = relationship.personB;\n                rel.isPatient = relationship.personB.isPatient;\n                rel.type = angular.isDefined(relationship.relationshipType.displayBIsToA) ? relationship.relationshipType.displayBIsToA : relationship.relationshipType.bIsToA;\n\n            }\n            this.relationships.push(rel);\n        });\n    }\n\n    relationshipsContain(personUuid) {\n        var result = false;\n        angular.forEach(this.relationships, (relationship) => {\n            if (relationship.toPerson.uuid == personUuid) {\n                result = true;\n            }\n        });\n        return result;\n    }\n\n    getPrivileges(privileges) {\n        var editPrivilege = this.config.editPrivilege;\n        if( angular.isDefined(editPrivilege) ) {\n            if (angular.isArray(privileges)) {\n                if (privileges.some(function(privilege) { return privilege.name === editPrivilege; })) {\n                    this.hasEditPrivileges = true;\n                };\n            }\n        }\n    }\n\n    updateProviderInfo(provider) {\n        if (provider) {\n            angular.forEach(this.relationships, (relationship) => {\n                if (relationship.toPerson.uuid === provider.person.uuid) {\n                    relationship.isProvider = true;\n                }\n            });\n        }\n    }\n\n    isProvider(personUuid, personName) {\n        return this.openmrsRest.get('provider', {\n            q: personName,\n            v: 'custom:(uuid,identifier,display,person:(uuid,personId,display,gender,age,birthdate,birthdateEstimated))'\n        }).then(function (resp) {\n            return resp.results;\n        });\n    }\n\n    checkForProviders() {\n        angular.forEach(this.relationships, (relationship) => {\n            this.isProvider(relationship.toPerson.uuid, relationship.toPerson.display).then( (response) => {\n                angular.forEach(response, (provider) => {\n                    this.updateProviderInfo(provider);\n                });\n            });\n        });\n\n    }\n\n    getPersons(searchString) {\n        this.openmrsRest.get('patient', {\n            q: searchString,\n            v: 'custom:(uuid,display,gender,age)'\n        }).then((response) => {\n            this.relatedPersons = [];\n            this.filterSearchedPersons(response.results);\n        });\n    }\n\n    filterSearchedPersons(searchedPersons) {\n        if (angular.isArray(searchedPersons) && searchedPersons.length > 0) {\n            angular.forEach(searchedPersons, (person) => {\n                if( !this.relationshipsContain( person.uuid ) ) {\n                    // when searching for persons to create new relationships exclude the persons that already have a relationship with this person\n                    this.relatedPersons.push(person);\n                }\n            });\n        }\n    }\n\n    getRelationshipTypes(types) {\n        angular.forEach(types, (type) => {\n            if ((this.allowedTypes.length < 1) ||\n                ((this.allowedTypes.length > 0) && (this.allowedTypes.indexOf(type.uuid) !== -1))) {\n                // if a relationship type filter was not specified then we display all types,\n                // OR if a filter was defined then we only display the types included in the filter\n                if (this.findRelTypeByName(angular.isDefined(type.displayAIsToB) ? type.displayAIsToB : type.aIsToB) == null) {\n                    var relTypeA = {};\n                    relTypeA.uuid = type.uuid;\n                    relTypeA.name = (angular.isDefined(type.displayAIsToB) ? type.displayAIsToB : type.aIsToB);\n                    relTypeA.type = \"B\";\n                    this.types.push(relTypeA);\n                }\n                if (this.findRelTypeByName(angular.isDefined(type.displayBIsToA) ? type.displayBIsToA : type.bIsToA)== null) {\n                    var relTypeB = {};\n                    relTypeB.uuid = type.uuid;\n                    relTypeB.name = (angular.isDefined(type.displayBIsToA) ? type.displayBIsToA : type.bIsToA);\n                    relTypeB.type = \"A\";\n                    this.types.push(relTypeB);\n                }\n            }\n        });\n    }\n\n    updateRelationshipType() {\n        if (angular.isDefined(this.relationshipType)) {\n            this.showFindOtherPerson = true;\n        }\n    }\n\n    findRelTypeByName(value) {\n        var item = null;\n        if (angular.isDefined(this.types) && this.types.length > 0) {\n            angular.forEach(this.types, (type) => {\n                if (type.name == value) {\n                    item = type;\n                }\n            });\n        }\n        return item;\n    }\n\n    getMaxRecords() {\n        if(this.config.maxRecords == '' || angular.isUndefined(this.config.maxRecords)){\n            return 6;\n        } else {\n            return this.config.maxRecords;\n        }\n    }\n    \n    navigateTo(personUuid) {\n        var destinationPage =\"\";\n\n        angular.forEach(this.relationships, (relationship) => {\n            if (relationship.toPerson.uuid === personUuid ) {\n                if ( relationship.isPatient === true ) {\n                    if (this.dashboardPage) {\n                        destinationPage = Handlebars.compile(this.dashboardPage)({\n                            patientUuid: personUuid\n                        });\n                    }\n                } else if ( relationship.isProvider === true ) {\n                    if (this.providerPage) {\n                        destinationPage = Handlebars.compile(this.providerPage)({\n                            personUuid: personUuid\n                        });\n                    }\n                }\n            }\n        });\n\n\n        this.openmrsRest.getServerUrl().then((url) => {\n            window.location.href = url + destinationPage;\n        });\n\n    }\n\n    addRelationship() {\n        this.edit = true;\n    }\n\n    save() {\n        if (angular.isDefined(this.relationshipType) &&\n            angular.isDefined(this.otherPerson)) {\n\n            var personA = null;\n            var personB = null;\n            if (this.relationshipType.type == \"A\") {\n                personA = this.config.patientUuid;\n                personB = this.otherPerson.uuid;\n            } else if (this.relationshipType.type == \"B\") {\n                personA = this.otherPerson.uuid;\n                personB = this.config.patientUuid;\n            }\n\n            this.openmrsRest.create('relationship', {\n                relationshipType: this.relationshipType.uuid,\n                personA: personA,\n                personB: personB\n            }).then((response) => {\n                this.$onInit();\n            });\n        }\n    }\n\n    removeRelationship(relUuid) {\n        if (angular.isDefined(relUuid)) {\n\n            this.removeFlag = true;\n            var tempRelationships = [];\n            angular.forEach(this.relationships, (relationship) => {\n                if (relationship.uuid == relUuid) {\n                    tempRelationships.push(relationship);\n                }\n            });\n            this.relationships = [];\n            this.relationships = tempRelationships;\n        }\n    }\n    \n    remove() {\n        if (angular.isDefined(this.relationships) && (this.relationships.length == 1) ){\n            //we only allow to delete one relationship at the time\n            this.openmrsRest.remove('relationship', {\n                 uuid: this.relationships[0].uuid\n             }).then((response) => {\n                 this.$onInit();\n            });\n        }\n    }\n\n    goTo(personUuid) {\n        this.navigateTo(personUuid);\n    }\n\n    searchPersons() {\n        if (angular.isDefined(this.searchPerson) &&\n            (this.searchPerson.length > this.minSearchLength) ) {\n            this.getPersons(this.searchPerson);\n        }\n    }\n\n    onSelect($item, $model, $label) {\n        if (angular.isDefined($item) && angular.isDefined(this.relationshipType)) {\n            this.otherPerson = $item;\n            this.showSaveButton = true;\n        }\n    }\n\n    cancel() {\n        this.edit = false;\n        this.$onInit();\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/relationships/relationships.controller.js","import VisitByEncounterTypeController from './visitbyencountertype.controller';\nimport template from './visitbyencountertype.html';\n\nexport let VisitByEncounterTypeComponent = {\n    template,\n    controller: VisitByEncounterTypeController,\n    selector: 'visitbyencountertype',\n    bindings: {\n        config: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/visitbyencountertype/visitbyencountertype.component.js","export default class VisitByEncounterTypeController {\n    constructor(openmrsRest, widgetsCommons) {\n        'ngInject';\n\n        Object.assign(this, {openmrsRest, widgetsCommons});\n    }\n\n    $onInit() {\n        this.visits = [];\n        this.serverUrl = \"\";\n\n        this.openmrsRest.setBaseAppPath(\"/coreapps\");\n        this.openmrsRest.getServerUrl().then((result) => {\n            this.serverUrl = result;\n        });\n\n        //fetchVisits\n        this.openmrsRest.get('visit', {\n            patient: this.config.patientUuid,\n            limit: this.getMaxRecords(),\n            fromStartDate: this.widgetsCommons.maxAgeToDate(this.config.maxAge),\n            v: 'custom:(uuid,startDatetime,stopDatetime,encounters:(uuid,encounterType:(uuid,display)))'\n        }).then((response) => {\n            this.getVisits(response.results);\n        })\n    }\n\n    getVisits(visits) {\n        angular.forEach(visits, (visit) => {\n            let encounterTypes = [];\n            if(this.getCombineEncounterTypes()){\n                let vis = {startDatetime: visit.startDatetime, encounterType: '', uuid: visit.uuid};\n                angular.forEach(visit.encounters, (encounter) => {\n                    if (encounterTypes.indexOf(encounter.encounterType.display) == -1) {\n                        if (vis.encounterType === '') {\n                            vis.encounterType = encounter.encounterType.display;\n                        } else {\n                            vis.encounterType += ', ' + encounter.encounterType.display;\n                        }\n                        encounterTypes.push(encounter.encounterType.display);\n                    }\n                });\n                this.visits.push(vis);\n            } else {\n                angular.forEach(visit.encounters, (encounter) => {\n                    if (encounterTypes.indexOf(encounter.encounterType.display) == -1) {\n                        let vis = {startDatetime: visit.startDatetime};\n                        vis.encounterType = encounter.encounterType.display;\n                        encounterTypes.push(encounter.encounterType.display);\n                        this.visits.push(vis);\n                    }\n                })\n            }\n        })\n    }\n\n    getCombineEncounterTypes() {\n        if(this.config.combineEncounterTypes === 'false'){\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    getMaxRecords() {\n        if(this.config.maxRecords == '' || angular.isUndefined(this.config.maxRecords)){\n            return 6;\n        } else {\n            return this.config.maxRecords;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/visitbyencountertype/visitbyencountertype.controller.js","var map = {\n\t\"./af\": 10,\n\t\"./af.js\": 10,\n\t\"./ar\": 17,\n\t\"./ar-dz\": 11,\n\t\"./ar-dz.js\": 11,\n\t\"./ar-kw\": 12,\n\t\"./ar-kw.js\": 12,\n\t\"./ar-ly\": 13,\n\t\"./ar-ly.js\": 13,\n\t\"./ar-ma\": 14,\n\t\"./ar-ma.js\": 14,\n\t\"./ar-sa\": 15,\n\t\"./ar-sa.js\": 15,\n\t\"./ar-tn\": 16,\n\t\"./ar-tn.js\": 16,\n\t\"./ar.js\": 17,\n\t\"./az\": 18,\n\t\"./az.js\": 18,\n\t\"./be\": 19,\n\t\"./be.js\": 19,\n\t\"./bg\": 20,\n\t\"./bg.js\": 20,\n\t\"./bn\": 21,\n\t\"./bn.js\": 21,\n\t\"./bo\": 22,\n\t\"./bo.js\": 22,\n\t\"./br\": 23,\n\t\"./br.js\": 23,\n\t\"./bs\": 24,\n\t\"./bs.js\": 24,\n\t\"./ca\": 25,\n\t\"./ca.js\": 25,\n\t\"./cs\": 26,\n\t\"./cs.js\": 26,\n\t\"./cv\": 27,\n\t\"./cv.js\": 27,\n\t\"./cy\": 28,\n\t\"./cy.js\": 28,\n\t\"./da\": 29,\n\t\"./da.js\": 29,\n\t\"./de\": 32,\n\t\"./de-at\": 30,\n\t\"./de-at.js\": 30,\n\t\"./de-ch\": 31,\n\t\"./de-ch.js\": 31,\n\t\"./de.js\": 32,\n\t\"./dv\": 33,\n\t\"./dv.js\": 33,\n\t\"./el\": 34,\n\t\"./el.js\": 34,\n\t\"./en-au\": 35,\n\t\"./en-au.js\": 35,\n\t\"./en-ca\": 36,\n\t\"./en-ca.js\": 36,\n\t\"./en-gb\": 37,\n\t\"./en-gb.js\": 37,\n\t\"./en-ie\": 38,\n\t\"./en-ie.js\": 38,\n\t\"./en-nz\": 39,\n\t\"./en-nz.js\": 39,\n\t\"./eo\": 40,\n\t\"./eo.js\": 40,\n\t\"./es\": 42,\n\t\"./es-do\": 41,\n\t\"./es-do.js\": 41,\n\t\"./es.js\": 42,\n\t\"./et\": 43,\n\t\"./et.js\": 43,\n\t\"./eu\": 44,\n\t\"./eu.js\": 44,\n\t\"./fa\": 45,\n\t\"./fa.js\": 45,\n\t\"./fi\": 46,\n\t\"./fi.js\": 46,\n\t\"./fo\": 47,\n\t\"./fo.js\": 47,\n\t\"./fr\": 50,\n\t\"./fr-ca\": 48,\n\t\"./fr-ca.js\": 48,\n\t\"./fr-ch\": 49,\n\t\"./fr-ch.js\": 49,\n\t\"./fr.js\": 50,\n\t\"./fy\": 51,\n\t\"./fy.js\": 51,\n\t\"./gd\": 52,\n\t\"./gd.js\": 52,\n\t\"./gl\": 53,\n\t\"./gl.js\": 53,\n\t\"./gom-latn\": 54,\n\t\"./gom-latn.js\": 54,\n\t\"./he\": 55,\n\t\"./he.js\": 55,\n\t\"./hi\": 56,\n\t\"./hi.js\": 56,\n\t\"./hr\": 57,\n\t\"./hr.js\": 57,\n\t\"./hu\": 58,\n\t\"./hu.js\": 58,\n\t\"./hy-am\": 59,\n\t\"./hy-am.js\": 59,\n\t\"./id\": 60,\n\t\"./id.js\": 60,\n\t\"./is\": 61,\n\t\"./is.js\": 61,\n\t\"./it\": 62,\n\t\"./it.js\": 62,\n\t\"./ja\": 63,\n\t\"./ja.js\": 63,\n\t\"./jv\": 64,\n\t\"./jv.js\": 64,\n\t\"./ka\": 65,\n\t\"./ka.js\": 65,\n\t\"./kk\": 66,\n\t\"./kk.js\": 66,\n\t\"./km\": 67,\n\t\"./km.js\": 67,\n\t\"./kn\": 68,\n\t\"./kn.js\": 68,\n\t\"./ko\": 69,\n\t\"./ko.js\": 69,\n\t\"./ky\": 70,\n\t\"./ky.js\": 70,\n\t\"./lb\": 71,\n\t\"./lb.js\": 71,\n\t\"./lo\": 72,\n\t\"./lo.js\": 72,\n\t\"./lt\": 73,\n\t\"./lt.js\": 73,\n\t\"./lv\": 74,\n\t\"./lv.js\": 74,\n\t\"./me\": 75,\n\t\"./me.js\": 75,\n\t\"./mi\": 76,\n\t\"./mi.js\": 76,\n\t\"./mk\": 77,\n\t\"./mk.js\": 77,\n\t\"./ml\": 78,\n\t\"./ml.js\": 78,\n\t\"./mr\": 79,\n\t\"./mr.js\": 79,\n\t\"./ms\": 81,\n\t\"./ms-my\": 80,\n\t\"./ms-my.js\": 80,\n\t\"./ms.js\": 81,\n\t\"./my\": 82,\n\t\"./my.js\": 82,\n\t\"./nb\": 83,\n\t\"./nb.js\": 83,\n\t\"./ne\": 84,\n\t\"./ne.js\": 84,\n\t\"./nl\": 86,\n\t\"./nl-be\": 85,\n\t\"./nl-be.js\": 85,\n\t\"./nl.js\": 86,\n\t\"./nn\": 87,\n\t\"./nn.js\": 87,\n\t\"./pa-in\": 88,\n\t\"./pa-in.js\": 88,\n\t\"./pl\": 89,\n\t\"./pl.js\": 89,\n\t\"./pt\": 91,\n\t\"./pt-br\": 90,\n\t\"./pt-br.js\": 90,\n\t\"./pt.js\": 91,\n\t\"./ro\": 92,\n\t\"./ro.js\": 92,\n\t\"./ru\": 93,\n\t\"./ru.js\": 93,\n\t\"./sd\": 94,\n\t\"./sd.js\": 94,\n\t\"./se\": 95,\n\t\"./se.js\": 95,\n\t\"./si\": 96,\n\t\"./si.js\": 96,\n\t\"./sk\": 97,\n\t\"./sk.js\": 97,\n\t\"./sl\": 98,\n\t\"./sl.js\": 98,\n\t\"./sq\": 99,\n\t\"./sq.js\": 99,\n\t\"./sr\": 101,\n\t\"./sr-cyrl\": 100,\n\t\"./sr-cyrl.js\": 100,\n\t\"./sr.js\": 101,\n\t\"./ss\": 102,\n\t\"./ss.js\": 102,\n\t\"./sv\": 103,\n\t\"./sv.js\": 103,\n\t\"./sw\": 104,\n\t\"./sw.js\": 104,\n\t\"./ta\": 105,\n\t\"./ta.js\": 105,\n\t\"./te\": 106,\n\t\"./te.js\": 106,\n\t\"./tet\": 107,\n\t\"./tet.js\": 107,\n\t\"./th\": 108,\n\t\"./th.js\": 108,\n\t\"./tl-ph\": 109,\n\t\"./tl-ph.js\": 109,\n\t\"./tlh\": 110,\n\t\"./tlh.js\": 110,\n\t\"./tr\": 111,\n\t\"./tr.js\": 111,\n\t\"./tzl\": 112,\n\t\"./tzl.js\": 112,\n\t\"./tzm\": 114,\n\t\"./tzm-latn\": 113,\n\t\"./tzm-latn.js\": 113,\n\t\"./tzm.js\": 114,\n\t\"./uk\": 115,\n\t\"./uk.js\": 115,\n\t\"./ur\": 116,\n\t\"./ur.js\": 116,\n\t\"./uz\": 118,\n\t\"./uz-latn\": 117,\n\t\"./uz-latn.js\": 117,\n\t\"./uz.js\": 118,\n\t\"./vi\": 119,\n\t\"./vi.js\": 119,\n\t\"./x-pseudo\": 120,\n\t\"./x-pseudo.js\": 120,\n\t\"./yo\": 121,\n\t\"./yo.js\": 121,\n\t\"./zh-cn\": 122,\n\t\"./zh-cn.js\": 122,\n\t\"./zh-hk\": 123,\n\t\"./zh-hk.js\": 123,\n\t\"./zh-tw\": 124,\n\t\"./zh-tw.js\": 124\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 277;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale ^\\.\\/.*$\n// module id = 277\n// module chunks = 0","module.exports = \"<div class=\\\"input-group date\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\">\\n    <div class=\\\"input-group-addon\\\">\\n        <span class=\\\"icon-calendar\\\"></span>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./omod/src/main/web/dashboardwidgets/datepicker/datepicker.html\n// module id = 279\n// module chunks = 0","module.exports = \"<ul>\\n    <li ng-repeat=\\\"obs in $ctrl.obs\\\">\\n        <div style=\\\"display: block; overflow: hidden; padding-right: 5px; padding-bottom: 2px\\\">\\n            <span style=\\\"float: left\\\">\\n                {{obs.concept.name.display}}: <strong>{{obs.value}}</strong>\\n            </span>\\n            <span style=\\\"float: right; font-size: small; color: #939393\\\">\\n                {{$ctrl.widgetsCommons.dateToDaysAgoMessage(obs.obsDatetime)}}\\n            </span>\\n        </div>\\n    </li>\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./omod/src/main/web/dashboardwidgets/latestobsforconceptlist/latestobsforconceptlist.html\n// module id = 280\n// module chunks = 0","module.exports = \"<table ng-if=\\\"$ctrl.encounters.length != 0\\\">\\n    <thead>\\n        <tr>\\n            <th>Encounter</th>\\n            <th ng-repeat=\\\"concept in $ctrl.concepts\\\">{{concept.display}}</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr ng-repeat=\\\"encounter in $ctrl.encounters| orderBy: '-encounterDatetime'\\\">\\n            <th style=\\\"white-space: nowrap;\\\">{{encounter.encounterDatetime | date: $ctrl.config.dateFormat}}</th>\\n            <th ng-repeat=\\\"ob in encounter.obs\\\">\\n                {{ob.value}}\\n            </th>\\n        </tr>\\n    </tbody>\\n</table>\\n<p ng-if=\\\"$ctrl.encounters.length == 0\\\">None</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./omod/src/main/web/dashboardwidgets/obsacrossencounters/obsacrossencounters.html\n// module id = 281\n// module chunks = 0","module.exports = \"<div ng-if=\\\"$ctrl.series.length > 0\\\">\\n    <div style=\\\"padding-bottom: 10px\\\">\\n        <strong>\\n            {{$ctrl.concept.display}}\\n        </strong>\\n    </div>\\n    <canvas class=\\\"chart chart-line\\\" chart-data=\\\"$ctrl.data\\\" chart-labels=\\\"$ctrl.labels\\\"\\n            chart-series=\\\"$ctrl.series\\\"></canvas>\\n</div>\\n<div ng-if=\\\"$ctrl.series.length === 0\\\">\\n    None\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./omod/src/main/web/dashboardwidgets/obsgraph/obsgraph.html\n// module id = 282\n// module chunks = 0","module.exports = \"<!-- NOTE: work-in-progress, consider this not yet an \\\"official\\\" release of this widgets, future changes may not be backwards-compatible and change functionality signficantly -->\\n\\n<!-- TODO move styles to separate file? -->\\n\\n<style>\\n    #cancel-button {\\n        padding: 2px 5px;\\n        margin: 5px;\\n        font-size: 0.8em;;\\n    }\\n\\n    #enroll-button {\\n        padding: 2px 5px;\\n        margin: 5px;\\n        font-size: 0.8em;;\\n    }\\n</style>\\n<ul>\\n    <li ng-show=\\\"$ctrl.patientPrograms.length != 0\\\" ng-repeat=\\\"patientProgram in $ctrl.patientPrograms | orderBy: '-dateEnrolled'\\\">\\n        <a ng-click=\\\"$ctrl.gotoProgramDashboard(patientProgram.program.uuid)\\\">\\n            {{ patientProgram.program.display }}\\n        </a>\\n\\n        <div ng-show=\\\"!patientProgram.dateCompleted\\\" class=\\\"tag\\\">{{ patientProgram.dateEnrolled | date:$ctrl.dateFormat }} - {{'coreapps.dashboardwidgets.programs.current' | translate }}</div>\\n        <div ng-show=\\\"patientProgram.dateCompleted\\\" class=\\\"tag\\\">{{ patientProgram.dateEnrolled | date:$ctrl.dateFormat }} - {{ patientProgram.dateCompleted | date:$ctrl.dateFormat }}</div>\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.patientPrograms.length == 0\\\">\\n        {{'coreapps.none' | translate }}\\n    </li>\\n\\n</ul>\\n\\n\\n<div ng-show=\\\"$ctrl.canEnrollInProgram && !$ctrl.showAddProgram && $ctrl.config.enableProgramDashboards && $ctrl.unenrolledPrograms && $ctrl.unenrolledPrograms.length > 0\\\">\\n    <a class=\\\"add-link\\\" ng-click=\\\"$ctrl.addProgram()\\\">\\n        <i class=\\\"icon-plus-sign\\\" title=\\\"{{'coreapps.dashboardwidgets.programs.addProgram' | translate }}\\\"/>\\n    </a>\\n</div>\\n\\n<div ng-show=\\\"$ctrl.showAddProgram\\\">\\n    <div>\\n        <select  ng-model=\\\"$ctrl.input.program\\\"\\n                 ng-options=\\\"program.uuid as program.display for program in $ctrl.unenrolledPrograms\\\">\\n            <option value=\\\"\\\">{{'coreapps.dashboardwidgets.programs.selectProgram' | translate }}:</option>\\n        </select>\\n        <br/>\\n    </div>\\n    <div>\\n        <button id=\\\"enroll-button\\\" class=\\\"confirm\\\" ng-click=\\\"$ctrl.gotoProgramDashboard()\\\">{{'coreapps.enroll' | translate }}</button>\\n        <button id=\\\"cancel-button\\\" class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelAddProgram()\\\">{{'coreapps.cancel' | translate }}</button>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./omod/src/main/web/dashboardwidgets/programs/programs.html\n// module id = 283\n// module chunks = 0","module.exports = \"<ul>\\n    <li>{{'coreapps.dashboardwidgets.programstatistics.currentlyEnrolled' | translate }}: {{  $ctrl.currentlyEnrolled != null ? $ctrl.currentlyEnrolled : 'coreapps.dashboardwidgets.programstatistics.loading' | translate }}</li>\\n    <li>{{'coreapps.dashboardwidgets.programstatistics.everEnrolled' | translate }}: {{  $ctrl.everEnrolled != null ? $ctrl.everEnrolled : 'coreapps.dashboardwidgets.programstatistics.loading' | translate }}</li>\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./omod/src/main/web/dashboardwidgets/programstatistics/programstatistics.html\n// module id = 284\n// module chunks = 0","module.exports = \"<!-- TODO: move css to separate file? the the \\\"workflow-header\\\" is a super hack, should be fixed by someone who understands css bettter -->\\n<!-- input-group-addon is to fix alignment of calendar icons on date pickers -->\\n\\n<style>\\n\\n    .input-group-addon {\\n        display: inline-block;;\\n    }\\n\\n    input {\\n        width: 80%\\n    }\\n\\n    .programstatus-fieldset, .programstatus-field {\\n        padding-top: 2px;\\n        padding-bottom: 2px;\\n    }\\n\\n    .workflow-section {\\n        padding-top: 5px;\\n    }\\n\\n    .workflow-table {\\n        border: none !important;\\n        font-size: 0.8em !important;\\n        background: #f9f9f9 !important;\\n    }\\n\\n    .workflow-header  {\\n        width: 100% !important;\\n        text-align: left !important;\\n    }\\n\\n    .workflow-cell {\\n        border: none !important;\\n        font-size: 0.8em !important;\\n    }\\n\\n    .hidden {\\n        visibility: hidden;\\n    }\\n\\n    .center {\\n        margin-left: 0px;\\n        margin-right: 0px;\\n        text-align: center;\\n    }\\n\\n    .bold {\\n        font-weight: bold;\\n    }\\n\\n</style>\\n\\n<div ng-show=\\\"$ctrl.deleted\\\">\\n    {{ 'coreapps.dashboardwidgets.programstatus.programDeleted' | translate }}\\n</div>\\n\\n<div ng-show=\\\"$ctrl.loaded && !$ctrl.deleted\\\">\\n    <div ng-show=\\\"$ctrl.canEnrollInProgram && !$ctrl.patientProgram && $ctrl.expanded.enrollment\\\">\\n        <fieldset class=\\\"programstatus-fieldset\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.enrollmentdate' | translate }}</h3>\\n\\t\\t\\t<p class=\\\"programstatus-field\\\">\\n                <openmrs-datepicker ng-model=\\\"$ctrl.input.dateEnrolled\\\"\\n                                    format=\\\"{{$ctrl.dateFormat}}\\\"\\n                                    start-date=\\\"$ctrl.minEnrollmentDate\\\"\\n                                    end-date=\\\"$ctrl.today\\\"/>\\n            </p>\\n        </fieldset>\\n        <fieldset class=\\\"programstatus-fieldset\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.enrollmentlocation' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <select ng-model=\\\"$ctrl.input.enrollmentLocation\\\"\\n                        ng-options=\\\"location.uuid as location.display for location in $ctrl.programLocations\\\">\\n                </select>\\n            </p>\\n        </fieldset>\\n        <div ng-repeat=\\\"workflow in $ctrl.program.workflows track by $index\\\" ng-show=\\\"$ctrl.program.workflows.length != 0\\\">\\n            <fieldset class=\\\"programstatus-fieldset\\\">\\n                <h3>{{ workflow.concept.display }}</h3>\\n                <p class=\\\"programstatus-field\\\">\\n                    <select ng-model=\\\"$ctrl.input.initialWorkflowStateByWorkflow[workflow.uuid].state\\\"\\n                            ng-options=\\\"state.uuid as state.concept.display for state in $ctrl.statesByWorkflow[workflow.uuid] | filter: $ctrl.isInitialState() | orderBy: 'concept.display' \\\">\\n                        <option value=\\\"\\\"></option>\\n                    </select>\\n                </p>\\n            </fieldset>\\n        </div>\\n        <div class=\\\"center\\\">\\n            <button class=\\\"confirm\\\" ng-disabled=\\\"!$ctrl.enrollmentValid()\\\" ng-click=\\\"$ctrl.enrollInProgram()\\\">{{'coreapps.enroll' | translate }}</button>\\n            <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelEnrollment()\\\">{{'coreapps.cancel' | translate }}</button>\\n        </div>\\n    </div>\\n\\n    <div ng-show=\\\"$ctrl.canEnrollInProgram && !$ctrl.patientProgram && !$ctrl.expanded.enrollment\\\">\\n        <div class=\\\"center\\\">\\n            {{ 'coreapps.dashboardwidgets.programstatus.notCurrentlyEnrolled' | translate }}\\n        </div>\\n        <div class=\\\"center\\\">\\n            <button class=\\\"confirm\\\" ng-click=\\\"$ctrl.expanded.enrollment = true\\\">{{'coreapps.enroll' | translate }}</button>\\n        </div>\\n    </div>\\n\\n    <div ng-show=\\\"$ctrl.patientProgram\\\">\\n\\n        <!-- VIEW sections -->\\n\\n        <fieldset  class=\\\"programstatus-fieldset\\\" ng-show=\\\"!$ctrl.edit.enrollment\\\">\\n            <i ng-show=\\\"$ctrl.canDeleteProgram && !$ctrl.inEditMode() && !$ctrl.inConfirmDelete()\\\" ng-click=\\\"$ctrl.deletePatientProgram()\\\" class=\\\"icon-remove right\\\"/>\\n            <i ng-show=\\\"$ctrl.canEditProgram && !$ctrl.inEditMode() && !$ctrl.inConfirmDelete()\\\" ng-click=\\\"$ctrl.toggleEditEnrollment()\\\" class=\\\"icon-pencil right\\\"/>\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.enrolled' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">{{ $ctrl.patientProgram.dateEnrolled | date:$ctrl.dateFormat }}</p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\"  ng-show=\\\"!$ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.location' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">{{ $ctrl.patientProgram.location.display }}</p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"!$ctrl.edit.enrollment && $ctrl.programIsCompleted()\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.completed' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">{{ $ctrl.patientProgram.dateCompleted | date:$ctrl.dateFormat }}</p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.programOutcomes && !$ctrl.edit.enrollment && $ctrl.programIsCompleted()\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.outcome' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">{{ $ctrl.patientProgram.outcome.display }}</p>\\n        </fieldset>\\n\\n        <!-- EDIT sections -->\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.enrolled' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <openmrs-datepicker ng-model=\\\"$ctrl.input.dateEnrolled\\\"\\n                                    format=\\\"{{$ctrl.dateFormat}}\\\"\\n                                    start-date=\\\"$ctrl.minEnrollmentDate\\\"\\n                                    end-date=\\\"$ctrl.input.dateCompleted ? $ctrl.input.dateCompleted : $ctrl.today\\\"\\n                                    language=\\\"{{$ctrl.language}}\\\"/>\\n            </p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.location' | translate }}</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <select ng-model=\\\"$ctrl.input.enrollmentLocation\\\"\\n                    ng-options=\\\"location.uuid as location.display for location in $ctrl.programLocations\\\">\\n                </select>\\n            </p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.completed' | translate }}:</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <openmrs-datepicker ng-model=\\\"$ctrl.input.dateCompleted\\\"\\n                                format=\\\"{{$ctrl.dateFormat}}\\\"\\n                                start-date=\\\"$ctrl.getMostRecentStateChangeDate() ? $ctrl.getMostRecentStateChangeDate() : $ctrl.input.dateEnrolled\\\"\\n                                end-date=\\\"$ctrl.maxCompletionDate ? $ctrl.maxCompletionDate : $ctrl.today\\\"\\n                                clear-btn=\\\"true\\\"\\n                                language=\\\"{{$ctrl.language}}\\\"/>\\n            </p>\\n        </fieldset>\\n\\n        <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.programOutcomes && $ctrl.edit.enrollment\\\">\\n            <h3>{{'coreapps.dashboardwidgets.programstatus.outcome' | translate }}:</h3>\\n            <p class=\\\"programstatus-field\\\">\\n                <select ng-model=\\\"$ctrl.input.outcome\\\"\\n                    ng-options=\\\"outcome.uuid as outcome.display for outcome in $ctrl.programOutcomes | orderBy: 'display' \\\">\\n                    <option value=\\\"\\\"></option>\\n                </select>\\n            </p>\\n        </fieldset>\\n\\n        <div ng-show=\\\"$ctrl.edit.enrollment\\\" class=\\\"center\\\">\\n            <button class=\\\"confirm\\\" ng-disabled=\\\"!$ctrl.enrollmentValid()\\\" ng-click=\\\"$ctrl.update()\\\">{{'coreapps.save' | translate }}</button>  <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelEdit()\\\">{{'coreapps.cancel' | translate }}</button>\\n        </div>\\n\\n        <!-- DELETE confirmation section -->\\n\\n        <div ng-show=\\\"$ctrl.confirmDelete.enrollment\\\" class=\\\"center\\\">\\n            {{'coreapps.dashboardwidgets.programstatus.confirmDelete' | translate }}\\n            <br/><br/>\\n            <button class=\\\"confirm\\\" ng-click=\\\"$ctrl.deletePatientProgram()\\\">{{'coreapps.delete' | translate }}</button>  <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelDelete()\\\">{{'coreapps.cancel' | translate }}</button>\\n        </div>\\n\\n        <!-- workflow sections -->\\n\\n        <div class=\\\"workflow-section\\\" ng-repeat=\\\"workflow in $ctrl.program.workflows track by $index\\\" ng-show=\\\"$ctrl.program.workflows.length != 0\\\">\\n            <!-- TODO review the use of the \\\"isToday\\\" functionality -->\\n            <h3 class=\\\"workflow-header\\\">{{ workflow.concept.display }}\\n                <i ng-show=\\\"$ctrl.canEditProgram && !$ctrl.inEditMode() && !$ctrl.inConfirmDelete() && !$ctrl.isToday($ctrl.sortedStatesByWorkflow[workflow.uuid].startDate)\\\" ng-click=\\\"$ctrl.toggleEditWorkflow(workflow.uuid)\\\" class=\\\"icon-pencil\\\"/>\\n            </h3>\\n\\n            <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.workflow[workflow.uuid]\\\">\\n                <h3>{{'coreapps.dashboardwidgets.programstatus.transitionTo' | translate }}</h3>\\n                <p class=\\\"programstatus-field\\\">\\n                    <select ng-model=\\\"$ctrl.input.changeToStateByWorkflow[workflow.uuid].state\\\"\\n                            ng-options=\\\"state.uuid as state.concept.display for state in $ctrl.statesByWorkflow[workflow.uuid] | filter: $ctrl.isNotCurrentState(workflow) | orderBy: 'concept.display' \\\">\\n                        <option value=\\\"\\\"></option>\\n                    </select>\\n                </p>\\n            </fieldset>\\n\\n            <fieldset class=\\\"programstatus-fieldset\\\" ng-show=\\\"$ctrl.edit.workflow[workflow.uuid]\\\">\\n                <h3>{{'coreapps.on' | translate }}</h3>\\n                <p class=\\\"programstatus-field\\\">\\n                    <openmrs-datepicker ng-model=\\\"$ctrl.input.changeToStateByWorkflow[workflow.uuid].date\\\"\\n                                        format=\\\"{{$ctrl.dateFormat}}\\\"\\n                                        start-date=\\\"$ctrl.sortedStatesByWorkflow[workflow.uuid] ? $ctrl.sortedStatesByWorkflow[workflow.uuid][0].dayAfterStartDate : $ctrl.input.dateEnrolled\\\"\\n                                        end-date=\\\"$ctrl.programIsCompleted() ? $ctrl.patientProgram.dateCompleted : $ctrl.today\\\"\\n                                        language=\\\"{{$ctrl.language}}\\\"/>\\n                </p>\\n            </fieldset>\\n\\n            <div ng-show=\\\"$ctrl.edit.workflow[workflow.uuid]\\\" class=\\\"center\\\">\\n                <button class=\\\"confirm\\\" ng-disabled=\\\"!$ctrl.workflowTransitionValid(workflow.uuid)\\\" ng-click=\\\"$ctrl.updatePatientState(workflow.uuid)\\\">{{'coreapps.save' | translate }}</button>  <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.toggleEditWorkflow(workflow.uuid)\\\">{{'coreapps.cancel' | translate }}</button>\\n            </div>\\n\\n            <table class=\\\"workflow-table\\\">\\n                <tr ng-repeat=\\\"row in $ctrl.sortedStatesByWorkflow[workflow.uuid]\\\" ng-show=\\\"$first || $ctrl.expanded.workflow[workflow.uuid]\\\">\\n                    <td class=\\\"workflow-cell\\\">\\n                        {{ row.startDate | date:$ctrl.dateFormat }}\\n                        <span ng-show=\\\"!$first\\\">{{'coreapps.to' | translate}} {{ row.endDate | date:$ctrl.dateFormat }} </span>\\n                    </td>\\n                    <td class=\\\"workflow-cell\\\" ng-class=\\\"{bold:$first}\\\">\\n                        {{ row.state.concept.display }}\\n                    </td>\\n                    <td class=\\\"workflow-cell\\\">\\n                        <i ng-show=\\\"$first && $ctrl.canEditProgram  && !$ctrl.inEditMode() && !$ctrl.inConfirmDelete()\\\" class=\\\"icon-remove right\\\" ng-click=\\\"$ctrl.deleteMostRecentPatientState(workflow.uuid)\\\"/>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td class=\\\"workflow-cell\\\" colspan=\\\"4\\\" ng-show=\\\"!$ctrl.expanded.workflow[workflow.uuid] && $ctrl.sortedStatesByWorkflow[workflow.uuid] && $ctrl.sortedStatesByWorkflow[workflow.uuid].length > 1\\\">\\n                        <a ng-click=\\\"$ctrl.toggleExpandedWorkflow(workflow.uuid)\\\">{{ 'coreapps.showMore' | translate }}</a>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td class=\\\"workflow-cell\\\" colspan=\\\"4\\\" ng-show=\\\"$ctrl.expanded.workflow[workflow.uuid] && $ctrl.sortedStatesByWorkflow[workflow.uuid] && $ctrl.sortedStatesByWorkflow[workflow.uuid].length > 1\\\">\\n                        <a ng-click=\\\"$ctrl.toggleExpandedWorkflow(workflow.uuid)\\\">{{ 'coreapps.showLess' | translate }}</a>\\n                    </td>\\n                </tr>\\n            </table>\\n\\n            <!-- DELETE  workflow confirmation section -->\\n\\n            <div ng-show=\\\"$ctrl.confirmDelete.workflow[workflow.uuid]\\\" class=\\\"center\\\">\\n                {{'coreapps.dashboardwidgets.programstatus.confirmWorkflowStateDelete' | translate }}\\n                <br/><br/>\\n                <button class=\\\"confirm\\\" ng-click=\\\"$ctrl.deleteMostRecentPatientState(workflow.uuid)\\\">{{'coreapps.delete' | translate }}</button>  <button class=\\\"cancel\\\" ng-click=\\\"$ctrl.cancelDelete()\\\">{{'coreapps.cancel' | translate }}</button>\\n            </div>\\n\\n        </div>\\n\\n\\n\\n    </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./omod/src/main/web/dashboardwidgets/programstatus/programstatus.html\n// module id = 285\n// module chunks = 0","module.exports = \"<ul>\\n    <li class=\\\"relationship-li\\\" ng-show=\\\"$ctrl.relationships.length != 0\\\" ng-repeat=\\\"relationship in $ctrl.relationships track by $index\\\">\\n        <div class=\\\"relationship-wrapper\\\">\\n            <div class=\\\"fifty-percent relationship-inner\\\">\\n                <span>\\n                    <a ng-show=\\\"relationship.isPatient || relationship.isProvider\\\" ng-click=\\\"$ctrl.goTo(relationship.toPerson.uuid)\\\">\\n                        {{relationship.toPerson.display ? relationship.toPerson.display : relationship.toPerson.personName.display}}\\n                    </a>\\n                    <span ng-show=\\\"!relationship.isPatient && !relationship.isProvider\\\">{{relationship.toPerson.display ? relationship.toPerson.display : relationship.toPerson.personName.display}}</span>\\n                </span>\\n            </div>\\n            <div class=\\\"tag forty-percent relationship-inner\\\">\\n                <span ng-show=\\\"$ctrl.hasEditPrivileges == true && $ctrl.removeFlag == false && $ctrl.edit == false\\\" class=\\\"remove-tag\\\">\\n                    <a ng-show=\\\"relationship.isPatient\\\" class=\\\"remove-link\\\" ng-click=\\\"$ctrl.removeRelationship(relationship.uuid)\\\">\\n                        <i class=\\\"icon-remove\\\" title=\\\"Remove relationship\\\"></i>\\n                    </a>\\n                </span>\\n                {{relationship.type}}\\n            </div>\\n        </div>\\n    </li>\\n    <p ng-show=\\\"$ctrl.relationships.length == 0\\\">\\n        {{ 'coreapps.none' | translate }}\\n    </p>\\n\\n    <li ng-show=\\\"$ctrl.removeFlag\\\">\\n        {{ 'coreapps.dashboardwidgets.relationships.confirmRemove' | translate }}\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.hasEditPrivileges && !$ctrl.edit && !$ctrl.removeFlag\\\">\\n        <a class=\\\"add-link\\\" ng-click=\\\"$ctrl.addRelationship()\\\">\\n            <i class=\\\"icon-plus-sign\\\" title=\\\"Add relationship\\\"></i>\\n        </a>\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.edit\\\">\\n        {{ 'coreapps.dashboardwidgets.relationships.add' | translate }}\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.edit\\\">\\n        <p class=\\\"left\\\">\\n        <select class=\\\"relationship-input\\\" ng-options=\\\"type as type.name for type in $ctrl.types\\\"\\n                ng-model=\\\"$ctrl.relationshipType\\\" ng-change=\\\"$ctrl.updateRelationshipType()\\\">\\n            <option value=\\\"\\\">{{ 'coreapps.dashboardwidgets.relationships.whatType' | translate }}</option>\\n        </select>\\n\\n        </p>\\n    </li>\\n    <li ng-show=\\\"$ctrl.showFindOtherPerson\\\">\\n        &nbsp;\\n    </li>\\n    <li ng-show=\\\"$ctrl.showFindOtherPerson\\\">\\n        <p class=\\\"left\\\">\\n            <input type=\\\"text\\\" class=\\\"person-typeahead relationship-input\\\" placeholder=\\\"{{ 'coreapps.relationships.find' | translate }} {{ $ctrl.relationshipType.name }}\\\"\\n                   ng-model=\\\"$ctrl.searchPerson\\\"\\n                   typeahead-no-results=\\\"noResults\\\"\\n                   ng-change=\\\"$ctrl.searchPersons()\\\"\\n                   uib-typeahead=\\\"person as person.display + ' (' + person.gender + ', ' + (person.age ? person.age:'') + ')' for person in $ctrl.relatedPersons\\\"\\n                   typeahead-wait-ms=\\\"250\\\"\\n                   typeahead-select-on-exact=\\\"true\\\"\\n                   typeahead-min-length=\\\"3\\\"\\n                   typeahead-on-select=\\\"$ctrl.onSelect($item, $model, $label)\\\"\\n                   />\\n        </p>\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.edit\\\">\\n        <p>\\n        <div>\\n            <button class=\\\"tag\\\" ng-show=\\\"$ctrl.showSaveButton\\\" ng-click=\\\"$ctrl.save()\\\">{{ 'coreapps.save' | translate }}</button>\\n            <button class=\\\"cancel-tag\\\" ng-click=\\\"$ctrl.cancel()\\\">{{ 'coreapps.cancel' | translate }}</button>\\n        </div>\\n        </p>\\n    </li>\\n\\n    <li ng-show=\\\"$ctrl.removeFlag\\\">\\n        <p>\\n        <div>\\n            <button class=\\\"tag\\\" ng-click=\\\"$ctrl.remove()\\\">{{ 'coreapps.delete' | translate }}</button>\\n            <button class=\\\"cancel-tag\\\" ng-click=\\\"$ctrl.cancel()\\\">{{ 'coreapps.cancel' | translate }}</button>\\n        </div>\\n        </p>\\n    </li>\\n\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./omod/src/main/web/dashboardwidgets/relationships/relationships.html\n// module id = 286\n// module chunks = 0","module.exports = \"<ul>\\n    <li ng-if=\\\"$ctrl.visits.length != 0\\\" ng-repeat=\\\"visit in $ctrl.visits track by $index\\\">\\n        <a href=\\\"{{$ctrl.serverUrl}}/coreapps/patientdashboard/patientDashboard.page?patientId={{$ctrl.config.patientUuid}}&visitId={{visit.uuid}}\\\">\\n            {{visit.startDatetime | date: $ctrl.config.dateFormat}}\\n        </a>\\n        <div class=\\\"tag\\\" ng-if=\\\"visit.encounterType !== ''\\\">{{visit.encounterType}}</div>\\n    </li>\\n    <p ng-if=\\\"$ctrl.visits.length == 0\\\">\\n        None\\n    </p>\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./omod/src/main/web/dashboardwidgets/visitbyencountertype/visitbyencountertype.html\n// module id = 287\n// module chunks = 0","import angular from 'angular';\nimport WidgetsCommons from './dashboardwidgetscommons.service';\n\nlet services = angular.module('dashboardwidgets.services', []);\n\nservices.service('widgetsCommons', WidgetsCommons);\n \nexport default services.name;\n\n\n// WEBPACK FOOTER //\n// ./omod/src/main/web/dashboardwidgets/dashboardwidgets.services.js"],"sourceRoot":""}